// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const MAXVALUE = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const TRIGGERS = 57562
const FUNCTION = 57563
const STATUS = 57564
const VARIABLES = 57565
const WARNINGS = 57566
const ERRORS = 57567
const KILL = 57568
const CONNECTION = 57569
const SEQUENCE = 57570
const ENABLE = 57571
const DISABLE = 57572
const EACH = 57573
const ROW = 57574
const BEFORE = 57575
const FOLLOWS = 57576
const PRECEDES = 57577
const DEFINER = 57578
const INVOKER = 57579
const INOUT = 57580
const OUT = 57581
const DETERMINISTIC = 57582
const CONTAINS = 57583
const READS = 57584
const MODIFIES = 57585
const SQL = 57586
const SECURITY = 57587
const TEMPORARY = 57588
const ALGORITHM = 57589
const MERGE = 57590
const TEMPTABLE = 57591
const UNDEFINED = 57592
const EVENT = 57593
const EVENTS = 57594
const SCHEDULE = 57595
const EVERY = 57596
const STARTS = 57597
const ENDS = 57598
const COMPLETION = 57599
const PRESERVE = 57600
const CASCADED = 57601
const INSTANT = 57602
const INPLACE = 57603
const COPY = 57604
const DISCARD = 57605
const IMPORT = 57606
const SHARED = 57607
const EXCLUSIVE = 57608
const WITHOUT = 57609
const VALIDATION = 57610
const COALESCE = 57611
const EXCHANGE = 57612
const REBUILD = 57613
const REMOVE = 57614
const PARTITIONING = 57615
const CLASS_ORIGIN = 57616
const SUBCLASS_ORIGIN = 57617
const MESSAGE_TEXT = 57618
const MYSQL_ERRNO = 57619
const CONSTRAINT_CATALOG = 57620
const CONSTRAINT_SCHEMA = 57621
const CONSTRAINT_NAME = 57622
const CATALOG_NAME = 57623
const SCHEMA_NAME = 57624
const TABLE_NAME = 57625
const COLUMN_NAME = 57626
const CURSOR_NAME = 57627
const SIGNAL = 57628
const RESIGNAL = 57629
const SQLSTATE = 57630
const DECLARE = 57631
const CONDITION = 57632
const CURSOR = 57633
const CONTINUE = 57634
const EXIT = 57635
const UNDO = 57636
const HANDLER = 57637
const FOUND = 57638
const SQLWARNING = 57639
const SQLEXCEPTION = 57640
const FETCH = 57641
const OPEN = 57642
const CLOSE = 57643
const LOOP = 57644
const LEAVE = 57645
const ITERATE = 57646
const REPEAT = 57647
const UNTIL = 57648
const WHILE = 57649
const DO = 57650
const RETURN = 57651
const USER = 57652
const IDENTIFIED = 57653
const ROLE = 57654
const REUSE = 57655
const GRANT = 57656
const GRANTS = 57657
const REVOKE = 57658
const NONE = 57659
const ATTRIBUTE = 57660
const RANDOM = 57661
const PASSWORD = 57662
const INITIAL = 57663
const AUTHENTICATION = 57664
const SSL = 57665
const X509 = 57666
const CIPHER = 57667
const ISSUER = 57668
const SUBJECT = 57669
const ACCOUNT = 57670
const EXPIRE = 57671
const NEVER = 57672
const OPTION = 57673
const OPTIONAL = 57674
const ADMIN = 57675
const PRIVILEGES = 57676
const MAX_QUERIES_PER_HOUR = 57677
const MAX_UPDATES_PER_HOUR = 57678
const MAX_CONNECTIONS_PER_HOUR = 57679
const MAX_USER_CONNECTIONS = 57680
const FLUSH = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const REQUIRE = 57684
const PROXY = 57685
const ROUTINE = 57686
const TABLESPACE = 57687
const CLIENT = 57688
const SLAVE = 57689
const EXECUTE = 57690
const FILE = 57691
const RELOAD = 57692
const REPLICATION = 57693
const SHUTDOWN = 57694
const SUPER = 57695
const USAGE = 57696
const LOGS = 57697
const ENGINE = 57698
const ERROR = 57699
const GENERAL = 57700
const HOSTS = 57701
const OPTIMIZER_COSTS = 57702
const RELAY = 57703
const SLOW = 57704
const USER_RESOURCES = 57705
const NO_WRITE_TO_BINLOG = 57706
const CHANNEL = 57707
const APPLICATION_PASSWORD_ADMIN = 57708
const AUDIT_ABORT_EXEMPT = 57709
const AUDIT_ADMIN = 57710
const AUTHENTICATION_POLICY_ADMIN = 57711
const BACKUP_ADMIN = 57712
const BINLOG_ADMIN = 57713
const BINLOG_ENCRYPTION_ADMIN = 57714
const CLONE_ADMIN = 57715
const CONNECTION_ADMIN = 57716
const ENCRYPTION_KEY_ADMIN = 57717
const FIREWALL_ADMIN = 57718
const FIREWALL_EXEMPT = 57719
const FIREWALL_USER = 57720
const FLUSH_OPTIMIZER_COSTS = 57721
const FLUSH_STATUS = 57722
const FLUSH_TABLES = 57723
const FLUSH_USER_RESOURCES = 57724
const GROUP_REPLICATION_ADMIN = 57725
const GROUP_REPLICATION_STREAM = 57726
const INNODB_REDO_LOG_ARCHIVE = 57727
const INNODB_REDO_LOG_ENABLE = 57728
const NDB_STORED_USER = 57729
const PASSWORDLESS_USER_ADMIN = 57730
const PERSIST_RO_VARIABLES_ADMIN = 57731
const REPLICATION_APPLIER = 57732
const REPLICATION_SLAVE_ADMIN = 57733
const RESOURCE_GROUP_ADMIN = 57734
const RESOURCE_GROUP_USER = 57735
const ROLE_ADMIN = 57736
const SENSITIVE_VARIABLES_OBSERVER = 57737
const SESSION_VARIABLES_ADMIN = 57738
const SET_USER_ID = 57739
const SHOW_ROUTINE = 57740
const SKIP_QUERY_REWRITE = 57741
const SYSTEM_VARIABLES_ADMIN = 57742
const TABLE_ENCRYPTION_ADMIN = 57743
const TP_CONNECTION_ADMIN = 57744
const VERSION_TOKEN_ADMIN = 57745
const XA_RECOVER_ADMIN = 57746
const REPLICA = 57747
const REPLICAS = 57748
const SOURCE = 57749
const STOP = 57750
const RESET = 57751
const FILTER = 57752
const LOG = 57753
const MASTER = 57754
const SOURCE_HOST = 57755
const SOURCE_USER = 57756
const SOURCE_PASSWORD = 57757
const SOURCE_PORT = 57758
const SOURCE_LOG_FILE = 57759
const SOURCE_LOG_POS = 57760
const SOURCE_CONNECT_RETRY = 57761
const SOURCE_RETRY_COUNT = 57762
const SOURCE_AUTO_POSITION = 57763
const REPLICATE_DO_TABLE = 57764
const REPLICATE_IGNORE_TABLE = 57765
const BEGIN = 57766
const START = 57767
const TRANSACTION = 57768
const COMMIT = 57769
const ROLLBACK = 57770
const SAVEPOINT = 57771
const WORK = 57772
const RELEASE = 57773
const CHAIN = 57774
const CONSISTENT = 57775
const SNAPSHOT = 57776
const BIT = 57777
const TINYINT = 57778
const SMALLINT = 57779
const MEDIUMINT = 57780
const INT = 57781
const INTEGER = 57782
const BIGINT = 57783
const INTNUM = 57784
const SERIAL = 57785
const INT1 = 57786
const INT2 = 57787
const INT3 = 57788
const INT4 = 57789
const INT8 = 57790
const REAL = 57791
const DOUBLE = 57792
const FLOAT_TYPE = 57793
const DECIMAL = 57794
const NUMERIC = 57795
const DEC = 57796
const FIXED = 57797
const PRECISION = 57798
const TIME = 57799
const TIMESTAMP = 57800
const DATETIME = 57801
const CHAR = 57802
const VARCHAR = 57803
const BOOL = 57804
const CHARACTER = 57805
const VARBINARY = 57806
const NCHAR = 57807
const NVARCHAR = 57808
const NATIONAL = 57809
const VARYING = 57810
const VARCHARACTER = 57811
const TEXT = 57812
const TINYTEXT = 57813
const MEDIUMTEXT = 57814
const LONGTEXT = 57815
const LONG = 57816
const BLOB = 57817
const TINYBLOB = 57818
const MEDIUMBLOB = 57819
const LONGBLOB = 57820
const JSON = 57821
const ENUM = 57822
const GEOMETRY = 57823
const POINT = 57824
const LINESTRING = 57825
const POLYGON = 57826
const GEOMETRYCOLLECTION = 57827
const MULTIPOINT = 57828
const MULTILINESTRING = 57829
const MULTIPOLYGON = 57830
const LOCAL = 57831
const LOW_PRIORITY = 57832
const SKIP = 57833
const LOCKED = 57834
const NULLX = 57835
const AUTO_INCREMENT = 57836
const APPROXNUM = 57837
const SIGNED = 57838
const UNSIGNED = 57839
const ZEROFILL = 57840
const SRID = 57841
const COLLATION = 57842
const DATABASES = 57843
const SCHEMAS = 57844
const TABLES = 57845
const FULL = 57846
const PROCESSLIST = 57847
const COLUMNS = 57848
const FIELDS = 57849
const ENGINES = 57850
const PLUGINS = 57851
const NAMES = 57852
const CHARSET = 57853
const GLOBAL = 57854
const SESSION = 57855
const ISOLATION = 57856
const LEVEL = 57857
const READ = 57858
const WRITE = 57859
const ONLY = 57860
const REPEATABLE = 57861
const COMMITTED = 57862
const UNCOMMITTED = 57863
const SERIALIZABLE = 57864
const ENCRYPTION = 57865
const CURRENT_TIMESTAMP = 57866
const NOW = 57867
const DATABASE = 57868
const CURRENT_DATE = 57869
const CURRENT_USER = 57870
const CURRENT_TIME = 57871
const LOCALTIME = 57872
const LOCALTIMESTAMP = 57873
const UTC_DATE = 57874
const UTC_TIME = 57875
const UTC_TIMESTAMP = 57876
const REPLACE = 57877
const CONVERT = 57878
const CAST = 57879
const POSITION = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const TRIM = 57883
const LEADING = 57884
const TRAILING = 57885
const BOTH = 57886
const GROUP_CONCAT = 57887
const SEPARATOR = 57888
const TIMESTAMPADD = 57889
const TIMESTAMPDIFF = 57890
const EXTRACT = 57891
const GET_FORMAT = 57892
const OVER = 57893
const WINDOW = 57894
const GROUPING = 57895
const CURRENT = 57896
const AVG = 57897
const BIT_AND = 57898
const BIT_OR = 57899
const BIT_XOR = 57900
const COUNT = 57901
const JSON_ARRAYAGG = 57902
const JSON_OBJECTAGG = 57903
const MAX = 57904
const MIN = 57905
const STDDEV_POP = 57906
const STDDEV = 57907
const STD = 57908
const STDDEV_SAMP = 57909
const SUM = 57910
const VAR_POP = 57911
const VARIANCE = 57912
const VAR_SAMP = 57913
const CUME_DIST = 57914
const DENSE_RANK = 57915
const FIRST_VALUE = 57916
const LAG = 57917
const LAST_VALUE = 57918
const LEAD = 57919
const NTH_VALUE = 57920
const NTILE = 57921
const ROW_NUMBER = 57922
const PERCENT_RANK = 57923
const RANK = 57924
const DUAL = 57925
const JSON_TABLE = 57926
const PATH = 57927
const AVG_ROW_LENGTH = 57928
const CHECKSUM = 57929
const COMPACT = 57930
const COMPRESSED = 57931
const COMPRESSION = 57932
const DISK = 57933
const DIRECTORY = 57934
const DELAY_KEY_WRITE = 57935
const DYNAMIC = 57936
const ENGINE_ATTRIBUTE = 57937
const ENCRYPTED = 57938
const ENCRYPTION_KEY_ID = 57939
const HASH = 57940
const INSERT_METHOD = 57941
const ITEF_QUOTES = 57942
const LIST = 57943
const MIN_ROWS = 57944
const MAX_ROWS = 57945
const PACK_KEYS = 57946
const MEMORY = 57947
const PAGE_CHECKSUM = 57948
const PAGE_COMPRESSED = 57949
const PAGE_COMPRESSION_LEVEL = 57950
const PARTITIONS = 57951
const REDUNDANT = 57952
const ROW_FORMAT = 57953
const SECONDARY_ENGINE = 57954
const SECONDARY_ENGINE_ATTRIBUTE = 57955
const STATS_AUTO_RECALC = 57956
const STATS_PERSISTENT = 57957
const STATS_SAMPLE_PAGES = 57958
const STORAGE = 57959
const SUBPARTITION = 57960
const SUBPARTITIONS = 57961
const TABLE_CHECKSUM = 57962
const TRANSACTIONAL = 57963
const VERSIONING = 57964
const YES = 57965
const PREPARE = 57966
const DEALLOCATE = 57967
const MATCH = 57968
const AGAINST = 57969
const BOOLEAN = 57970
const LANGUAGE = 57971
const WITH = 57972
const QUERY = 57973
const EXPANSION = 57974
const MICROSECOND = 57975
const SECOND = 57976
const MINUTE = 57977
const HOUR = 57978
const DAY = 57979
const WEEK = 57980
const MONTH = 57981
const QUARTER = 57982
const YEAR = 57983
const SECOND_MICROSECOND = 57984
const MINUTE_MICROSECOND = 57985
const MINUTE_SECOND = 57986
const HOUR_MICROSECOND = 57987
const HOUR_SECOND = 57988
const HOUR_MINUTE = 57989
const DAY_MICROSECOND = 57990
const DAY_SECOND = 57991
const DAY_MINUTE = 57992
const DAY_HOUR = 57993
const YEAR_MONTH = 57994
const NAME = 57995
const SYSTEM = 57996
const ACCESSIBLE = 57997
const ASENSITIVE = 57998
const CUBE = 57999
const DELAYED = 58000
const DISTINCTROW = 58001
const EMPTY = 58002
const FLOAT4 = 58003
const FLOAT8 = 58004
const GET = 58005
const HIGH_PRIORITY = 58006
const INSENSITIVE = 58007
const IO_AFTER_GTIDS = 58008
const IO_BEFORE_GTIDS = 58009
const LINEAR = 58010
const MASTER_BIND = 58011
const MASTER_SSL_VERIFY_SERVER_CERT = 58012
const MIDDLEINT = 58013
const PURGE = 58014
const READ_WRITE = 58015
const RLIKE = 58016
const SENSITIVE = 58017
const SPECIFIC = 58018
const SQL_BIG_RESULT = 58019
const SQL_SMALL_RESULT = 58020
const UNUSED = 58021
const DESCRIPTION = 58022
const LATERAL = 58023
const MEMBER = 58024
const RECURSIVE = 58025
const BUCKETS = 58026
const CLONE = 58027
const COMPONENT = 58028
const DEFINITION = 58029
const ENFORCED = 58030
const NOT_ENFORCED = 58031
const EXCLUDE = 58032
const GEOMCOLLECTION = 58033
const GET_MASTER_PUBLIC_KEY = 58034
const HISTOGRAM = 58035
const HISTORY = 58036
const INACTIVE = 58037
const INVISIBLE = 58038
const MASTER_COMPRESSION_ALGORITHMS = 58039
const MASTER_PUBLIC_KEY_PATH = 58040
const MASTER_TLS_CIPHERSUITES = 58041
const MASTER_ZSTD_COMPRESSION_LEVEL = 58042
const NESTED = 58043
const NETWORK_NAMESPACE = 58044
const NOWAIT = 58045
const NULLS = 58046
const OJ = 58047
const OLD = 58048
const ORDINALITY = 58049
const ORGANIZATION = 58050
const OTHERS = 58051
const PERSIST = 58052
const PERSIST_ONLY = 58053
const PRIVILEGE_CHECKS_USER = 58054
const PROCESS = 58055
const REFERENCE = 58056
const REQUIRE_ROW_FORMAT = 58057
const RESOURCE = 58058
const RESPECT = 58059
const RESTART = 58060
const RETAIN = 58061
const SECONDARY = 58062
const SECONDARY_LOAD = 58063
const SECONDARY_UNLOAD = 58064
const THREAD_PRIORITY = 58065
const TIES = 58066
const VCPU = 58067
const VISIBLE = 58068
const INFILE = 58069
const ACTIVE = 58070
const AGGREGATE = 58071
const ANY = 58072
const ARRAY = 58073
const ASCII = 58074
const AT = 58075
const AUTOEXTEND_SIZE = 58076
const GENERATED = 58077
const ALWAYS = 58078
const STORED = 58079
const VIRTUAL = 58080
const NVAR = 58081
const PASSWORD_LOCK = 58082

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_LOG_FILE",
	"SOURCE_LOG_POS",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	760, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1791,
	200, 1812,
	-2, 331,
	-1, 62,
	241, 1171,
	242, 1171,
	-2, 1160,
	-1, 90,
	270, 331,
	-2, 1797,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 542,
	1, 2492,
	6, 2492,
	7, 2492,
	28, 2492,
	187, 2492,
	760, 2492,
	-2, 1206,
	-1, 555,
	187, 1822,
	-2, 1816,
	-1, 556,
	187, 1823,
	-2, 1817,
	-1, 661,
	1, 679,
	760, 679,
	-2, 677,
	-1, 670,
	1, 1310,
	8, 1310,
	9, 1310,
	10, 1310,
	17, 1310,
	18, 1310,
	19, 1310,
	20, 1310,
	22, 1310,
	24, 1310,
	34, 1310,
	35, 1310,
	64, 1310,
	65, 1310,
	66, 1310,
	67, 1310,
	68, 1310,
	70, 1310,
	71, 1310,
	74, 1310,
	75, 1310,
	77, 1310,
	78, 1310,
	96, 1310,
	523, 1310,
	571, 1310,
	649, 1310,
	760, 1310,
	-2, 1806,
	-1, 675,
	1, 1417,
	8, 1417,
	9, 1417,
	10, 1417,
	17, 1417,
	18, 1417,
	19, 1417,
	20, 1417,
	22, 1417,
	24, 1417,
	34, 1417,
	35, 1417,
	64, 1417,
	65, 1417,
	66, 1417,
	67, 1417,
	68, 1417,
	70, 1417,
	71, 1417,
	74, 1417,
	75, 1417,
	77, 1417,
	78, 1417,
	96, 1417,
	523, 1417,
	571, 1417,
	649, 1417,
	760, 1417,
	-2, 1806,
	-1, 703,
	187, 2189,
	-2, 1431,
	-1, 736,
	187, 2297,
	-2, 1699,
	-1, 737,
	187, 2378,
	-2, 1433,
	-1, 738,
	187, 2209,
	-2, 1434,
	-1, 807,
	187, 2160,
	-2, 1665,
	-1, 810,
	187, 2175,
	-2, 1583,
	-1, 811,
	187, 2178,
	-2, 1583,
	-1, 812,
	187, 2388,
	-2, 1583,
	-1, 814,
	187, 2176,
	-2, 1583,
	-1, 815,
	187, 2389,
	-2, 1583,
	-1, 816,
	187, 2390,
	-2, 1583,
	-1, 875,
	187, 2177,
	-2, 1583,
	-1, 958,
	187, 2277,
	-2, 1583,
	-1, 959,
	187, 2278,
	-2, 1583,
	-1, 1071,
	109, 2505,
	120, 2505,
	187, 2505,
	-2, 1773,
	-1, 1072,
	109, 2635,
	120, 2635,
	187, 2635,
	-2, 1774,
	-1, 1077,
	109, 2532,
	120, 2532,
	187, 2532,
	-2, 1775,
	-1, 1078,
	109, 2583,
	120, 2583,
	187, 2583,
	-2, 1776,
	-1, 1079,
	109, 2584,
	120, 2584,
	187, 2584,
	-2, 1777,
	-1, 1080,
	109, 2432,
	120, 2432,
	187, 2432,
	-2, 1782,
	-1, 1082,
	109, 2560,
	120, 2560,
	187, 2560,
	-2, 1784,
	-1, 1255,
	450, 1185,
	-2, 1189,
	-1, 1257,
	450, 1185,
	-2, 1189,
	-1, 1383,
	1, 679,
	760, 679,
	-2, 677,
	-1, 1385,
	1, 680,
	760, 680,
	-2, 677,
	-1, 1408,
	1, 1311,
	8, 1311,
	9, 1311,
	10, 1311,
	17, 1311,
	18, 1311,
	19, 1311,
	20, 1311,
	22, 1311,
	24, 1311,
	34, 1311,
	35, 1311,
	64, 1311,
	65, 1311,
	66, 1311,
	67, 1311,
	68, 1311,
	70, 1311,
	71, 1311,
	74, 1311,
	75, 1311,
	77, 1311,
	78, 1311,
	96, 1311,
	523, 1311,
	571, 1311,
	649, 1311,
	760, 1311,
	-2, 1806,
	-1, 1419,
	1, 1417,
	8, 1417,
	9, 1417,
	10, 1417,
	17, 1417,
	18, 1417,
	19, 1417,
	20, 1417,
	22, 1417,
	24, 1417,
	34, 1417,
	35, 1417,
	64, 1417,
	65, 1417,
	66, 1417,
	67, 1417,
	68, 1417,
	70, 1417,
	71, 1417,
	74, 1417,
	75, 1417,
	77, 1417,
	78, 1417,
	96, 1417,
	523, 1417,
	571, 1417,
	649, 1417,
	760, 1417,
	-2, 1806,
	-1, 1712,
	1, 679,
	760, 679,
	-2, 677,
	-1, 1714,
	1, 679,
	760, 679,
	-2, 677,
	-1, 2263,
	187, 1826,
	-2, 1677,
	-1, 2265,
	187, 2722,
	-2, 1679,
	-1, 2266,
	187, 2723,
	-2, 1680,
	-1, 2267,
	187, 1825,
	-2, 1821,
	-1, 2416,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2434,
	187, 2301,
	-2, 1778,
	-1, 2441,
	1, 896,
	760, 896,
	-2, 677,
	-1, 2629,
	49, 916,
	206, 919,
	208, 916,
	209, 916,
	210, 916,
	-2, 1032,
	-1, 2710,
	8, 59,
	9, 59,
	10, 59,
	-2, 1463,
	-1, 2727,
	1, 1356,
	8, 1356,
	9, 1356,
	10, 1356,
	17, 1356,
	18, 1356,
	19, 1356,
	20, 1356,
	22, 1356,
	24, 1356,
	34, 1356,
	35, 1356,
	64, 1356,
	65, 1356,
	66, 1356,
	67, 1356,
	68, 1356,
	70, 1356,
	71, 1356,
	74, 1356,
	75, 1356,
	77, 1356,
	78, 1356,
	96, 1356,
	523, 1356,
	571, 1356,
	649, 1356,
	760, 1356,
	-2, 1806,
	-1, 2904,
	212, 1026,
	216, 1026,
	-2, 784,
	-1, 2905,
	212, 1096,
	216, 1096,
	-2, 785,
	-1, 3168,
	1, 1417,
	8, 1417,
	9, 1417,
	10, 1417,
	17, 1417,
	18, 1417,
	19, 1417,
	20, 1417,
	22, 1417,
	24, 1417,
	34, 1417,
	35, 1417,
	64, 1417,
	65, 1417,
	66, 1417,
	67, 1417,
	68, 1417,
	70, 1417,
	71, 1417,
	74, 1417,
	75, 1417,
	77, 1417,
	78, 1417,
	96, 1417,
	523, 1417,
	571, 1417,
	649, 1417,
	760, 1417,
	-2, 1806,
	-1, 3271,
	1, 1730,
	74, 1730,
	760, 1730,
	-2, 1806,
	-1, 3474,
	49, 916,
	206, 919,
	208, 916,
	209, 916,
	210, 916,
	-2, 1032,
	-1, 3487,
	206, 920,
	212, 1026,
	216, 1026,
	-2, 918,
	-1, 3672,
	77, 2072,
	78, 2072,
	187, 2072,
	-2, 1212,
	-1, 3673,
	76, 1741,
	251, 1741,
	-2, 2121,
	-1, 3674,
	76, 1742,
	251, 1742,
	-2, 2688,
	-1, 3913,
	8, 59,
	9, 59,
	10, 59,
	-2, 1737,
	-1, 4058,
	46, 1837,
	-2, 1835,
	-1, 4321,
	8, 59,
	9, 59,
	10, 59,
	-2, 1738,
	-1, 4346,
	314, 426,
	-2, 1892,
	-1, 4347,
	314, 427,
	-2, 1933,
	-1, 4348,
	314, 428,
	-2, 2109,
	-1, 4577,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4658,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 81335

var yyAct = [...]int{
	749, 44, 4631, 4600, 4532, 4568, 4581, 567, 4353, 1187,
	695, 4204, 3, 4534, 4569, 1411, 3400, 4313, 2921, 2431,
	4052, 4207, 8, 4450, 4197, 4352, 4206, 7, 2355, 491,
	4451, 4205, 6, 4238, 28, 4208, 9, 655, 2354, 3279,
	3248, 2920, 4092, 4340, 4199, 44, 3617, 4047, 4339, 3761,
	1418, 4103, 3437, 4171, 2706, 3337, 108, 3692, 4065, 722,
	107, 3876, 2644, 3833, 4311, 3869, 1535, 3587, 4058, 3670,
	1747, 3834, 709, 1703, 4014, 3946, 4053, 2503, 4056, 3825,
	686, 3887, 3868, 546, 549, 3678, 3450, 639, 594, 594,
	3158, 2901, 3415, 2522, 3790, 2988, 101, 672, 651, 3784,
	2694, 1466, 3767, 2238, 2171, 3867, 3338, 748, 3280, 4198,
	1749, 3096, 2458, 1413, 3479, 3662, 1632, 3593, 2908, 1147,
	3555, 2292, 1564, 3059, 1746, 2974, 2932, 3567, 2489, 2163,
	1159, 1268, 1269, 488, 1216, 705, 813, 1415, 134, 2448,
	105, 1205, 2627, 2594, 3546, 2628, 2909, 3435, 1389, 714,
	2835, 1155, 2464, 1378, 708, 3256, 2858, 3210, 2224, 696,
	2626, 2554, 2164, 1417, 1563, 2104, 2145, 2902, 2045, 2577,
	2998, 1722, 1752, 2955, 2226, 1242, 1410, 2485, 1073, 1613,
	1447, 2344, 1609, 2269, 1450, 2622, 691, 1455, 2697, 1076,
	670, 1302, 2610, 1280, 1639, 3063, 1150, 1474, 1384, 1612,
	2231, 2462, 1388, 1069, 2308, 1070, 679, 2109, 2711, 570,
	666, 2418, 1396, 1387, 1186, 667, 1386, 569, 1279, 1163,
	3679, 1261, 654, 2077, 2044, 2078, 552, 1168, 1200, 1715,
	1174, 662, 129, 4658, 125, 2928, 4652, 4639, 689, 4623,
	2935, 4609, 4577, 4575, 4547, 4544, 4543, 4542, 1151, 4527,
	4525, 4433, 4429, 4424, 100, 3353, 2940, 2939, 4105, 4104,
	3595, 2102, 4054, 3844, 2507, 1178, 4295, 3428, 2541, 3987,
	2540, 3839, 3840, 86, 712, 3837, 3838, 3397, 3398, 3695,
	1438, 2936, 99, 4599, 97, 3985, 3693, 4562, 4560, 4647,
	4598, 3143, 4561, 3843, 3431, 3336, 3109, 2942, 3988, 2918,
	2966, 3429, 1725, 94, 4367, 4366, 685, 2919, 4565, 659,
	4309, 4509, 3947, 2656, 4177, 2538, 42, 653, 42, 562,
	4000, 2986, 3430, 664, 1188, 2037, 2538, 3949, 2356, 2368,
	2366, 2365, 2364, 2367, 2363, 2362, 2361, 2357, 2358, 2375,
	2359, 2374, 2373, 2360, 2372, 2371, 2370, 2369, 71, 2433,
	2922, 1355, 122, 42, 4460, 42, 1170, 47, 1176, 1177,
	3276, 4200, 88, 4273, 3277, 3862, 3412, 4176, 1180, 4308,
	556, 676, 2368, 2366, 2365, 2364, 2367, 2363, 2362, 2361,
	3238, 89, 2375, 89, 2374, 2373, 4072, 2372, 2371, 2370,
	2369, 501, 1146, 3739, 3535, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 4601, 4087, 1499,
	3736, 3584, 3930, 2938, 3307, 3942, 4162, 2941, 89, 1162,
	89, 3865, 1158, 3255, 3306, 2931, 3568, 3548, 163, 3943,
	489, 500, 4403, 3119, 163, 3866, 3934, 3768, 42, 163,
	3118, 4294, 4385, 2946, 4126, 4061, 2811, 3770, 3948, 636,
	636, 3654, 4317, 114, 112, 113, 4317, 1167, 163, 541,
	2576, 3270, 3378, 1063, 2570, 1356, 3290, 163, 3379, 3380,
	4312, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1255,
	163, 564, 3276, 1614, 2849, 1615, 3277, 2848, 3040, 4314,
	2850, 163, 1161, 4314, 3291, 3292, 3895, 2105, 2428, 2429,
	2427, 2108, 3893, 89, 96, 4387, 96, 4296, 1220, 1221,
	2148, 2149, 1224, 163, 636, 3615, 1161, 2933, 1313, 2179,
	3300, 1240, 1241, 1249, 89, 489, 163, 2106, 2107, 2126,
	1332, 148, 144, 145, 665, 146, 561, 2196, 3211, 1402,
	1403, 96, 1147, 96, 1147, 560, 2944, 1222, 1223, 3888,
	1340, 2460, 2461, 1262, 4318, 108, 3191, 2735, 4318, 1267,
	648, 2575, 4330, 1263, 3773, 2934, 1299, 2475, 1265, 2474,
	150, 149, 3082, 1264, 138, 1211, 2465, 3506, 2479, 1238,
	1225, 1239, 1240, 1241, 3635, 136, 4598, 3639, 3637, 2607,
	4561, 4559, 1398, 1401, 1402, 1403, 1399, 2150, 1400, 1405,
	2560, 2559, 536, 153, 1250, 1251, 3771, 3772, 3774, 3775,
	3776, 2486, 643, 1398, 1401, 1402, 1403, 1399, 2083, 1400,
	1405, 3214, 126, 2698, 2699, 3325, 96, 2465, 4331, 729,
	2379, 730, 732, 733, 734, 735, 559, 539, 645, 731,
	2304, 1226, 1258, 2468, 2467, 642, 2469, 644, 4426, 3039,
	3986, 4427, 1147, 4428, 2146, 2147, 1379, 4646, 2228, 663,
	1382, 1212, 151, 4599, 152, 1353, 643, 4597, 1354, 4454,
	4596, 4562, 1409, 1414, 641, 2156, 4283, 2155, 1432, 1433,
	1147, 4045, 1147, 1147, 108, 649, 1147, 2154, 2153, 2933,
	2152, 2151, 1374, 1336, 1337, 3089, 1147, 2981, 3860, 4467,
	3087, 1252, 3852, 3169, 1508, 1510, 4466, 3850, 1512, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 3088, 3086,
	2937, 1406, 3785, 128, 3169, 2930, 3169, 1315, 4453, 4266,
	3788, 3018, 3422, 132, 140, 139, 4120, 2934, 4406, 3594,
	1527, 1306, 3786, 3787, 1530, 1531, 1532, 1533, 1534, 4018,
	1538, 3791, 3792, 3793, 3794, 3449, 1347, 3023, 2589, 1348,
	1453, 108, 1315, 1329, 4268, 4131, 4521, 1381, 4130, 698,
	4425, 3802, 1478, 4009, 2301, 4128, 4007, 3511, 3413, 4004,
	136, 4371, 3425, 3694, 3416, 3417, 3418, 3419, 3420, 2985,
	137, 141, 3820, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1424, 1557,
	1558, 1560, 1560, 1560, 2571, 1565, 1565, 1565, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 2590,
	3695, 3950, 3547, 3982, 130, 1219, 131, 163, 4332, 2177,
	3299, 1315, 1408, 3218, 3217, 3219, 3216, 3570, 1339, 3951,
	2138, 3223, 489, 3215, 3212, 661, 1565, 3213, 147, 3221,
	2381, 2382, 2380, 540, 2983, 563, 2523, 3451, 1322, 4122,
	4379, 3800, 4365, 3220, 4043, 4655, 2933, 2611, 2583, 4421,
	3145, 4625, 2933, 3153, 3155, 3154, 4654, 2178, 3298, 3147,
	3222, 3224, 3081, 1471, 1472, 1470, 4073, 4624, 142, 2180,
	4621, 4540, 2917, 4585, 547, 1375, 3416, 3417, 3418, 3419,
	3420, 163, 1473, 1559, 1561, 1562, 1360, 3088, 4529, 4163,
	2947, 4315, 3086, 4175, 2934, 4315, 676, 676, 4001, 2987,
	2934, 1320, 3953, 1214, 109, 3108, 109, 4419, 4420, 1565,
	1565, 2929, 1434, 1441, 1439, 1439, 1440, 1440, 1446, 1375,
	1376, 4377, 4522, 3932, 3099, 3499, 154, 3592, 2108, 1509,
	1566, 1567, 3952, 1435, 2084, 1435, 1435, 2949, 1392, 1435,
	3859, 109, 1372, 87, 115, 3769, 1404, 3873, 3160, 4402,
	3573, 3571, 1266, 3933, 2106, 2107, 3569, 4288, 1259, 1213,
	2488, 3851, 4452, 3849, 1314, 1321, 4293, 1317, 1257, 4154,
	1307, 3410, 3572, 163, 2302, 2303, 550, 1393, 3513, 3514,
	2984, 2471, 4127, 4006, 1370, 1349, 4003, 3161, 2472, 3424,
	1599, 3160, 4093, 163, 1730, 1731, 1729, 4267, 143, 1318,
	1319, 1404, 4121, 3979, 1720, 3225, 1471, 1472, 1470, 1710,
	4538, 3978, 4533, 3977, 1602, 3976, 3975, 1237, 3973, 489,
	127, 1175, 1404, 3974, 551, 1473, 109, 136, 4536, 4111,
	3512, 4115, 4116, 2517, 2518, 4397, 1172, 1171, 2159, 3148,
	2513, 1316, 1323, 1324, 1326, 1327, 1328, 4202, 1330, 1331,
	3983, 1333, 1334, 1335, 660, 1338, 136, 1341, 1342, 1343,
	1344, 1345, 1175, 4335, 4336, 2110, 1325, 141, 4375, 1173,
	2047, 2512, 1253, 1600, 1601, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 2160, 3588, 3589,
	3006, 3007, 1076, 4545, 1234, 1235, 1366, 1076, 1147, 548,
	1236, 1233, 1232, 2112, 3591, 1231, 2111, 4277, 3149, 108,
	1230, 548, 545, 107, 3826, 3827, 2457, 1365, 1361, 1362,
	1363, 1364, 1367, 1368, 1369, 1371, 2037, 3556, 2079, 4635,
	3557, 4195, 3558, 4648, 4408, 1724, 2457, 594, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	1162, 4407, 1499, 1162, 2455, 1748, 3066, 594, 1606, 3342,
	3485, 4661, 138, 3055, 2524, 2650, 3054, 4656, 3078, 4640,
	4612, 3500, 3501, 3502, 2457, 3066, 4272, 3052, 1169, 1189,
	3076, 3098, 1756, 3075, 665, 1311, 4145, 4037, 3074, 3858,
	3855, 3590, 3447, 1629, 1705, 3083, 3017, 1723, 1617, 2653,
	2651, 2646, 1728, 1618, 3013, 2648, 1420, 1422, 3065, 2991,
	2990, 2584, 1624, 2457, 2143, 1735, 1733, 1147, 1260, 2506,
	1695, 1696, 1697, 1698, 1699, 1166, 2211, 2210, 1262, 2209,
	2041, 2041, 2041, 2041, 1165, 548, 4430, 2555, 1263, 1701,
	123, 4040, 3098, 1265, 4535, 4537, 1603, 1604, 1264, 548,
	2457, 3442, 1391, 3056, 3057, 1179, 486, 1754, 3159, 2647,
	2649, 2652, 2654, 2535, 2457, 1373, 2456, 3841, 2534, 2072,
	2035, 594, 3072, 3066, 3614, 3289, 1700, 3015, 3069, 3014,
	1737, 3068, 3073, 2782, 693, 2525, 2456, 1514, 1515, 2855,
	1513, 1511, 3055, 3066, 2650, 3054, 89, 1456, 1162, 1407,
	2048, 3067, 2455, 2752, 2729, 89, 2136, 2618, 2779, 4633,
	1480, 1310, 4634, 2099, 4632, 2060, 3341, 2050, 2061, 2062,
	2063, 3484, 140, 139, 2456, 2039, 2043, 2067, 2653, 2651,
	2646, 3066, 2539, 2119, 2648, 2514, 1162, 2075, 1421, 3067,
	2455, 2423, 2241, 1420, 1422, 672, 672, 672, 672, 1718,
	1711, 1719, 1709, 1706, 1516, 1625, 3097, 1726, 1536, 2168,
	1147, 1727, 2064, 2456, 2066, 1414, 1626, 2205, 1628, 3072,
	3066, 108, 1745, 2142, 1744, 3069, 108, 2097, 3068, 3073,
	2204, 1529, 3056, 3057, 2046, 2117, 123, 163, 2647, 2649,
	2652, 2654, 1528, 1516, 2198, 1479, 1161, 2052, 2053, 1297,
	2456, 1429, 1430, 118, 1202, 4286, 2206, 1513, 4125, 2199,
	2433, 2294, 2293, 2182, 2456, 1489, 1556, 3097, 1499, 4144,
	2208, 3092, 650, 1423, 4143, 3842, 2141, 1499, 96, 3095,
	1254, 2081, 2080, 1516, 3752, 3750, 2845, 3444, 2085, 2074,
	1429, 1430, 4152, 2090, 2091, 4398, 4399, 2093, 2036, 1431,
	3835, 121, 3471, 3470, 2183, 1514, 1515, 3359, 3357, 1756,
	2186, 1147, 1423, 2096, 2157, 2158, 2114, 1420, 1422, 3048,
	3047, 2118, 108, 2295, 3909, 1421, 3990, 2115, 2726, 489,
	1514, 1515, 4395, 4396, 3089, 4437, 1161, 163, 1431, 1538,
	672, 3087, 120, 103, 3074, 3065, 3751, 636, 636, 1478,
	108, 2836, 636, 3107, 2204, 2137, 1420, 1422, 2140, 163,
	4180, 4179, 163, 3991, 3472, 3106, 3105, 636, 636, 3358,
	3104, 3103, 3102, 163, 3146, 3045, 3044, 489, 489, 489,
	489, 3049, 2173, 2207, 2267, 2852, 2851, 2348, 2176, 110,
	2270, 116, 163, 163, 163, 163, 163, 3101, 163, 2174,
	2161, 2172, 2175, 3100, 1243, 672, 1416, 2352, 2376, 2377,
	2184, 2185, 2276, 2187, 163, 163, 4438, 2549, 2197, 636,
	2723, 2720, 2330, 2333, 96, 163, 2248, 2274, 2275, 2273,
	2346, 1492, 1493, 1494, 1495, 1496, 1489, 3046, 2432, 1499,
	2234, 1218, 2165, 1625, 1472, 1470, 685, 2853, 1470, 1421,
	2300, 2305, 2261, 666, 1626, 1064, 1065, 1066, 1756, 1473,
	2246, 1155, 1473, 4191, 1245, 1473, 3035, 1164, 1161, 676,
	676, 676, 676, 2258, 1471, 1472, 1470, 1228, 4615, 4582,
	4614, 636, 636, 636, 1076, 4644, 1161, 3034, 1421, 676,
	3033, 3032, 3031, 1473, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 3030, 1244, 1499, 1379,
	2440, 3029, 3028, 3027, 692, 694, 2606, 636, 2605, 2095,
	2550, 1273, 636, 636, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1489, 2384, 2267, 1499, 2314, 2315, 2316, 2317, 2318,
	1182, 1217, 2262, 163, 163, 1181, 2532, 2417, 163, 2773,
	1161, 2772, 4341, 2389, 4470, 2391, 4469, 2271, 2445, 2342,
	3240, 2345, 163, 636, 1247, 163, 163, 163, 163, 3181,
	4638, 1471, 1472, 1470, 2297, 4611, 2299, 163, 2454, 4523,
	1229, 2415, 4471, 2989, 530, 163, 2345, 1713, 2795, 163,
	1473, 2311, 2313, 4461, 2470, 2473, 3801, 3795, 2476, 2477,
	2478, 2439, 2239, 2240, 1256, 2530, 2531, 4489, 2495, 2496,
	2497, 2498, 2499, 3011, 676, 2425, 2430, 2424, 2232, 2421,
	2491, 2492, 2493, 2494, 1471, 1472, 1470, 2444, 2442, 3351,
	2516, 2500, 4642, 2120, 3870, 2466, 2123, 2124, 2125, 163,
	2127, 2128, 3169, 1473, 2129, 4341, 489, 4415, 2130, 4414,
	4649, 2131, 2254, 2256, 2257, 2132, 2133, 4503, 2134, 2135,
	2255, 3861, 2505, 2482, 2483, 2484, 89, 2487, 1467, 1471,
	1472, 1470, 4500, 2247, 1471, 1472, 1470, 2051, 2272, 676,
	4354, 4629, 1161, 4370, 1161, 4591, 2502, 1161, 1473, 4264,
	502, 2438, 2232, 1473, 1161, 1471, 1472, 1470, 4327, 1161,
	1161, 4660, 2221, 4473, 2070, 2749, 2750, 2751, 163, 4650,
	163, 2508, 2223, 2510, 1473, 4270, 4502, 729, 4263, 730,
	732, 733, 734, 735, 1471, 1472, 1470, 731, 2304, 4192,
	2961, 4499, 4418, 693, 1471, 1472, 1470, 505, 2222, 2411,
	4265, 4341, 4088, 1473, 3998, 3997, 516, 528, 529, 1471,
	1472, 1470, 2243, 1473, 3996, 1536, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 1473, 2774,
	1499, 3728, 3726, 3995, 163, 163, 163, 2244, 3576, 3574,
	2245, 4459, 3727, 3989, 511, 3811, 518, 514, 2220, 3575,
	523, 524, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1489, 1161, 3759, 1499, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 702, 525, 1499,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 3178, 2786, 1499, 1471, 1472, 1470, 3758, 1471, 1472,
	1470, 1536, 3242, 3153, 3155, 3154, 693, 4123, 3524, 3465,
	3464, 3463, 2353, 1473, 1483, 3462, 1486, 1473, 1471, 1472,
	1470, 3460, 2301, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	3733, 1484, 1485, 1482, 1560, 3731, 3402, 1473, 3354, 2960,
	3175, 520, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 693, 2958, 1499, 163, 4124, 2217,
	521, 2945, 1305, 163, 163, 636, 636, 636, 3581, 2219,
	163, 2088, 1304, 513, 3427, 3426, 4659, 4643, 1390, 1736,
	4626, 3153, 3155, 3154, 3579, 698, 3153, 3155, 3154, 2250,
	2251, 2252, 4620, 4549, 4541, 2218, 4431, 4412, 4411, 4358,
	4357, 4351, 4350, 2574, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 2213, 4458, 1499, 3153,
	3155, 3154, 4129, 1409, 693, 4455, 2215, 1383, 2087, 4020,
	3661, 512, 526, 1382, 3503, 3153, 3155, 3154, 527, 3001,
	3000, 2561, 2546, 2545, 2296, 2216, 2547, 2089, 2082, 1743,
	1742, 1714, 2214, 1712, 1300, 558, 2557, 1536, 2553, 2551,
	3884, 672, 4388, 2325, 2326, 1277, 4384, 4368, 4303, 4297,
	2715, 2716, 2717, 4194, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 4193, 1276, 1499, 503,
	4119, 2566, 4118, 4099, 4044, 4008, 4005, 2708, 3972, 3941,
	3940, 3905, 2212, 3864, 3863, 3810, 2714, 3809, 3808, 3807,
	3798, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 2753, 3797, 1499, 519, 506, 507, 3796,
	533, 1756, 3757, 3754, 508, 510, 2693, 504, 532, 531,
	2619, 3729, 3883, 2437, 2581, 3724, 566, 3715, 2565, 3711,
	3706, 3705, 3704, 3577, 3566, 2573, 3554, 3550, 3543, 3542,
	3541, 3468, 3461, 3459, 3458, 3457, 3385, 2588, 1453, 1453,
	2591, 3190, 2302, 2303, 2709, 3189, 3187, 3050, 2956, 2854,
	1526, 2580, 1525, 1524, 2613, 522, 2572, 2544, 2092, 2776,
	2634, 2728, 693, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 1346, 2267, 1499, 693, 2747,
	2748, 2612, 4019, 2615, 4159, 693, 3598, 4513, 3741, 4443,
	3598, 693, 3965, 2501, 4027, 693, 638, 3741, 4374, 3964,
	2713, 3741, 4274, 3741, 4108, 2702, 3598, 4107, 2999, 3378,
	1063, 2270, 3368, 3369, 3371, 3379, 3380, 3370, 3372, 3373,
	3882, 3598, 4102, 4041, 693, 3598, 4012, 3169, 693, 2617,
	693, 2419, 3374, 3375, 3376, 3377, 3598, 3880, 163, 2037,
	3823, 2037, 3822, 2999, 2439, 3741, 3740, 3598, 3597, 672,
	2737, 2738, 672, 3395, 3394, 2739, 3391, 3392, 3391, 3390,
	2728, 693, 2586, 2585, 3404, 3657, 163, 676, 2200, 2758,
	2419, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 1756, 3388, 1499, 3387, 2754, 2319, 2568,
	2420, 3276, 2422, 2319, 693, 3277, 1161, 2762, 2200, 693,
	1631, 1630, 3386, 3682, 163, 676, 163, 102, 3663, 2838,
	1161, 3682, 89, 2521, 2236, 1161, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 1076, 2420,
	1499, 2037, 1351, 2840, 2262, 2037, 1350, 1308, 1161, 1309,
	1309, 1161, 1311, 4593, 3682, 2319, 4304, 4173, 2538, 675,
	3918, 3169, 2200, 3598, 2200, 2794, 3405, 2520, 1754, 3393,
	3188, 3026, 2426, 2805, 2728, 2803, 2802, 2728, 2235, 2604,
	2094, 2543, 2537, 2810, 2812, 2912, 2915, 2237, 2271, 1377,
	2818, 2819, 2820, 2821, 2139, 2103, 2037, 1734, 1732, 1611,
	1380, 89, 2504, 1311, 3005, 4405, 594, 2839, 2707, 4275,
	163, 163, 3647, 4139, 4023, 3760, 1161, 156, 1701, 163,
	3749, 3746, 2463, 2490, 2465, 3163, 3038, 2903, 544, 3037,
	2864, 1723, 2486, 2900, 1315, 2841, 2515, 2907, 2842, 2910,
	2911, 2698, 2699, 1161, 1617, 2843, 2846, 2481, 2480, 2993,
	1704, 1296, 3812, 2556, 1209, 1208, 4628, 2041, 4627, 2948,
	2950, 2856, 4078, 4606, 2951, 2952, 4604, 2953, 2954, 4595,
	4594, 4570, 4563, 4557, 4555, 4505, 4504, 3875, 3871, 3663,
	1148, 3403, 2996, 2736, 2995, 2587, 3656, 2168, 2979, 2962,
	2701, 2695, 2113, 1739, 1352, 2957, 1312, 2705, 2195, 2192,
	2190, 2704, 1184, 2194, 2193, 2191, 2959, 2703, 2189, 2188,
	4393, 535, 4307, 3192, 4360, 1201, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 3003, 4141,
	1499, 2744, 2982, 676, 2743, 3646, 676, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 3019,
	3856, 1499, 2997, 3832, 3744, 3493, 4361, 3025, 3492, 3384,
	3383, 3176, 3382, 2916, 3179, 2906, 4165, 3182, 3002, 4168,
	4302, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 537, 538,
	3012, 4301, 1412, 43, 4059, 4057, 4, 672, 3645, 4114,
	3016, 4113, 4011, 557, 3070, 3077, 3064, 3080, 2564, 1756,
	3165, 2563, 3085, 3167, 2086, 3084, 3091, 3469, 3171, 3172,
	3173, 3036, 3058, 3144, 3992, 3993, 3060, 3071, 3183, 4436,
	3041, 3848, 3700, 3504, 163, 1448, 3053, 43, 3356, 163,
	3093, 106, 163, 163, 163, 3152, 1449, 2620, 1627, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 1294, 3249, 1499, 1278, 1275, 1274, 1215, 2905, 4586,
	4030, 4029, 1390, 3910, 2914, 2914, 2239, 2240, 1271, 1272,
	3432, 3805, 2509, 3803, 2267, 3644, 3273, 3278, 3806, 102,
	3804, 672, 1738, 1407, 4305, 4269, 4015, 108, 3762, 3748,
	1270, 3272, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 2964, 2162, 1499, 2088, 3283, 2309,
	2310, 1358, 2087, 1444, 1445, 1161, 2742, 163, 3170, 4477,
	2165, 3042, 1460, 1461, 2741, 1161, 1161, 1442, 1443, 3239,
	687, 636, 1436, 1437, 4476, 3226, 1456, 4475, 3228, 3969,
	2609, 1248, 3186, 3184, 4390, 3274, 4389, 3197, 163, 636,
	1161, 3281, 3200, 1463, 489, 4299, 3194, 3201, 1465, 1464,
	4186, 1462, 4169, 3196, 4132, 4077, 3891, 636, 3294, 3352,
	688, 3237, 3227, 3890, 3620, 2999, 3365, 4608, 4607, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 1161, 4432, 1499, 3454, 636, 3024, 1161, 2968, 2969,
	2970, 4608, 3022, 636, 3021, 2804, 1379, 2783, 2780, 3250,
	3251, 3252, 3253, 3254, 3340, 2746, 2592, 2065, 2768, 3333,
	1468, 1207, 1206, 4607, 4182, 3381, 2233, 680, 1161, 1161,
	4493, 3421, 2262, 594, 3275, 3364, 684, 683, 3344, 3345,
	3346, 3152, 3347, 3348, 2796, 104, 1204, 68, 2864, 4359,
	3285, 1, 3287, 3288, 4292, 3199, 3293, 3286, 2201, 2202,
	2203, 676, 4221, 65, 4223, 23, 4222, 22, 1460, 1461,
	4224, 24, 674, 2500, 4225, 25, 4219, 18, 4218, 17,
	4217, 16, 3343, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 4220, 19, 1499, 50, 1463,
	1458, 3151, 3434, 2582, 1465, 1464, 3486, 1462, 4216, 15,
	2121, 3360, 4210, 11, 4245, 39, 4243, 37, 1161, 3423,
	1303, 4242, 36, 593, 3350, 3362, 1161, 1161, 1161, 3783,
	3363, 3782, 3406, 4246, 40, 4241, 32, 4240, 31, 4239,
	30, 3789, 3389, 4236, 27, 4235, 26, 4215, 14, 4212,
	13, 163, 4211, 12, 3411, 676, 3414, 163, 3199, 3401,
	4209, 10, 2980, 1161, 4287, 4153, 3799, 1721, 3981, 1185,
	2519, 1301, 4300, 3481, 3440, 4164, 4166, 3766, 3443, 3765,
	2973, 2972, 3448, 2320, 3438, 1295, 3452, 3453, 2569, 3455,
	2101, 2324, 3482, 3061, 3062, 2533, 3051, 4184, 3586, 2608,
	2144, 3441, 2593, 1359, 2441, 3481, 2446, 3929, 3691, 4086,
	3456, 3690, 3689, 2857, 1149, 117, 2548, 1227, 509, 3466,
	3467, 2443, 1161, 2926, 2387, 2388, 4167, 1298, 3332, 2925,
	2943, 2394, 2395, 2396, 2397, 3473, 2459, 1385, 1701, 3058,
	3483, 2634, 3937, 2924, 2923, 4271, 3515, 2903, 3553, 2927,
	2410, 163, 1636, 1634, 1635, 1633, 3596, 1638, 1637, 515,
	1619, 3613, 4345, 3660, 1469, 741, 1161, 135, 3094, 646,
	3152, 647, 3618, 124, 133, 517, 3488, 3489, 3490, 3652,
	1507, 2740, 2847, 3495, 3496, 1074, 3498, 3257, 3258, 3259,
	3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 1075, 1067,
	3516, 4435, 2731, 3521, 4178, 2071, 4060, 3151, 3551, 4170,
	4334, 489, 1454, 4062, 3671, 3889, 3619, 2914, 2914, 2914,
	2793, 2914, 2914, 3494, 1555, 108, 2343, 489, 711, 3667,
	658, 3677, 3908, 4064, 2253, 725, 3507, 724, 3509, 3621,
	3283, 1424, 163, 2168, 723, 720, 3599, 721, 2378, 3522,
	3665, 3525, 4316, 3527, 3529, 3531, 3533, 2242, 3269, 3268,
	3271, 1481, 3666, 3396, 1357, 700, 1428, 1427, 1426, 1425,
	1419, 669, 2412, 163, 3010, 1397, 3738, 1395, 1394, 1740,
	1607, 2700, 2696, 3281, 668, 3634, 673, 1161, 1161, 1161,
	46, 2745, 1246, 1459, 636, 3653, 4071, 3162, 111, 682,
	3164, 163, 636, 681, 690, 3349, 1161, 1161, 29, 1560,
	1560, 1560, 1565, 1565, 1565, 1568, 1569, 1570, 1571, 1565,
	1565, 1565, 3687, 21, 636, 3664, 1161, 2225, 636, 20,
	1203, 2625, 636, 636, 2645, 636, 3714, 1183, 48, 54,
	53, 51, 3536, 3669, 3538, 52, 698, 2967, 163, 163,
	2511, 4344, 4531, 3630, 3631, 3632, 1281, 3633, 3152, 4548,
	3559, 3560, 3561, 3636, 4580, 3638, 38, 35, 34, 33,
	489, 2914, 4237, 4231, 3583, 4230, 3716, 4233, 489, 489,
	489, 489, 1161, 4232, 4229, 1161, 489, 489, 1161, 489,
	3681, 2230, 3725, 3709, 3241, 4234, 3712, 3688, 1161, 4228,
	1161, 3745, 489, 489, 1161, 163, 489, 3683, 3684, 3685,
	3686, 1161, 4227, 1161, 1161, 1161, 1161, 1161, 1161, 4226,
	4244, 4214, 4213, 3618, 4515, 4514, 5, 3680, 3815, 3813,
	98, 1559, 1561, 1562, 95, 41, 3151, 3753, 3763, 2268,
	119, 1145, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2, 3756, 0,
	0, 0, 0, 0, 3778, 3779, 3780, 0, 3781, 0,
	3817, 3777, 0, 0, 1161, 3819, 2165, 1566, 1567, 0,
	1161, 3742, 3743, 1599, 1600, 1601, 0, 0, 0, 0,
	0, 0, 3481, 0, 163, 0, 0, 0, 0, 1161,
	3830, 0, 0, 0, 0, 2328, 0, 0, 0, 2336,
	0, 0, 3818, 0, 0, 3814, 0, 3481, 0, 3821,
	0, 0, 0, 0, 0, 0, 1608, 3696, 3697, 3698,
	0, 0, 0, 3824, 0, 3853, 0, 3828, 3829, 3070,
	0, 3064, 3831, 3236, 0, 0, 0, 0, 3717, 3718,
	3719, 0, 0, 0, 0, 0, 3886, 0, 3845, 0,
	0, 3060, 3071, 3735, 0, 0, 0, 3847, 3854, 3624,
	3625, 3626, 3627, 3628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 3878, 0, 0, 0, 3439, 0,
	0, 3836, 0, 0, 0, 0, 0, 0, 0, 3915,
	0, 0, 3671, 3618, 3618, 0, 0, 672, 3892, 3894,
	3920, 0, 2558, 108, 3151, 0, 1708, 107, 3857, 0,
	0, 3152, 3931, 0, 3874, 0, 0, 0, 0, 0,
	0, 3872, 0, 0, 3912, 0, 0, 0, 1608, 0,
	0, 1741, 3283, 0, 0, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	3877, 3879, 0, 0, 0, 0, 0, 0, 3914, 0,
	0, 2054, 2055, 2056, 2057, 2058, 0, 2059, 0, 3961,
	0, 0, 0, 0, 0, 3281, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 0, 0, 3928, 0,
	3537, 2616, 0, 108, 163, 0, 1161, 3967, 3922, 3968,
	0, 3911, 0, 0, 3938, 0, 0, 3919, 0, 0,
	666, 3923, 0, 0, 0, 0, 0, 0, 0, 3959,
	0, 0, 3962, 0, 0, 0, 3152, 1161, 0, 0,
	0, 0, 2710, 163, 0, 3340, 3966, 0, 636, 0,
	0, 3935, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 2727, 0, 3340, 0, 3957, 3958, 0, 0,
	0, 0, 0, 3152, 3944, 0, 3955, 3956, 3954, 489,
	3945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4039, 0, 489, 0, 0, 3970, 0, 3971,
	0, 0, 0, 0, 489, 0, 0, 3199, 0, 0,
	0, 0, 3980, 3984, 3994, 0, 0, 0, 3999, 0,
	0, 489, 1608, 1608, 4017, 4002, 0, 4013, 0, 0,
	0, 3655, 0, 0, 2760, 4016, 2761, 4010, 4048, 0,
	0, 2181, 0, 0, 0, 0, 3915, 4082, 0, 0,
	0, 0, 0, 4024, 4025, 4031, 0, 0, 108, 2769,
	2770, 2771, 4081, 4090, 4091, 2775, 0, 2778, 0, 0,
	2781, 4021, 4022, 2784, 2785, 0, 0, 0, 2790, 2791,
	0, 676, 0, 0, 2797, 2798, 2799, 3151, 0, 2800,
	0, 2801, 0, 0, 0, 4046, 0, 4079, 4032, 1161,
	4033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4109, 1161, 4080, 0, 2249, 0,
	0, 2806, 2807, 2808, 2809, 0, 0, 2813, 2814, 2815,
	2816, 2817, 0, 4085, 4083, 4076, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 4110, 2834,
	4112, 4096, 4034, 0, 4036, 0, 4038, 0, 0, 0,
	4097, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 163, 4117, 0,
	0, 0, 3152, 0, 0, 0, 0, 0, 4094, 0,
	4150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3151, 0, 0, 0, 0, 0, 0, 4137,
	0, 0, 0, 3671, 0, 0, 4135, 4185, 0, 0,
	0, 4136, 4134, 4190, 108, 0, 0, 3340, 4183, 4140,
	0, 0, 4138, 4147, 2562, 0, 0, 0, 0, 3151,
	0, 1147, 489, 1147, 4151, 2914, 2914, 1161, 0, 0,
	1161, 4203, 108, 2414, 4149, 2416, 4201, 0, 0, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4188, 4181, 0, 3152, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 4284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4160, 0, 0, 0, 0, 0, 0, 2614, 0,
	0, 0, 0, 4262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4276, 0, 0, 0, 0,
	0, 0, 2914, 2914, 0, 4146, 1161, 0, 0, 0,
	0, 4282, 3283, 3340, 3878, 0, 4289, 4285, 4333, 0,
	4337, 0, 4320, 0, 0, 489, 1161, 489, 0, 489,
	2718, 2719, 4306, 4298, 2721, 2722, 4291, 0, 2724, 2725,
	0, 0, 0, 4326, 4323, 4319, 2526, 0, 4329, 4322,
	0, 0, 2528, 2529, 1147, 3281, 1147, 1161, 0, 2536,
	0, 0, 1147, 0, 0, 0, 4279, 0, 0, 0,
	0, 0, 0, 0, 4096, 0, 0, 0, 0, 0,
	0, 4355, 0, 0, 0, 0, 0, 4364, 0, 0,
	3877, 0, 2755, 2756, 2757, 0, 0, 4386, 0, 4372,
	0, 4378, 0, 0, 0, 0, 3249, 0, 0, 0,
	0, 0, 0, 4280, 0, 0, 0, 0, 3151, 3168,
	0, 0, 0, 0, 0, 0, 4369, 0, 0, 0,
	4394, 4373, 0, 0, 0, 0, 0, 4382, 0, 0,
	0, 4383, 3924, 3925, 3926, 3927, 4392, 0, 3878, 3340,
	4381, 4410, 0, 0, 0, 2787, 2788, 2789, 4391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3204, 3205, 3206, 3207, 3208, 3209, 4445, 0, 4409, 4442,
	0, 594, 4434, 4416, 0, 0, 636, 4413, 4457, 0,
	0, 0, 0, 0, 489, 0, 4446, 0, 0, 4444,
	4376, 0, 0, 4463, 0, 0, 0, 4456, 489, 4447,
	0, 163, 3151, 0, 0, 0, 1147, 0, 0, 1147,
	0, 4449, 4380, 0, 3877, 1147, 1147, 1147, 1147, 4448,
	1147, 1147, 1161, 4481, 1147, 1147, 0, 0, 4481, 4462,
	0, 4472, 4481, 4491, 4474, 0, 4464, 1147, 0, 0,
	0, 4483, 4484, 4485, 4400, 4497, 4488, 4416, 4465, 0,
	4468, 1161, 4422, 0, 3618, 4512, 3283, 0, 4494, 4478,
	0, 1147, 0, 0, 1147, 4501, 4492, 1147, 4508, 4510,
	0, 4498, 0, 0, 0, 0, 0, 0, 108, 4528,
	4520, 0, 4530, 0, 0, 4519, 4524, 2432, 4539, 4526,
	4518, 4551, 4517, 594, 4516, 0, 0, 0, 4550, 3281,
	489, 0, 0, 4349, 4554, 0, 489, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 1147, 0, 1147, 0,
	1161, 4571, 1147, 4574, 4481, 0, 4481, 0, 0, 0,
	4583, 0, 0, 1147, 1147, 1147, 1147, 4572, 1147, 4063,
	4066, 4481, 4481, 4481, 0, 0, 4481, 2542, 0, 0,
	0, 1161, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 4590, 0, 3004, 0, 4605, 1147, 0, 1147, 1536,
	1147, 3008, 3009, 4603, 4481, 2552, 4481, 4616, 0, 4618,
	4506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4613, 4630, 3235, 0, 0,
	1147, 4636, 0, 0, 0, 0, 1147, 0, 4481, 0,
	0, 1161, 0, 1303, 1147, 0, 0, 0, 0, 0,
	0, 0, 4481, 0, 0, 0, 4556, 0, 0, 4558,
	1147, 4641, 0, 1147, 0, 0, 489, 0, 4481, 0,
	0, 0, 0, 1147, 0, 0, 0, 0, 0, 1147,
	0, 4481, 0, 0, 0, 0, 0, 4481, 4653, 0,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4479, 0, 3539, 3540,
	0, 0, 0, 0, 0, 0, 3549, 0, 0, 3552,
	0, 0, 0, 0, 0, 0, 3562, 3563, 3564, 3565,
	0, 0, 0, 0, 3578, 3580, 3582, 0, 0, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 3585, 0, 1499, 0, 0, 1536, 0, 0, 0,
	0, 0, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3202, 163, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1457,
	0, 0, 0, 0, 0, 0, 1161, 3203, 0, 3601,
	3602, 3603, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 1161, 3229, 1499, 3230, 3231, 0,
	3232, 3233, 0, 0, 3234, 0, 0, 0, 3622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3629, 0,
	3243, 3244, 3245, 3246, 0, 0, 0, 157, 1161, 0,
	0, 0, 4066, 534, 3640, 3641, 3642, 3643, 157, 0,
	0, 554, 3648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3658, 3659, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 636, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3702, 3703, 0, 656,
	699, 3668, 0, 0, 3710, 0, 1084, 3713, 0, 0,
	157, 0, 0, 163, 3720, 3721, 3722, 3723, 0, 0,
	2298, 0, 0, 3730, 3732, 3734, 4338, 4342, 0, 3737,
	0, 0, 157, 0, 0, 4356, 0, 0, 3180, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 2321, 2322,
	2323, 0, 0, 2837, 2327, 0, 2329, 2332, 2335, 0,
	2340, 2341, 0, 0, 0, 0, 2351, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0,
	2383, 1499, 2385, 2386, 0, 0, 2898, 2390, 0, 2392,
	2393, 0, 3177, 0, 0, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 2870, 0,
	4417, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2965, 0, 0, 0,
	0, 0, 0, 0, 2859, 3174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2992, 0, 0,
	0, 0, 0, 710, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 2759, 0, 1499, 2860,
	2777, 0, 2730, 0, 0, 0, 0, 4486, 0, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 0, 0, 1499, 0, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	0, 158, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 0, 4546, 1499, 0, 0,
	0, 657, 0, 0, 0, 0, 0, 2871, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 2880, 0,
	0, 0, 0, 657, 0, 0, 0, 0, 0, 0,
	1085, 0, 0, 0, 158, 1153, 0, 0, 0, 0,
	0, 0, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611,
	3612, 0, 0, 2869, 2892, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 492, 158,
	3623, 0, 739, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 4617, 0, 0, 0, 0, 0, 0, 4622, 0,
	0, 0, 0, 3649, 3650, 3651, 157, 3900, 3901, 3902,
	3193, 3904, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 0, 3913, 1499, 3916, 3917, 89,
	0, 0, 0, 0, 0, 4254, 0, 0, 3921, 0,
	0, 0, 0, 0, 553, 0, 2887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4247, 0, 0, 4579,
	4582, 4578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2896, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 2877, 0, 0, 0, 0, 0, 0, 1083,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3960, 0, 0, 0, 0,
	0, 0, 0, 3963, 0, 0, 0, 0, 1190, 0,
	3747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 2889, 96, 0, 0, 0, 0, 0, 4248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 4026, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 3355, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2862, 0, 0, 0, 0, 4042, 0, 0, 0, 0,
	0, 0, 3399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 742, 2874,
	0, 0, 0, 0, 4067, 4068, 4069, 4070, 69, 70,
	3433, 4250, 0, 0, 4074, 4075, 0, 0, 0, 0,
	0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 4084, 4256,
	0, 4260, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 4095, 0, 0, 0, 160, 1608, 1608, 0,
	0, 84, 2863, 2865, 0, 492, 2868, 160, 0, 2873,
	60, 2878, 2875, 2876, 0, 2879, 2872, 0, 2882, 2881,
	2883, 0, 2884, 2885, 2886, 0, 0, 2888, 2890, 2891,
	2893, 2894, 2895, 0, 0, 160, 2866, 2897, 0, 0,
	0, 0, 0, 0, 0, 0, 2899, 0, 0, 0,
	0, 0, 0, 0, 3518, 0, 0, 0, 0, 160,
	1157, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 4261, 4249, 0, 66,
	67, 73, 0, 74, 160, 0, 0, 4155, 4156, 4157,
	4158, 0, 3896, 3897, 3898, 3899, 0, 0, 0, 0,
	3903, 0, 0, 0, 3906, 3907, 0, 0, 0, 4174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4187, 0, 0,
	0, 0, 2763, 2764, 2765, 2766, 2767, 0, 0, 0,
	2861, 0, 0, 0, 4196, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2792, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 4281, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 4290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4310, 0, 0, 0,
	0, 4321, 0, 0, 0, 0, 4324, 4325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 0, 1084,
	0, 0, 0, 0, 1084, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	4049, 4050, 4051, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3764, 0, 0, 0, 0, 0, 0,
	4401, 0, 0, 0, 4404, 0, 157, 0, 0, 0,
	0, 1717, 554, 0, 0, 0, 0, 0, 0, 4089,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 157, 3816, 0, 1717, 554, 0, 0, 1751, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 4106,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 157, 157, 157, 157, 157, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2076, 0, 0, 0, 0, 4133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 4507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4552, 4553, 0, 0, 0, 0, 4189,
	0, 0, 0, 0, 0, 0, 4564, 0, 0, 4566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 1085, 0, 0, 0, 0, 1085, 0,
	0, 0, 157, 157, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 1751, 157, 157, 157, 157, 0, 0,
	0, 160, 0, 0, 0, 4602, 656, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 699, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 158, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 492, 492, 492, 0, 0, 0, 0, 4362, 0,
	0, 0, 2229, 0, 0, 158, 158, 158, 158, 158,
	0, 158, 1083, 0, 0, 0, 0, 1083, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 157,
	2229, 2229, 2229, 0, 0, 0, 2229, 0, 2229, 2229,
	2229, 0, 2229, 2229, 0, 0, 0, 1084, 2229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2229, 2229, 2229, 2229, 0, 0, 2229, 2229,
	2229, 2229, 2229, 0, 0, 0, 0, 2229, 2229, 2229,
	2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 0,
	0, 0, 0, 157, 157, 157, 0, 0, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 1716, 553, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 553, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 158, 0, 0,
	0, 657, 0, 2166, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 158, 0, 0, 158, 158,
	158, 158, 0, 4495, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 4511, 657, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 157, 157, 0, 0, 0, 0, 0, 157,
	159, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	2100, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	4567, 0, 158, 0, 0, 0, 0, 0, 2122, 492,
	0, 0, 0, 2264, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	4148, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 159, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 657, 2170, 158, 4619, 0, 0, 490, 159, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 2347, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 0, 160, 0, 158, 158, 158,
	0, 0, 0, 0, 0, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 0, 2264, 0, 0, 1153, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4328, 0, 0, 0, 0,
	160, 160, 160, 160, 160, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 2170, 0, 2170, 0, 0, 2306,
	0, 0, 0, 0, 0, 0, 2307, 0, 0, 0,
	0, 2170, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 1390, 0, 2641, 0,
	158, 0, 0, 0, 2665, 0, 158, 158, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2640, 0, 0, 0,
	0, 0, 0, 0, 1083, 157, 0, 0, 0, 0,
	0, 0, 0, 2662, 0, 0, 0, 0, 0, 0,
	0, 2170, 0, 0, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 160, 157, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 2621, 160, 160, 160, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 1750, 0, 2631, 2630, 2643, 2650, 2629, 2642,
	2633, 0, 0, 2666, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2675, 0, 0, 160, 0, 656,
	157, 0, 0, 0, 0, 0, 0, 0, 656, 0,
	0, 2653, 2651, 2646, 0, 0, 0, 2648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2664,
	2686, 2637, 2636, 0, 0, 1084, 1084, 0, 0, 0,
	0, 1753, 0, 159, 0, 0, 0, 0, 0, 2632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2638, 2639, 0, 160, 2656,
	0, 2647, 2649, 2652, 2654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2229, 0,
	0, 0, 0, 0, 2229, 2229, 2229, 2229, 2229, 0,
	0, 0, 2682, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 160, 160, 160, 0, 0, 0, 0, 0,
	0, 0, 2229, 0, 0, 0, 0, 2690, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 2672, 158,
	1157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 157, 0,
	0, 157, 2844, 1753, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 160, 160, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 158, 2692, 2658, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1390,
	0, 2641, 0, 0, 0, 2669, 0, 2665, 0, 1085,
	1085, 0, 0, 0, 0, 2264, 0, 157, 2635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2640,
	0, 0, 2579, 0, 0, 0, 0, 2579, 0, 0,
	0, 0, 0, 0, 0, 0, 2662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2659, 2660,
	2579, 0, 2663, 2579, 0, 2668, 0, 2673, 2670, 2671,
	0, 2674, 2667, 0, 2677, 2676, 2678, 0, 2679, 2680,
	2681, 0, 0, 2683, 2684, 2685, 2687, 2688, 2689, 0,
	0, 0, 2661, 2691, 0, 0, 0, 0, 0, 0,
	0, 0, 2655, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2631, 3475, 2643,
	0, 3474, 2642, 2633, 0, 2734, 2666, 0, 1083, 1083,
	0, 0, 0, 0, 2170, 0, 0, 2675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 158, 0, 0, 158, 0, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 2229, 1753,
	0, 0, 2664, 2686, 2637, 2636, 2657, 0, 0, 0,
	157, 492, 0, 0, 0, 0, 157, 699, 0, 159,
	0, 0, 2632, 2229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 3476, 3477,
	0, 0, 2656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2682, 0, 0, 0, 0,
	0, 158, 160, 0, 0, 0, 0, 492, 1084, 0,
	157, 490, 0, 0, 0, 0, 0, 0, 0, 159,
	2690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 0, 0, 1083, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 490,
	490, 490, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 159, 159, 159, 0,
	159, 2166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2963, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 2971, 2975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 2994, 0, 0, 0, 0, 0, 0, 2658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 0, 2669, 0,
	0, 0, 0, 2579, 158, 0, 0, 157, 157, 3020,
	158, 2635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 159, 0, 0, 0,
	0, 0, 2167, 0, 0, 0, 0, 0, 0, 0,
	2170, 2170, 0, 0, 159, 0, 0, 159, 159, 159,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2659, 2660, 0, 157, 2663, 0, 159, 2668, 0,
	2673, 2670, 2671, 0, 2674, 2667, 0, 2677, 2676, 2678,
	0, 2679, 2680, 2681, 0, 0, 2683, 2684, 2685, 2687,
	2688, 2689, 0, 0, 0, 2661, 2691, 0, 0, 0,
	0, 0, 3282, 0, 158, 2655, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 160, 0, 0,
	160, 159, 0, 0, 0, 0, 0, 0, 490, 0,
	3166, 0, 2263, 0, 0, 0, 0, 0, 3166, 3166,
	3166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 2657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 3247, 0, 160, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	45, 0, 0, 0, 158, 0, 159, 159, 159, 0,
	0, 1083, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 75, 76, 0, 0, 0, 2170, 0,
	72, 2263, 0, 0, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 0, 0, 0, 0, 0, 0, 0,
	63, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 492, 492, 492, 492, 0, 0, 0, 0, 492,
	492, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 492, 0, 158, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 159, 159, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 3407,
	3408, 3409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 3166, 3166,
	0, 0, 2898, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 80, 0, 96, 3446, 160,
	0, 0, 0, 0, 0, 160, 1390, 657, 0, 0,
	0, 0, 0, 0, 2870, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3491, 0, 0, 2712, 0, 0,
	3497, 0, 0, 2867, 0, 0, 0, 0, 0, 0,
	2712, 0, 2712, 0, 0, 0, 3517, 0, 0, 0,
	0, 0, 0, 2712, 0, 2712, 3526, 2712, 2712, 2712,
	2712, 0, 0, 0, 3282, 0, 0, 2166, 0, 160,
	0, 0, 0, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3166, 0, 0, 0,
	0, 586, 3600, 580, 591, 573, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 3616, 0, 2871, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 2880, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 656, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 157, 0, 0, 0,
	0, 0, 1084, 0, 0, 0, 0, 0, 0, 2869,
	2892, 160, 0, 0, 0, 82, 83, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 81, 0, 66, 67, 73, 0, 74, 160,
	159, 0, 0, 1083, 0, 0, 2170, 0, 0, 0,
	0, 2712, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 160, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2887, 0, 0, 0, 159, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	572, 571, 574, 0, 0, 0, 0, 2896, 0, 0,
	579, 0, 0, 0, 492, 0, 0, 0, 2877, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 159, 0, 0, 0, 2889, 0, 3166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 2263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2862, 0, 0, 85,
	657, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	158, 0, 0, 0, 0, 0, 3282, 576, 577, 584,
	2116, 588, 589, 592, 0, 2874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 0, 492, 0, 0, 0, 0,
	157, 0, 0, 1750, 0, 0, 0, 0, 2863, 2865,
	0, 3881, 2868, 0, 492, 2873, 0, 2878, 2875, 2876,
	0, 2879, 2872, 0, 2882, 2881, 2883, 2170, 2884, 2885,
	2886, 0, 0, 2888, 2890, 2891, 2893, 2894, 2895, 0,
	0, 0, 2866, 2897, 0, 0, 0, 0, 0, 0,
	0, 0, 2899, 0, 0, 0, 159, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 160, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	492, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 157, 2861, 0, 0, 3166,
	0, 0, 3166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2167, 0, 2623, 2624, 0, 0, 0, 0, 4035, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 158, 0, 0, 0, 0, 2170,
	0, 0, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 2263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 492, 0, 0, 1084, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4172, 0, 0, 0, 0, 0,
	0, 0, 656, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 3166, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	89, 0, 0, 0, 0, 0, 4254, 0, 0, 0,
	0, 0, 2170, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4247, 0, 0,
	0, 0, 4657, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 3166, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	159, 159, 0, 96, 0, 0, 0, 0, 0, 4248,
	3282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 3043, 0, 0, 0, 62, 92, 91,
	490, 490, 490, 490, 57, 3079, 0, 4172, 490, 490,
	0, 490, 0, 0, 3090, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 490, 490, 0, 159, 490, 0,
	3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 0, 0,
	3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129,
	3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139,
	3140, 3141, 3142, 0, 3156, 3157, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4250, 0, 0, 0, 0, 0, 0, 2170,
	0, 0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0,
	4256, 0, 4260, 0, 0, 0, 0, 78, 3166, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 84, 0, 42, 0, 0, 0, 0, 1083,
	0, 60, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4254, 2167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4261, 4249, 0,
	66, 67, 73, 0, 74, 0, 4247, 0, 0, 0,
	0, 4651, 0, 0, 3295, 3296, 3297, 0, 3301, 3302,
	3303, 3304, 3305, 0, 0, 3308, 3309, 3310, 3311, 3312,
	3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322,
	3323, 3324, 0, 3326, 3327, 3328, 3329, 3330, 3331, 0,
	3334, 3335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4248, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 89, 0, 0, 71, 0, 0,
	4254, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 4247, 0, 0, 0, 0, 4645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 490, 0, 0, 4254, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 1659, 0, 490, 0, 69, 70,
	0, 4250, 0, 0, 0, 4247, 490, 0, 0, 0,
	4637, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256,
	0, 4260, 0, 490, 0, 3505, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 85, 0, 4423, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 84, 0, 4248, 0, 0, 0, 0, 0, 0,
	60, 3544, 3545, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 1646, 0, 0, 0, 4248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 4261, 4249, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4259, 4251, 4252, 4253,
	4257, 4258, 4255, 0, 4256, 0, 4260, 0, 0, 159,
	0, 78, 0, 79, 0, 0, 1660, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 84, 69, 70, 0,
	4250, 93, 0, 0, 47, 60, 0, 0, 0, 0,
	4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256, 0,
	4260, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 3699, 0, 3701, 490, 0, 0, 0, 0, 3707,
	3708, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	84, 0, 4254, 490, 0, 0, 0, 0, 0, 60,
	0, 0, 4161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 4247, 0, 0, 0, 0, 4610, 0,
	0, 4261, 4249, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 4261, 4249, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 490, 0, 490,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 85, 4248, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 1673, 1676, 1677, 1678, 1679, 1680,
	1681, 0, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 0, 1661, 1662, 1663, 1643,
	1642, 1674, 1644, 1647, 1641, 1645, 1640, 3846, 0, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4250, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 4259, 4251,
	4252, 4253, 4257, 4258, 4255, 0, 4256, 0, 4260, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 85,
	490, 0, 0, 159, 0, 59, 61, 60, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1664, 0, 0, 4261, 4249, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 3936, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 1673, 1676, 1677, 1678, 1679, 1680, 1681, 0,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 0, 1661, 1662, 1663, 1643, 1642, 1674,
	1644, 1647, 1641, 1645, 1640, 0, 0, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4098, 0, 4100, 4101, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 1041, 0, 1664, 447,
	800, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	356, 906, 862, 0, 0, 853, 704, 854, 887, 259,
	703, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 808, 313, 0, 0, 474, 422, 338, 0,
	0, 941, 0, 792, 793, 926, 984, 873, 971, 1047,
	907, 976, 1048, 89, 0, 0, 0, 0, 729, 555,
	730, 732, 733, 734, 735, 0, 0, 171, 731, 736,
	737, 738, 0, 936, 981, 1060, 852, 701, 718, 857,
	807, 4341, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 375, 283, 0, 0, 0, 0, 715,
	716, 0, 0, 0, 0, 823, 0, 717, 0, 867,
	713, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 719, 0, 0, 4278, 872, 850, 892,
	1002, 851, 849, 339, 864, 795, 1031, 924, 301, 191,
	1037, 922, 821, 990, 868, 1019, 1053, 910, 310, 866,
	195, 863, 869, 908, 352, 999, 1005, 805, 198, 312,
	1016, 888, 901, 726, 0, 391, 977, 466, 707, 278,
	963, 390, 314, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 419, 261, 254, 893, 1009, 856,
	284, 374, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 360, 224, 954, 947,
	940, 809, 469, 1056, 257, 1006, 471, 180, 405, 404,
	914, 292, 1007, 181, 170, 384, 182, 302, 204, 1027,
	484, 220, 308, 449, 706, 277, 351, 979, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1003, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	1046, 321, 266, 270, 286, 297, 978, 388, 426, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1001, 216, 237,
	427, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 727, 728, 246, 798, 1050, 211, 865,
	1049, 348, 355, 347, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 955, 424, 319, 0,
	206, 0, 423, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 993, 1059, 359, 392, 233, 468, 420, 262,
	875, 1063, 822, 810, 811, 814, 958, 959, 812, 815,
	816, 824, 796, 797, 799, 801, 802, 803, 946, 1038,
	860, 806, 1014, 817, 818, 819, 820, 986, 1057, 794,
	242, 743, 836, 837, 838, 744, 839, 840, 745, 746,
	841, 842, 843, 844, 747, 845, 846, 847, 825, 826,
	827, 828, 829, 830, 831, 832, 835, 833, 834, 0,
	942, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 804, 199, 212, 311, 1058, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 345,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 800, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 356, 906, 862, 0, 0, 853, 704, 854,
	887, 259, 703, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 808, 313, 0, 0, 474, 422,
	338, 0, 0, 941, 0, 792, 793, 926, 984, 873,
	971, 1047, 907, 976, 1048, 89, 0, 693, 0, 0,
	729, 555, 730, 732, 733, 734, 735, 0, 0, 171,
	731, 736, 737, 738, 0, 936, 981, 1060, 852, 701,
	718, 857, 807, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 375, 283, 0, 0, 0,
	0, 715, 716, 0, 0, 0, 0, 823, 0, 717,
	0, 867, 713, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 719, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 339, 864, 795, 1031, 924,
	301, 191, 1037, 922, 821, 990, 868, 1019, 1053, 910,
	310, 866, 195, 863, 869, 908, 352, 999, 1005, 805,
	198, 312, 1016, 888, 901, 726, 0, 391, 977, 466,
	707, 278, 963, 390, 314, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 419, 261, 254, 893,
	1009, 856, 284, 374, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 360, 224,
	954, 947, 940, 809, 469, 1056, 257, 1006, 471, 180,
	405, 404, 914, 292, 1007, 181, 170, 384, 182, 302,
	204, 1027, 484, 220, 308, 449, 706, 277, 351, 979,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1003, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 1046, 321, 266, 270, 286, 297, 978, 388,
	426, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1001,
	216, 237, 427, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 727, 728, 246, 798, 1050,
	211, 865, 1049, 348, 355, 347, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 955, 424,
	319, 0, 206, 0, 423, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 993, 1059, 359, 392, 233, 468,
	420, 262, 875, 1063, 822, 810, 811, 814, 958, 959,
	812, 815, 816, 824, 796, 797, 799, 801, 802, 803,
	946, 1038, 860, 806, 1014, 817, 818, 819, 820, 986,
	1057, 794, 242, 743, 836, 837, 838, 744, 839, 840,
	745, 746, 841, 842, 843, 844, 747, 845, 846, 847,
	825, 826, 827, 828, 829, 830, 831, 832, 835, 833,
	834, 0, 942, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 804, 199, 212, 311, 1058, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 345, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 0, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 356, 906, 862, 0, 0, 853,
	704, 854, 887, 259, 703, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 313, 0, 0,
	474, 422, 338, 0, 0, 941, 0, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 0,
	0, 0, 729, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 701, 718, 857, 807, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 375, 283, 0,
	0, 0, 0, 715, 716, 2227, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 339, 864, 795,
	1031, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 310, 866, 195, 863, 869, 908, 352, 999,
	1005, 805, 198, 312, 1016, 888, 901, 726, 0, 391,
	977, 466, 707, 278, 963, 390, 314, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 419, 261,
	254, 893, 1009, 856, 284, 374, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 418, 456, 200, 333, 457,
	479, 166, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	360, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 405, 404, 914, 292, 1007, 181, 170, 384,
	182, 302, 204, 1027, 484, 220, 308, 449, 706, 277,
	351, 979, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1003, 381, 407, 454, 222, 425, 173, 176,
	185, 397, 186, 187, 1046, 321, 266, 270, 286, 297,
	978, 388, 426, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1001, 216, 237, 427, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 348, 355, 347, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	955, 424, 319, 0, 206, 0, 423, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 993, 1059, 359, 392,
	233, 468, 420, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 946, 1038, 860, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 804, 199, 212, 311,
	1058, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 345, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 800, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 356, 906, 862, 0,
	0, 853, 704, 854, 887, 259, 703, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 808, 313,
	0, 0, 474, 422, 338, 0, 0, 941, 0, 792,
	793, 926, 984, 873, 971, 1047, 907, 976, 1048, 89,
	0, 0, 0, 0, 729, 555, 730, 732, 733, 734,
	735, 0, 0, 171, 731, 736, 737, 738, 0, 936,
	981, 1060, 852, 701, 718, 857, 807, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 375,
	283, 0, 0, 0, 0, 715, 716, 697, 0, 0,
	0, 823, 0, 717, 0, 867, 713, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 719,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 339,
	864, 795, 1031, 924, 301, 191, 1037, 922, 821, 990,
	868, 1019, 1053, 910, 310, 866, 195, 863, 869, 908,
	352, 999, 1005, 805, 198, 312, 1016, 888, 901, 726,
	0, 391, 977, 466, 707, 278, 963, 390, 314, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	419, 261, 254, 893, 1009, 856, 284, 374, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 360, 224, 954, 947, 940, 809, 469, 1056,
	257, 1006, 471, 180, 405, 404, 914, 292, 1007, 181,
	170, 384, 182, 302, 204, 1027, 484, 220, 308, 449,
	706, 277, 351, 979, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1003, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 1046, 321, 266, 270,
	286, 297, 978, 388, 426, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1001, 216, 237, 427, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 727,
	728, 246, 798, 1050, 211, 865, 1049, 348, 355, 347,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 955, 424, 319, 0, 206, 0, 423, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 993, 1059,
	359, 392, 233, 468, 420, 262, 875, 1063, 822, 810,
	811, 814, 958, 959, 812, 815, 816, 824, 796, 797,
	799, 801, 802, 803, 946, 1038, 860, 806, 1014, 817,
	818, 819, 820, 986, 1057, 794, 242, 743, 836, 837,
	838, 744, 839, 840, 745, 746, 841, 842, 843, 844,
	747, 845, 846, 847, 825, 826, 827, 828, 829, 830,
	831, 832, 835, 833, 834, 0, 942, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 804, 199,
	212, 311, 1058, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 345, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 0, 447, 800, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 356, 906,
	862, 0, 0, 853, 704, 854, 887, 259, 703, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	808, 313, 0, 0, 474, 422, 338, 0, 0, 941,
	0, 792, 793, 926, 984, 873, 971, 1047, 907, 2434,
	1048, 89, 0, 0, 0, 0, 2436, 555, 730, 732,
	733, 734, 735, 0, 0, 171, 731, 736, 737, 738,
	2435, 936, 981, 1060, 852, 701, 718, 857, 807, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 375, 283, 0, 0, 0, 0, 715, 716, 0,
	0, 0, 0, 823, 0, 717, 0, 867, 713, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 719, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 339, 864, 795, 1031, 924, 301, 191, 1037, 922,
	821, 990, 868, 1019, 1053, 910, 310, 866, 195, 863,
	869, 908, 352, 999, 1005, 805, 198, 312, 1016, 888,
	901, 726, 0, 391, 977, 466, 707, 278, 963, 390,
	314, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 419, 261, 254, 893, 1009, 856, 284, 374,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 418,
	456, 200, 333, 457, 479, 166, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 360, 224, 954, 947, 940, 809,
	469, 1056, 257, 1006, 471, 180, 405, 404, 914, 292,
	1007, 181, 170, 384, 182, 302, 204, 1027, 484, 220,
	308, 449, 706, 277, 351, 979, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1003, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 1046, 321,
	266, 270, 286, 297, 978, 388, 426, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1001, 216, 237, 427, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 727, 728, 246, 798, 1050, 211, 865, 1049, 348,
	355, 347, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 955, 424, 319, 0, 206, 0,
	423, 1044, 1062, 438, 226, 877, 1011, 453, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	993, 1059, 359, 392, 233, 468, 420, 262, 875, 1063,
	822, 810, 811, 814, 958, 959, 812, 815, 816, 824,
	796, 797, 799, 801, 802, 803, 946, 1038, 860, 806,
	1014, 817, 818, 819, 820, 986, 1057, 794, 242, 743,
	836, 837, 838, 744, 839, 840, 745, 746, 841, 842,
	843, 844, 747, 845, 846, 847, 825, 826, 827, 828,
	829, 830, 831, 832, 835, 833, 834, 0, 942, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	804, 199, 212, 311, 1058, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 345, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	800, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	356, 906, 862, 0, 0, 853, 704, 854, 887, 259,
	703, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 808, 313, 0, 0, 474, 422, 338, 0,
	0, 941, 0, 792, 793, 926, 984, 873, 971, 1047,
	907, 976, 1048, 89, 0, 0, 0, 0, 2334, 555,
	730, 732, 733, 734, 735, 0, 0, 171, 731, 736,
	737, 738, 0, 936, 981, 1060, 852, 701, 718, 857,
	807, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 375, 283, 0, 0, 0, 0, 715,
	716, 2227, 0, 0, 0, 823, 0, 717, 0, 867,
	713, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 719, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 339, 864, 795, 1031, 924, 301, 191,
	1037, 922, 821, 990, 868, 1019, 1053, 910, 310, 866,
	195, 863, 869, 908, 352, 999, 1005, 805, 198, 312,
	1016, 888, 901, 726, 0, 391, 977, 466, 707, 278,
	963, 390, 314, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 419, 261, 254, 893, 1009, 856,
	284, 374, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 360, 224, 954, 947,
	940, 809, 469, 1056, 257, 1006, 471, 180, 405, 404,
	914, 292, 1007, 181, 170, 384, 182, 302, 204, 1027,
	484, 220, 308, 449, 706, 277, 351, 979, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1003, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	1046, 321, 266, 270, 286, 297, 978, 388, 426, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1001, 216, 237,
	427, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 727, 728, 246, 798, 1050, 211, 865,
	1049, 348, 355, 347, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 955, 424, 319, 0,
	206, 0, 423, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 993, 1059, 359, 392, 233, 468, 420, 262,
	875, 1063, 822, 810, 811, 814, 958, 959, 812, 815,
	816, 824, 796, 797, 799, 801, 802, 803, 946, 1038,
	860, 806, 1014, 817, 818, 819, 820, 986, 1057, 794,
	242, 743, 836, 837, 838, 744, 839, 840, 745, 746,
	841, 842, 843, 844, 747, 845, 846, 847, 825, 826,
	827, 828, 829, 830, 831, 832, 835, 833, 834, 0,
	942, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 804, 199, 212, 311, 1058, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 345,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 800, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 356, 906, 862, 0, 0, 853, 704, 854,
	887, 259, 703, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 808, 313, 0, 0, 474, 422,
	338, 0, 0, 941, 0, 792, 793, 926, 984, 873,
	971, 1047, 907, 976, 1048, 89, 0, 0, 0, 0,
	2331, 555, 730, 732, 733, 734, 735, 0, 0, 171,
	731, 736, 737, 738, 0, 936, 981, 1060, 852, 701,
	718, 857, 807, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 375, 283, 0, 0, 0,
	0, 715, 716, 2227, 0, 0, 0, 823, 0, 717,
	0, 867, 713, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 719, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 339, 864, 795, 1031, 924,
	301, 191, 1037, 922, 821, 990, 868, 1019, 1053, 910,
	310, 866, 195, 863, 869, 908, 352, 999, 1005, 805,
	198, 312, 1016, 888, 901, 726, 0, 391, 977, 466,
	707, 278, 963, 390, 314, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 419, 261, 254, 893,
	1009, 856, 284, 374, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 360, 224,
	954, 947, 940, 809, 469, 1056, 257, 1006, 471, 180,
	405, 404, 914, 292, 1007, 181, 170, 384, 182, 302,
	204, 1027, 484, 220, 308, 449, 706, 277, 351, 979,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1003, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 1046, 321, 266, 270, 286, 297, 978, 388,
	426, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1001,
	216, 237, 427, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 727, 728, 246, 798, 1050,
	211, 865, 1049, 348, 355, 347, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 955, 424,
	319, 0, 206, 0, 423, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 993, 1059, 359, 392, 233, 468,
	420, 262, 875, 1063, 822, 810, 811, 814, 958, 959,
	812, 815, 816, 824, 796, 797, 799, 801, 802, 803,
	946, 1038, 860, 806, 1014, 817, 818, 819, 820, 986,
	1057, 794, 242, 743, 836, 837, 838, 744, 839, 840,
	745, 746, 841, 842, 843, 844, 747, 845, 846, 847,
	825, 826, 827, 828, 829, 830, 831, 832, 835, 833,
	834, 0, 942, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 804, 199, 212, 311, 1058, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 345, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 42, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 356, 906, 862, 0, 0, 853,
	704, 854, 887, 259, 703, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 313, 0, 0,
	474, 422, 338, 0, 0, 941, 0, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 0,
	0, 0, 729, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 701, 718, 857, 807, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 375, 283, 0,
	0, 0, 0, 715, 716, 0, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 339, 864, 795,
	1539, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 310, 866, 195, 863, 869, 908, 352, 999,
	1005, 805, 198, 312, 1016, 888, 901, 726, 0, 391,
	977, 466, 707, 278, 963, 390, 314, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 419, 261,
	254, 893, 1009, 856, 284, 374, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 418, 456, 200, 333, 457,
	479, 166, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	360, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 405, 404, 914, 292, 1007, 181, 170, 384,
	182, 302, 204, 1027, 484, 220, 308, 449, 706, 277,
	351, 979, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1003, 381, 407, 454, 222, 425, 173, 176,
	185, 397, 186, 187, 1046, 321, 266, 270, 286, 297,
	978, 388, 426, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1001, 216, 237, 427, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 348, 355, 347, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	955, 424, 319, 0, 206, 0, 423, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 993, 1059, 359, 392,
	233, 468, 420, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 946, 1038, 860, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 804, 199, 212, 311,
	1537, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 345, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 800, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 356, 906, 862, 0,
	0, 853, 704, 854, 887, 259, 703, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 808, 313,
	0, 0, 474, 422, 338, 0, 0, 941, 0, 792,
	793, 926, 984, 873, 971, 1047, 907, 976, 1048, 89,
	0, 2098, 0, 0, 729, 555, 730, 732, 733, 734,
	735, 0, 0, 171, 731, 736, 737, 738, 0, 936,
	981, 1060, 852, 701, 718, 857, 807, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 375,
	283, 0, 0, 0, 0, 715, 716, 0, 0, 0,
	0, 823, 0, 717, 0, 867, 713, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 719,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 339,
	864, 795, 1031, 924, 301, 191, 1037, 922, 821, 990,
	868, 1019, 1053, 910, 310, 866, 195, 863, 869, 908,
	352, 999, 1005, 805, 198, 312, 1016, 888, 901, 726,
	0, 391, 977, 466, 707, 278, 963, 390, 314, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	419, 261, 254, 893, 1009, 856, 284, 374, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 360, 224, 954, 947, 940, 809, 469, 1056,
	257, 1006, 471, 180, 405, 404, 914, 292, 1007, 181,
	170, 384, 182, 302, 204, 1027, 484, 220, 308, 449,
	706, 277, 351, 979, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1003, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 1046, 321, 266, 270,
	286, 297, 978, 388, 426, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1001, 216, 237, 427, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 727,
	728, 246, 798, 1050, 211, 865, 1049, 348, 355, 347,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 955, 424, 319, 0, 206, 0, 423, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 993, 1059,
	359, 392, 233, 468, 420, 262, 875, 1063, 822, 810,
	811, 814, 958, 959, 812, 815, 816, 824, 796, 797,
	799, 801, 802, 803, 946, 1038, 860, 806, 1014, 817,
	818, 819, 820, 986, 1057, 794, 242, 743, 836, 837,
	838, 744, 839, 840, 745, 746, 841, 842, 843, 844,
	747, 845, 846, 847, 825, 826, 827, 828, 829, 830,
	831, 832, 835, 833, 834, 0, 942, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 804, 199,
	212, 311, 1058, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 345, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 0, 447, 800, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 356, 906,
	862, 0, 0, 853, 704, 854, 887, 259, 703, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	808, 313, 0, 0, 474, 422, 338, 0, 0, 941,
	0, 792, 793, 926, 984, 873, 971, 1047, 907, 976,
	1048, 89, 0, 0, 0, 0, 729, 555, 730, 732,
	733, 734, 735, 0, 0, 171, 731, 736, 737, 738,
	0, 936, 981, 1060, 852, 701, 718, 857, 807, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 375, 283, 0, 0, 0, 0, 715, 716, 0,
	0, 0, 0, 823, 0, 717, 0, 867, 713, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 719, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 339, 864, 795, 1031, 924, 301, 191, 1037, 922,
	821, 990, 868, 1019, 1053, 910, 310, 866, 195, 863,
	869, 908, 352, 999, 1005, 805, 198, 312, 1016, 888,
	901, 726, 0, 391, 977, 466, 707, 278, 963, 390,
	314, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 419, 261, 254, 893, 1009, 856, 284, 374,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 418,
	456, 200, 333, 457, 479, 166, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 360, 224, 954, 947, 940, 809,
	469, 1056, 257, 1006, 471, 180, 405, 404, 914, 292,
	1007, 181, 170, 384, 182, 302, 204, 1027, 484, 220,
	308, 449, 706, 277, 351, 979, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1003, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 1046, 321,
	266, 270, 286, 297, 978, 388, 426, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1001, 216, 237, 427, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 727, 728, 246, 798, 1050, 211, 865, 1049, 348,
	355, 347, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 955, 424, 319, 0, 206, 0,
	423, 1044, 1062, 438, 226, 877, 1011, 453, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	993, 1059, 359, 392, 233, 468, 420, 262, 875, 1063,
	822, 810, 811, 814, 958, 959, 812, 815, 816, 824,
	796, 797, 799, 801, 802, 803, 946, 1038, 860, 806,
	1014, 817, 818, 819, 820, 986, 1057, 794, 242, 743,
	836, 837, 838, 744, 839, 840, 745, 746, 841, 842,
	843, 844, 747, 845, 846, 847, 825, 826, 827, 828,
	829, 830, 831, 832, 835, 833, 834, 0, 942, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	804, 199, 212, 311, 1058, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 345, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	800, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	356, 906, 862, 0, 0, 853, 1103, 854, 887, 259,
	1101, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 808, 313, 0, 0, 474, 422, 338, 0,
	0, 941, 0, 792, 793, 926, 984, 873, 971, 1047,
	907, 976, 1048, 89, 0, 0, 0, 0, 729, 555,
	730, 732, 733, 734, 735, 0, 0, 171, 731, 736,
	737, 738, 0, 936, 981, 1060, 852, 1120, 718, 857,
	807, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 375, 283, 0, 0, 0, 0, 715,
	716, 0, 0, 0, 0, 823, 0, 717, 0, 867,
	713, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 719, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 339, 864, 795, 1031, 924, 301, 191,
	1037, 922, 821, 990, 868, 1019, 1053, 910, 310, 866,
	195, 863, 869, 908, 352, 999, 1005, 805, 198, 312,
	1016, 888, 901, 726, 0, 391, 977, 466, 707, 278,
	963, 390, 314, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 419, 261, 254, 893, 1009, 856,
	284, 374, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 360, 224, 954, 947,
	940, 809, 469, 1056, 257, 1006, 471, 180, 405, 404,
	914, 292, 1007, 181, 170, 384, 182, 302, 204, 1027,
	484, 220, 308, 449, 706, 277, 351, 979, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1003, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	1046, 321, 266, 270, 286, 297, 978, 388, 426, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1001, 216, 237,
	427, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 727, 728, 246, 798, 1050, 211, 865,
	1049, 348, 355, 347, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 955, 424, 319, 0,
	206, 0, 423, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 993, 1059, 359, 392, 233, 468, 420, 262,
	875, 1063, 822, 810, 811, 814, 958, 959, 812, 815,
	816, 824, 796, 797, 799, 801, 802, 803, 946, 1038,
	860, 806, 1014, 817, 818, 819, 820, 986, 1057, 794,
	242, 743, 836, 837, 838, 744, 839, 840, 745, 746,
	841, 842, 843, 844, 747, 845, 846, 847, 825, 826,
	827, 828, 829, 830, 831, 832, 835, 833, 834, 0,
	942, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 804, 199, 212, 311, 1058, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 345,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 800, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 356, 906, 862, 0, 0, 853, 1103, 854,
	887, 259, 1101, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 808, 313, 0, 0, 474, 422,
	338, 0, 0, 941, 0, 792, 793, 926, 984, 873,
	971, 1047, 907, 976, 1048, 89, 0, 0, 0, 0,
	729, 555, 730, 732, 733, 734, 735, 0, 0, 171,
	731, 736, 737, 738, 0, 936, 981, 1060, 852, 1120,
	718, 857, 807, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 375, 283, 0, 0, 0,
	0, 715, 716, 0, 0, 0, 0, 823, 0, 717,
	0, 867, 713, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 719, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 339, 864, 795, 1031, 924,
	301, 191, 1037, 922, 821, 990, 868, 1019, 1053, 910,
	310, 866, 195, 863, 869, 908, 352, 999, 1005, 805,
	198, 312, 1016, 888, 901, 726, 0, 391, 977, 466,
	707, 278, 4496, 390, 314, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 419, 261, 254, 893,
	1009, 856, 284, 374, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 360, 224,
	954, 947, 940, 809, 469, 1056, 257, 1006, 471, 180,
	405, 404, 914, 292, 1007, 181, 170, 384, 182, 302,
	204, 1027, 484, 220, 308, 449, 706, 277, 351, 979,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1003, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 1046, 321, 266, 270, 286, 297, 978, 388,
	426, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1001,
	216, 237, 427, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 727, 728, 246, 798, 1050,
	211, 865, 1049, 348, 355, 347, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 955, 424,
	319, 0, 206, 0, 423, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 993, 1059, 359, 392, 233, 468,
	420, 262, 875, 1063, 822, 810, 811, 814, 958, 959,
	812, 815, 816, 824, 796, 797, 799, 801, 802, 803,
	946, 1038, 860, 806, 1014, 817, 818, 819, 820, 986,
	1057, 794, 242, 743, 836, 837, 838, 744, 839, 840,
	745, 746, 841, 842, 843, 844, 747, 845, 846, 847,
	825, 826, 827, 828, 829, 830, 831, 832, 835, 833,
	834, 0, 942, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 804, 199, 212, 311, 1058, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 345, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 899,
	1041, 0, 0, 447, 800, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 356, 906, 862, 0, 0, 853,
	1103, 854, 887, 259, 1101, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 808, 313, 0, 0,
	474, 422, 338, 0, 0, 941, 0, 792, 793, 926,
	984, 873, 971, 1047, 907, 976, 1048, 89, 0, 0,
	0, 0, 729, 555, 730, 732, 733, 734, 735, 0,
	0, 171, 731, 736, 737, 738, 0, 936, 981, 1060,
	852, 1120, 718, 857, 807, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 375, 283, 0,
	0, 0, 0, 715, 716, 0, 0, 0, 0, 823,
	0, 717, 0, 867, 713, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 719, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 339, 864, 795,
	1031, 924, 301, 191, 1037, 922, 821, 990, 868, 1019,
	1053, 910, 310, 866, 195, 863, 869, 908, 352, 999,
	1005, 805, 198, 312, 1016, 888, 901, 726, 0, 391,
	977, 466, 707, 278, 963, 390, 314, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 419, 261,
	254, 893, 1009, 856, 284, 374, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 418, 456, 200, 333, 457,
	479, 166, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	360, 224, 954, 947, 940, 809, 469, 1056, 257, 1006,
	471, 180, 405, 404, 914, 292, 1007, 181, 170, 384,
	182, 302, 204, 1027, 484, 220, 308, 449, 706, 277,
	351, 979, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1003, 381, 407, 454, 222, 425, 173, 176,
	185, 397, 186, 187, 1046, 321, 266, 270, 286, 297,
	978, 388, 426, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1001, 216, 237, 427, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 727, 728, 246,
	798, 1050, 211, 865, 1049, 348, 355, 347, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	955, 424, 319, 0, 206, 0, 423, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 993, 1059, 359, 392,
	233, 468, 420, 262, 875, 1063, 822, 810, 811, 814,
	958, 959, 812, 815, 816, 824, 796, 797, 799, 801,
	802, 803, 2337, 2338, 2339, 806, 1014, 817, 818, 819,
	820, 986, 1057, 794, 242, 743, 836, 837, 838, 744,
	839, 840, 745, 746, 841, 842, 843, 844, 747, 845,
	846, 847, 825, 826, 827, 828, 829, 830, 831, 832,
	835, 833, 834, 0, 942, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 804, 199, 212, 311,
	1058, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 345, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 1826, 2005, 0, 3672, 447, 1860, 2009, 1809, 1839,
	2027, 1845, 1848, 1929, 1775, 1898, 356, 1836, 1776, 1759,
	1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007,
	1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824,
	1927, 1984, 2006, 1879, 0, 172, 476, 190, 3673, 313,
	1981, 495, 3674, 422, 338, 498, 497, 1875, 1990, 1896,
	1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 89,
	0, 693, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1919, 2003, 1830, 496, 1870,
	1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821,
	1822, 263, 0, 0, 0, 0, 0, 0, 0, 1873,
	1897, 1949, 1855, 0, 467, 1934, 1944, 1962, 1847, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1912, 0, 0, 0, 1783, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 339,
	1779, 1964, 3676, 1856, 301, 191, 2000, 1854, 1853, 1938,
	1784, 1974, 2024, 1840, 310, 1782, 195, 1777, 1785, 1838,
	352, 1948, 1956, 177, 198, 312, 1971, 1812, 1829, 245,
	2169, 391, 1924, 466, 494, 278, 1905, 390, 314, 459,
	1939, 2002, 465, 1841, 441, 475, 480, 271, 1881, 234,
	419, 261, 254, 1820, 1961, 1766, 284, 374, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 360, 224, 1894, 1887, 1874, 1952, 469, 2028,
	257, 1957, 471, 180, 405, 404, 1844, 292, 1958, 181,
	170, 384, 182, 302, 204, 1983, 484, 220, 308, 449,
	493, 277, 351, 1926, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1954, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 2010, 321, 266, 270,
	286, 297, 1925, 388, 426, 472, 1916, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1950, 216, 237, 427, 210, 1998, 1973,
	1907, 1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866,
	1867, 1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 462,
	463, 246, 1780, 2018, 211, 1781, 2017, 348, 355, 347,
	2021, 2019, 458, 1999, 1908, 1893, 1891, 1773, 1997, 1906,
	1892, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1895, 424, 319, 0, 206, 0, 423, 2008,
	2034, 438, 226, 1799, 1965, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1941, 2031,
	359, 392, 233, 468, 420, 262, 1795, 0, 1798, 1793,
	1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0,
	0, 1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 188,
	189, 174, 179, 1933, 2029, 1846, 242, 164, 1770, 1771,
	1772, 165, 1876, 1877, 167, 168, 1987, 1986, 1985, 1988,
	169, 2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885,
	1917, 1918, 1963, 1936, 1945, 1819, 1878, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 1904, 199,
	212, 311, 3675, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1966, 1911, 0, 1850, 1852, 1851,
	1801, 1803, 1802, 1800, 2033, 345, 1993, 1757, 1765, 1792,
	1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872,
	1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980,
	1982, 470, 252, 1884, 1909, 1947, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 1857,
	196, 0, 0, 202, 0, 203, 205, 1842, 201, 1989,
	2025, 1921, 1935, 1826, 2005, 0, 1967, 447, 1860, 2009,
	1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898, 356, 1836,
	1776, 1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970,
	1901, 2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995,
	1825, 1824, 1927, 1984, 2006, 1879, 0, 172, 476, 190,
	2016, 313, 1981, 495, 474, 422, 338, 498, 497, 1875,
	1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923,
	2012, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1919, 2003, 1830,
	496, 1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026,
	1996, 1821, 1822, 263, 0, 0, 0, 0, 0, 0,
	0, 1873, 1897, 1949, 1855, 0, 467, 1934, 1944, 1962,
	1847, 375, 283, 0, 0, 0, 0, 0, 0, 3185,
	0, 1816, 0, 1912, 0, 0, 0, 1783, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761,
	1758, 339, 1779, 1964, 1994, 1856, 301, 191, 2000, 1854,
	1853, 1938, 1784, 1974, 2024, 1840, 310, 1782, 195, 1777,
	1785, 1838, 352, 1948, 1956, 177, 198, 312, 1971, 1812,
	1829, 245, 0, 391, 1924, 466, 2266, 278, 1905, 390,
	314, 459, 1939, 2002, 465, 1841, 441, 475, 480, 271,
	1881, 234, 419, 261, 254, 1820, 1961, 1766, 284, 374,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 418,
	456, 200, 333, 457, 479, 166, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 360, 224, 1894, 1887, 1874, 1952,
	469, 2028, 257, 1957, 471, 180, 405, 404, 1844, 292,
	1958, 181, 170, 384, 182, 302, 204, 1983, 484, 220,
	308, 449, 2265, 277, 351, 1926, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1954, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 2010, 321,
	266, 270, 286, 297, 1925, 388, 426, 472, 1916, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1950, 216, 237, 427, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 462, 463, 246, 1780, 2018, 211, 1781, 2017, 348,
	355, 347, 2021, 2019, 458, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1895, 424, 319, 0, 206, 0,
	423, 2008, 2034, 438, 226, 1799, 1965, 453, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1941, 2031, 359, 392, 233, 468, 420, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 188, 189, 174, 179, 1933, 2029, 1846, 242, 164,
	1770, 1771, 1772, 165, 1876, 1877, 167, 168, 1987, 1986,
	1985, 1988, 169, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	1904, 199, 212, 311, 2030, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 345, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 470, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 447,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	356, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	476, 190, 2016, 313, 1981, 495, 474, 422, 338, 498,
	497, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 496, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 467, 1934,
	1944, 1962, 1847, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 339, 1779, 1964, 1994, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 310, 1782,
	195, 1777, 1785, 1838, 352, 1948, 1956, 177, 198, 312,
	1971, 1812, 1829, 245, 2169, 391, 1924, 466, 494, 278,
	1905, 390, 314, 459, 1939, 2002, 465, 1841, 441, 475,
	480, 271, 1881, 234, 419, 261, 254, 1820, 1961, 1766,
	284, 374, 249, 306, 1859, 1930, 1813, 241, 1942, 1913,
	1976, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828,
	2004, 293, 285, 1979, 1977, 1831, 360, 224, 1894, 1887,
	1874, 1952, 469, 2028, 257, 1957, 471, 180, 405, 404,
	1844, 292, 1958, 181, 170, 384, 182, 302, 204, 1983,
	484, 220, 308, 449, 493, 277, 351, 1926, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1954, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	2010, 321, 266, 270, 286, 297, 1925, 388, 426, 472,
	1916, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1950, 216, 237,
	427, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 462, 463, 246, 1780, 2018, 211, 1781,
	2017, 348, 355, 347, 2021, 2019, 458, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 1895, 424, 319, 0,
	206, 0, 423, 2008, 2034, 438, 226, 1799, 1965, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 1941, 2031, 359, 392, 233, 468, 420, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 188, 189, 174, 179, 1933, 2029, 1846,
	242, 164, 1770, 1771, 1772, 165, 1876, 1877, 167, 168,
	1987, 1986, 1985, 1988, 169, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 1904, 199, 212, 311, 2030, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 345,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 470, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 447, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 356, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 476, 190, 2016, 313, 1981, 495, 474, 422,
	338, 498, 497, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 496, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	467, 1934, 1944, 1962, 1847, 375, 283, 0, 0, 0,
	0, 0, 0, 2260, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 339, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	310, 1782, 195, 1777, 1785, 1838, 352, 1948, 1956, 177,
	198, 312, 1971, 1812, 1829, 245, 0, 391, 1924, 466,
	2266, 278, 1905, 390, 314, 459, 1939, 2002, 465, 1841,
	441, 475, 480, 271, 1881, 234, 419, 261, 254, 1820,
	1961, 1766, 284, 374, 249, 306, 1859, 1930, 1813, 241,
	1942, 1913, 1976, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797,
	1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 360, 224,
	1894, 1887, 1874, 1952, 469, 2028, 257, 1957, 471, 180,
	405, 404, 1844, 292, 1958, 181, 170, 384, 182, 302,
	204, 1983, 484, 220, 308, 449, 2265, 277, 351, 1926,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1954, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 2010, 321, 266, 270, 286, 297, 1925, 388,
	426, 472, 1916, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1950,
	216, 237, 427, 210, 1998, 1973, 1907, 1862, 1868, 1768,
	0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833,
	1805, 1920, 1804, 281, 1937, 462, 463, 246, 1780, 2018,
	211, 1781, 2017, 348, 355, 347, 2021, 2019, 458, 1999,
	1908, 1893, 1891, 1773, 1997, 1906, 1892, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 1895, 424,
	319, 0, 206, 0, 423, 2008, 2034, 438, 226, 1799,
	1965, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 1941, 2031, 359, 392, 233, 468,
	420, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899, 1900,
	2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992, 0,
	1886, 2001, 1774, 0, 1969, 188, 189, 174, 179, 1933,
	2029, 1846, 242, 164, 1770, 1771, 1772, 165, 1876, 1877,
	167, 168, 1987, 1986, 1985, 1988, 169, 2022, 2020, 2023,
	1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936,
	1945, 1819, 1878, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 1904, 199, 212, 311, 2030, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802, 1800,
	2033, 345, 1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834,
	1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910,
	1940, 1943, 1960, 1968, 1975, 1980, 1982, 470, 252, 1884,
	1909, 1947, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 1857, 196, 0, 0, 202,
	0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935, 1826,
	2005, 0, 1967, 447, 1860, 2009, 1809, 1839, 2027, 1845,
	1848, 1929, 1775, 1898, 356, 1836, 1776, 1759, 1814, 1763,
	1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880, 1922,
	1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927, 1984,
	2006, 1879, 0, 172, 476, 190, 2016, 313, 1981, 495,
	474, 422, 338, 498, 497, 1875, 1990, 1896, 1959, 1858,
	1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1919, 2003, 1830, 496, 1870, 1928, 2032,
	1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822, 263,
	0, 0, 0, 0, 0, 0, 0, 1873, 1897, 1949,
	1855, 0, 467, 1934, 1944, 1962, 1847, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 1912,
	0, 0, 0, 1783, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 1790, 1760, 1818, 1951, 1761, 1758, 339, 1779, 1964,
	1994, 1856, 301, 191, 2000, 1854, 1853, 1938, 1784, 1974,
	2024, 1840, 310, 1782, 195, 1777, 1785, 1838, 352, 1948,
	1956, 177, 198, 312, 1971, 1812, 1829, 245, 0, 391,
	1924, 466, 2266, 278, 1905, 390, 314, 459, 1939, 2002,
	465, 1841, 441, 475, 480, 271, 1881, 234, 419, 261,
	254, 1820, 1961, 1766, 284, 374, 249, 306, 1859, 1930,
	1813, 241, 1942, 1913, 1976, 418, 456, 200, 333, 457,
	479, 166, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1972, 1955, 1978, 1806,
	1786, 1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831,
	360, 224, 1894, 1887, 1874, 1952, 469, 2028, 257, 1957,
	471, 180, 405, 404, 1844, 292, 1958, 181, 170, 384,
	182, 302, 204, 1983, 484, 220, 308, 449, 2265, 277,
	351, 1926, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1954, 381, 407, 454, 222, 425, 173, 176,
	185, 397, 186, 187, 2010, 321, 266, 270, 286, 297,
	1925, 388, 426, 472, 1916, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1950, 216, 237, 427, 210, 1998, 1973, 1907, 1862,
	1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946,
	1817, 1833, 1805, 1920, 1804, 281, 1937, 462, 463, 246,
	1780, 2018, 211, 1781, 2017, 348, 355, 347, 2021, 2019,
	458, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	1895, 424, 319, 0, 206, 0, 423, 2008, 2034, 438,
	226, 1799, 1965, 453, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 1941, 2031, 359, 392,
	233, 468, 420, 262, 1795, 0, 1798, 1793, 1796, 1794,
	1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991,
	1992, 0, 1886, 2001, 1774, 0, 1969, 188, 189, 174,
	179, 1933, 2029, 1846, 242, 164, 1770, 1771, 1772, 165,
	1876, 1877, 167, 168, 1987, 1986, 1985, 1988, 169, 2022,
	2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918,
	1963, 1936, 1945, 1819, 1878, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 1904, 199, 212, 311,
	2030, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803,
	1802, 1800, 2033, 345, 1993, 1757, 1765, 1792, 1808, 1815,
	1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902,
	1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 470,
	252, 1884, 1909, 1947, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 1857, 196, 0,
	0, 202, 0, 203, 205, 1842, 201, 1989, 2025, 1921,
	1935, 899, 1041, 0, 0, 447, 1108, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 356, 906, 862, 0,
	0, 853, 1103, 854, 887, 259, 1101, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 1141, 313,
	0, 495, 474, 422, 338, 498, 497, 941, 0, 1115,
	1128, 926, 984, 873, 971, 1047, 907, 976, 1048, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1123, 1137, 1104, 496, 936,
	981, 1060, 852, 1120, 0, 857, 1092, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 867, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 339,
	864, 1130, 1031, 924, 301, 191, 1037, 922, 1107, 990,
	868, 1019, 1053, 910, 310, 866, 195, 863, 869, 908,
	352, 999, 1005, 177, 198, 312, 1016, 888, 901, 245,
	3284, 391, 977, 466, 2350, 278, 963, 390, 314, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	419, 261, 254, 893, 1009, 856, 284, 374, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 360, 224, 954, 947, 940, 1126, 469, 1056,
	257, 1006, 471, 180, 405, 404, 914, 292, 1007, 181,
	170, 384, 182, 302, 204, 1027, 484, 220, 308, 449,
	2349, 277, 351, 979, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1003, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 1046, 321, 266, 270,
	286, 297, 978, 388, 426, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1001, 216, 237, 427, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 462,
	463, 246, 1093, 1050, 211, 865, 1049, 348, 355, 347,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 955, 424, 319, 0, 206, 0, 423, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 993, 1059,
	359, 392, 233, 468, 420, 262, 1098, 0, 1100, 1096,
	1099, 1097, 1116, 1117, 1138, 1139, 1140, 1127, 1094, 192,
	193, 1135, 1136, 194, 946, 1038, 860, 0, 1014, 188,
	189, 174, 179, 986, 1057, 1106, 242, 164, 1089, 1090,
	1091, 165, 1110, 1111, 167, 168, 1133, 1132, 1131, 1134,
	169, 1143, 1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114,
	1121, 1122, 1129, 1124, 1125, 0, 942, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 1118, 199,
	212, 311, 1058, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 345, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 1826, 2005, 0, 1967, 447, 1860, 2009,
	1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898, 356, 1836,
	1776, 1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970,
	1901, 2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995,
	1825, 1824, 1927, 1984, 2006, 1879, 0, 172, 476, 190,
	2016, 313, 1981, 495, 474, 422, 338, 498, 497, 1875,
	1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923,
	2012, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1919, 2003, 1830,
	496, 1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026,
	1996, 1821, 1822, 263, 0, 0, 0, 0, 0, 0,
	0, 1873, 1897, 1949, 1855, 0, 467, 1934, 1944, 1962,
	1847, 375, 283, 0, 0, 0, 0, 0, 0, 2845,
	0, 1816, 0, 1912, 0, 0, 0, 1783, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761,
	1758, 339, 1779, 1964, 1994, 1856, 301, 191, 2000, 1854,
	1853, 1938, 1784, 1974, 2024, 1840, 310, 1782, 195, 1777,
	1785, 1838, 352, 1948, 1956, 177, 198, 312, 1971, 1812,
	1829, 245, 0, 391, 1924, 466, 494, 278, 1905, 390,
	314, 459, 1939, 2002, 465, 1841, 441, 475, 480, 271,
	1881, 234, 419, 261, 254, 1820, 1961, 1766, 284, 374,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 418,
	456, 200, 333, 457, 479, 0, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 360, 224, 1894, 1887, 1874, 1952,
	469, 2028, 257, 1957, 471, 180, 405, 404, 1844, 292,
	1958, 181, 170, 384, 182, 302, 204, 1983, 484, 220,
	308, 449, 493, 277, 351, 1926, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1954, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 2010, 321,
	266, 270, 286, 297, 1925, 388, 426, 472, 1916, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1950, 216, 237, 427, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 462, 463, 246, 1780, 2018, 211, 1781, 2017, 348,
	355, 347, 2021, 2019, 458, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1895, 424, 319, 0, 206, 0,
	423, 2008, 2034, 438, 226, 1799, 1965, 453, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1941, 2031, 359, 392, 233, 468, 420, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 188, 189, 174, 179, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	1904, 199, 212, 311, 2030, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 345, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 470, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 899, 1041, 0, 0, 447,
	1108, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	356, 906, 862, 0, 0, 853, 1103, 854, 887, 259,
	1101, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 1141, 313, 0, 495, 474, 422, 338, 498,
	497, 941, 0, 1115, 1128, 926, 984, 873, 971, 1047,
	907, 976, 1048, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1123,
	1137, 1104, 496, 936, 981, 1060, 852, 1120, 0, 857,
	1092, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 867,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 339, 864, 1130, 1031, 924, 301, 191,
	1037, 922, 1107, 990, 868, 1019, 1053, 910, 310, 866,
	195, 863, 869, 908, 352, 999, 1005, 177, 198, 312,
	1016, 888, 901, 245, 0, 391, 977, 466, 2350, 278,
	963, 390, 314, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 419, 261, 254, 893, 1009, 856,
	284, 374, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 360, 224, 954, 947,
	940, 1126, 469, 1056, 257, 1006, 471, 180, 405, 404,
	914, 292, 1007, 181, 170, 384, 182, 302, 204, 1027,
	484, 220, 308, 449, 2349, 277, 351, 979, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1003, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	1046, 321, 266, 270, 286, 297, 978, 388, 426, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1001, 216, 237,
	427, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 462, 463, 246, 1093, 1050, 211, 865,
	1049, 348, 355, 347, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 955, 424, 319, 0,
	206, 0, 423, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 993, 1059, 359, 392, 233, 468, 420, 262,
	1098, 0, 1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139,
	1140, 1127, 1094, 192, 193, 1135, 1136, 194, 946, 1038,
	860, 0, 1014, 188, 189, 174, 179, 986, 1057, 1106,
	242, 164, 1089, 1090, 1091, 165, 1110, 1111, 167, 168,
	1133, 1132, 1131, 1134, 169, 1143, 1142, 1144, 1095, 1102,
	1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124, 1125, 0,
	942, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 1118, 199, 212, 311, 1058, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 345,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 1826, 2005, 0,
	1967, 447, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 356, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 172, 476, 190, 2016, 313, 1981, 495, 474, 422,
	338, 498, 497, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1919, 2003, 1830, 496, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	467, 1934, 1944, 1962, 1847, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 339, 1779, 1964, 1994, 1856,
	301, 191, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	310, 1782, 195, 1777, 1785, 1838, 352, 1948, 1956, 177,
	198, 312, 1971, 1812, 1829, 245, 0, 391, 1924, 466,
	494, 278, 1905, 390, 314, 459, 1939, 2002, 465, 1841,
	441, 475, 480, 271, 1881, 234, 419, 261, 254, 1820,
	1961, 1766, 284, 374, 249, 306, 1859, 1930, 1813, 241,
	1942, 1913, 1976, 418, 456, 200, 333, 457, 479, 0,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797,
	1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 360, 224,
	1894, 1887, 1874, 1952, 469, 2028, 257, 1957, 471, 180,
	405, 404, 1844, 292, 1958, 181, 170, 384, 182, 302,
	204, 1983, 484, 220, 308, 449, 493, 277, 351, 1926,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1954, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 2010, 321, 266, 270, 286, 297, 1925, 388,
	426, 472, 1916, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1950,
	216, 237, 427, 210, 1998, 1973, 1907, 1862, 1868, 1768,
	0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833,
	1805, 1920, 1804, 281, 1937, 462, 463, 246, 1780, 2018,
	211, 1781, 2017, 348, 355, 347, 2021, 2019, 458, 1999,
	1908, 1893, 1891, 1773, 1997, 1906, 1892, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 1895, 424,
	319, 0, 206, 0, 423, 2008, 2034, 438, 226, 1799,
	1965, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 1941, 2031, 359, 392, 233, 468,
	420, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899, 1900,
	2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992, 0,
	1886, 2001, 1774, 0, 1969, 188, 189, 174, 179, 1933,
	2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876, 1877,
	0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020, 2023,
	1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936,
	1945, 1819, 1878, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 1904, 199, 212, 311, 2030, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802, 1800,
	2033, 345, 1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834,
	1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910,
	1940, 1943, 1960, 1968, 1975, 1980, 1982, 470, 252, 1884,
	1909, 1947, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 1857, 196, 0, 0, 202,
	0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935, 899,
	1041, 0, 0, 447, 1108, 1045, 886, 909, 1055, 915,
	917, 982, 861, 957, 356, 906, 862, 0, 0, 853,
	1103, 854, 887, 259, 1101, 1015, 960, 1043, 943, 975,
	985, 258, 244, 950, 949, 1032, 898, 897, 980, 1028,
	1042, 0, 0, 172, 476, 190, 1141, 313, 0, 0,
	474, 422, 338, 0, 0, 941, 0, 1115, 1128, 926,
	984, 873, 971, 1047, 907, 976, 1048, 0, 0, 0,
	0, 0, 0, 555, 0, 1451, 0, 0, 1452, 0,
	0, 171, 0, 1123, 1137, 1104, 0, 936, 981, 1060,
	852, 1120, 0, 857, 1092, 0, 1033, 894, 895, 263,
	0, 0, 0, 0, 0, 0, 0, 939, 956, 1000,
	923, 0, 467, 987, 996, 1010, 916, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 867, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 872, 850, 892, 1002, 851, 849, 339, 864, 1130,
	1031, 924, 301, 191, 1037, 922, 1107, 990, 868, 1019,
	1053, 910, 310, 866, 195, 863, 869, 908, 352, 999,
	1005, 177, 198, 312, 1016, 888, 901, 245, 0, 391,
	977, 466, 1087, 278, 963, 390, 314, 459, 991, 1039,
	465, 911, 441, 475, 480, 271, 944, 234, 419, 261,
	254, 893, 1009, 856, 284, 374, 249, 306, 927, 983,
	889, 241, 994, 970, 1021, 418, 456, 200, 333, 457,
	479, 166, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1017, 1004, 1023, 884,
	870, 876, 871, 900, 1040, 293, 285, 1024, 1022, 902,
	360, 224, 954, 947, 940, 1126, 469, 1056, 257, 1006,
	471, 180, 405, 404, 914, 292, 1007, 181, 170, 384,
	182, 302, 204, 1027, 484, 220, 308, 449, 1086, 277,
	351, 979, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1003, 381, 407, 454, 222, 425, 173, 176,
	185, 397, 186, 187, 1046, 321, 266, 270, 286, 297,
	978, 388, 426, 472, 972, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1001, 216, 237, 427, 210, 1035, 1018, 965, 929,
	935, 858, 0, 209, 930, 931, 932, 933, 934, 997,
	891, 903, 883, 973, 882, 281, 989, 462, 463, 246,
	1093, 1050, 211, 865, 1049, 348, 355, 347, 1052, 1051,
	458, 1036, 966, 953, 951, 859, 1034, 964, 952, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	955, 424, 319, 0, 206, 0, 423, 1044, 1062, 438,
	226, 877, 1011, 453, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 993, 1059, 359, 392,
	233, 468, 420, 262, 1098, 0, 1100, 1096, 1099, 1097,
	1116, 1117, 1138, 1139, 1140, 1127, 1094, 192, 193, 1135,
	1136, 194, 946, 1038, 860, 0, 1014, 188, 189, 174,
	179, 986, 1057, 1106, 242, 164, 1089, 1090, 1091, 165,
	1110, 1111, 167, 168, 1133, 1132, 1131, 1134, 169, 1143,
	1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114, 1121, 1122,
	1129, 1124, 1125, 0, 942, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 1118, 199, 212, 311,
	1058, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1012, 969, 0, 919, 921, 920, 879, 881,
	880, 878, 1061, 345, 1030, 848, 855, 874, 885, 890,
	896, 904, 905, 913, 918, 928, 937, 938, 948, 961,
	962, 968, 992, 995, 1008, 1013, 1020, 1025, 1026, 470,
	252, 945, 967, 998, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 925, 196, 0,
	0, 202, 0, 203, 205, 912, 201, 1029, 1054, 974,
	988, 899, 1041, 0, 0, 447, 1108, 1045, 886, 909,
	1055, 915, 917, 982, 861, 957, 356, 906, 862, 0,
	0, 853, 1103, 854, 887, 259, 1101, 1015, 960, 1043,
	943, 975, 985, 258, 244, 950, 949, 1032, 898, 897,
	980, 1028, 1042, 0, 0, 172, 476, 190, 1141, 313,
	0, 0, 474, 422, 338, 0, 0, 941, 0, 1115,
	1128, 926, 984, 873, 971, 1047, 907, 976, 1048, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1123, 1137, 1104, 0, 936,
	981, 1060, 852, 1120, 0, 857, 1092, 0, 1033, 894,
	895, 263, 0, 0, 0, 0, 0, 0, 0, 939,
	956, 1000, 923, 0, 467, 987, 996, 1010, 916, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 867, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 872, 850, 892, 1002, 851, 849, 339,
	864, 1130, 1031, 924, 301, 191, 1037, 922, 1107, 990,
	868, 1019, 1053, 910, 310, 866, 195, 863, 869, 908,
	352, 999, 1005, 177, 198, 312, 1016, 888, 901, 245,
	0, 391, 977, 466, 1087, 278, 963, 390, 314, 459,
	991, 1039, 465, 911, 441, 475, 480, 271, 944, 234,
	419, 261, 254, 893, 1009, 856, 284, 374, 249, 306,
	927, 983, 889, 241, 994, 970, 1021, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1017, 1004,
	1023, 884, 870, 876, 871, 900, 1040, 293, 285, 1024,
	1022, 902, 360, 224, 954, 947, 940, 1126, 469, 1056,
	257, 1006, 471, 180, 405, 404, 914, 292, 1007, 181,
	170, 384, 182, 302, 204, 1027, 484, 220, 308, 449,
	1086, 277, 351, 979, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1003, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 1046, 321, 266, 270,
	286, 297, 978, 388, 426, 472, 972, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1001, 216, 237, 427, 210, 1035, 1018,
	965, 929, 935, 858, 0, 209, 930, 931, 932, 933,
	934, 997, 891, 903, 883, 973, 882, 281, 989, 462,
	463, 246, 1093, 1050, 211, 865, 1049, 348, 355, 347,
	1052, 1051, 458, 1036, 966, 953, 951, 859, 1034, 964,
	952, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 955, 424, 319, 0, 206, 0, 423, 1044,
	1062, 438, 226, 877, 1011, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 993, 1059,
	359, 392, 233, 468, 420, 262, 1098, 0, 1100, 1096,
	1099, 1097, 1116, 1117, 1138, 1139, 1140, 1127, 1094, 192,
	193, 1135, 1136, 194, 946, 1038, 860, 0, 1014, 188,
	189, 174, 179, 986, 1057, 1106, 242, 164, 1089, 1090,
	1091, 165, 1110, 1111, 167, 168, 1133, 1132, 1131, 1134,
	169, 1143, 1142, 1144, 1095, 1102, 1105, 1112, 1113, 1114,
	1121, 1122, 1129, 1124, 1125, 0, 942, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 1118, 199,
	212, 311, 1058, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1012, 969, 0, 919, 921, 920,
	879, 881, 880, 878, 1061, 345, 1030, 848, 855, 874,
	885, 890, 896, 904, 905, 913, 918, 928, 937, 938,
	948, 961, 962, 968, 992, 995, 1008, 1013, 1020, 1025,
	1026, 470, 252, 945, 967, 998, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 925,
	196, 0, 0, 202, 0, 203, 205, 912, 201, 1029,
	1054, 974, 988, 899, 1041, 0, 0, 447, 1108, 1045,
	886, 909, 1055, 915, 917, 982, 861, 957, 356, 906,
	862, 0, 0, 853, 1103, 854, 887, 259, 1101, 1015,
	960, 1043, 943, 975, 985, 258, 244, 950, 949, 1032,
	898, 897, 980, 1028, 1042, 0, 0, 172, 476, 190,
	1141, 313, 0, 0, 474, 422, 338, 0, 0, 941,
	0, 1115, 1128, 926, 984, 873, 971, 1047, 907, 976,
	1048, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1123, 1137, 1104,
	0, 936, 981, 1060, 852, 1120, 0, 857, 1092, 0,
	1033, 894, 895, 263, 0, 0, 0, 0, 0, 0,
	0, 939, 956, 1000, 923, 0, 467, 987, 996, 1010,
	916, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1119, 0, 0, 0, 867, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 872, 850, 892, 1002, 851,
	849, 339, 864, 1130, 1031, 924, 301, 191, 1037, 922,
	1107, 990, 868, 1019, 1053, 910, 310, 866, 195, 863,
	869, 908, 352, 999, 1005, 177, 198, 312, 1016, 888,
	901, 245, 0, 391, 977, 466, 1087, 278, 963, 390,
	314, 459, 991, 1039, 465, 911, 441, 475, 480, 271,
	944, 234, 419, 261, 254, 893, 1009, 856, 284, 374,
	249, 306, 927, 983, 889, 241, 994, 970, 1021, 418,
	456, 200, 333, 457, 479, 166, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1017, 1004, 1023, 884, 870, 876, 871, 900, 1040, 293,
	285, 1024, 1022, 902, 360, 224, 954, 947, 940, 1126,
	469, 1056, 257, 1006, 471, 180, 405, 404, 914, 292,
	1007, 181, 170, 384, 182, 302, 204, 1027, 484, 220,
	308, 449, 1086, 277, 351, 979, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1003, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 1046, 321,
	266, 270, 286, 297, 978, 388, 426, 472, 972, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1001, 216, 237, 427, 210,
	1035, 1018, 965, 929, 935, 858, 0, 209, 930, 931,
	932, 933, 934, 997, 891, 903, 883, 973, 882, 281,
	989, 462, 463, 246, 1093, 1050, 211, 1081, 1049, 348,
	355, 347, 1052, 1051, 458, 1036, 966, 953, 951, 859,
	1034, 964, 952, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 1077, 955, 424, 319, 0, 206, 0,
	423, 1044, 1062, 438, 226, 877, 1011, 453, 178, 380,
	227, 279, 267, 371, 1082, 1080, 1071, 1072, 307, 315,
	993, 1059, 359, 392, 233, 468, 420, 262, 1098, 0,
	1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139, 1140, 1127,
	1094, 192, 193, 1135, 1136, 194, 946, 1038, 860, 0,
	1014, 188, 189, 174, 179, 986, 1057, 1106, 242, 164,
	1089, 1090, 1091, 165, 1110, 1111, 167, 168, 1133, 1132,
	1131, 1134, 169, 1143, 1142, 1144, 1095, 1102, 1105, 1112,
	1113, 1114, 1121, 1122, 1129, 1124, 1125, 0, 942, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	1118, 199, 212, 311, 1058, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1012, 969, 0, 919,
	921, 920, 879, 881, 880, 878, 1061, 345, 1030, 848,
	855, 874, 885, 890, 896, 904, 905, 913, 918, 928,
	937, 938, 948, 961, 962, 968, 992, 995, 1008, 1013,
	1020, 1025, 1026, 470, 252, 945, 967, 998, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 1078, 1079, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 925, 196, 0, 0, 202, 0, 203, 205, 912,
	201, 1029, 1054, 974, 988, 899, 1041, 0, 0, 447,
	1108, 1045, 886, 909, 1055, 915, 917, 982, 861, 957,
	356, 906, 862, 0, 0, 853, 1103, 854, 887, 259,
	1101, 1015, 960, 1043, 943, 975, 985, 258, 244, 950,
	949, 1032, 898, 897, 980, 1028, 1042, 0, 0, 172,
	476, 190, 1141, 313, 0, 0, 474, 422, 338, 0,
	0, 941, 0, 1115, 1128, 926, 984, 873, 971, 1047,
	907, 976, 1048, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1123,
	1137, 1104, 0, 936, 981, 1060, 852, 1120, 0, 857,
	1092, 0, 1033, 894, 895, 263, 0, 0, 0, 0,
	0, 0, 0, 939, 956, 1000, 923, 0, 467, 987,
	996, 1010, 916, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 867,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 872, 850, 892,
	1002, 851, 849, 339, 864, 1130, 1031, 924, 301, 191,
	1037, 922, 1107, 990, 868, 1019, 1053, 910, 310, 866,
	195, 863, 869, 908, 352, 999, 1005, 177, 198, 312,
	1016, 888, 901, 245, 0, 391, 977, 466, 1087, 278,
	963, 390, 314, 459, 991, 1039, 465, 911, 441, 475,
	480, 271, 944, 234, 419, 261, 254, 893, 1009, 856,
	284, 374, 249, 306, 927, 983, 889, 241, 994, 970,
	1021, 418, 456, 200, 333, 457, 479, 166, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1017, 1004, 1023, 884, 870, 876, 871, 900,
	1040, 293, 285, 1024, 1022, 902, 360, 224, 954, 947,
	940, 1126, 469, 1056, 257, 1006, 471, 180, 405, 404,
	914, 292, 1007, 181, 170, 384, 182, 302, 204, 1027,
	484, 220, 308, 449, 1086, 277, 351, 979, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1003, 381,
	407, 454, 222, 425, 173, 176, 185, 397, 186, 187,
	1046, 321, 266, 270, 286, 297, 978, 388, 426, 472,
	972, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 1616, 229, 406, 409, 483, 1001, 216, 237,
	427, 210, 1035, 1018, 965, 929, 935, 858, 0, 209,
	930, 931, 932, 933, 934, 997, 891, 903, 883, 973,
	882, 281, 989, 462, 463, 246, 1093, 1050, 211, 865,
	1049, 348, 355, 347, 1052, 1051, 458, 1036, 966, 953,
	951, 859, 1034, 964, 952, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 955, 424, 319, 0,
	206, 0, 423, 1044, 1062, 438, 226, 877, 1011, 453,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 993, 1059, 359, 392, 233, 468, 420, 262,
	1098, 0, 1100, 1096, 1099, 1097, 1116, 1117, 1138, 1139,
	1140, 1127, 1094, 192, 193, 1135, 1136, 194, 946, 1038,
	860, 0, 1014, 188, 189, 174, 179, 986, 1057, 1106,
	242, 164, 1089, 1090, 1091, 165, 1110, 1111, 167, 168,
	1133, 1132, 1131, 1134, 169, 1143, 1142, 1144, 1095, 1102,
	1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124, 1125, 0,
	942, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 1118, 199, 212, 311, 1058, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1012, 969,
	0, 919, 921, 920, 879, 881, 880, 878, 1061, 345,
	1030, 848, 855, 874, 885, 890, 896, 904, 905, 913,
	918, 928, 937, 938, 948, 961, 962, 968, 992, 995,
	1008, 1013, 1020, 1025, 1026, 470, 252, 945, 967, 998,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 925, 196, 0, 0, 202, 0, 203,
	205, 912, 201, 1029, 1054, 974, 988, 899, 1041, 0,
	0, 447, 1108, 1045, 886, 909, 1055, 915, 917, 982,
	861, 957, 356, 906, 862, 0, 0, 853, 1103, 854,
	887, 259, 1101, 1015, 960, 1043, 943, 975, 985, 258,
	244, 950, 949, 1032, 898, 897, 980, 1028, 1042, 0,
	0, 172, 476, 190, 1141, 313, 0, 0, 474, 422,
	338, 0, 0, 941, 0, 1115, 1128, 926, 984, 873,
	971, 1047, 907, 976, 1048, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1123, 1137, 1104, 0, 936, 981, 1060, 852, 1120,
	0, 857, 1092, 0, 1033, 894, 895, 263, 0, 0,
	0, 0, 0, 0, 0, 939, 956, 1000, 923, 0,
	467, 987, 996, 1010, 916, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1119, 0, 0,
	0, 867, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 872,
	850, 892, 1002, 851, 849, 339, 864, 1130, 1031, 924,
	301, 191, 1037, 922, 1107, 990, 868, 1019, 1053, 910,
	310, 866, 195, 863, 869, 908, 352, 999, 1005, 177,
	198, 312, 1016, 888, 901, 245, 0, 391, 977, 466,
	1087, 278, 963, 390, 314, 459, 991, 1039, 465, 911,
	441, 475, 480, 271, 944, 234, 419, 261, 254, 893,
	1009, 856, 284, 374, 249, 306, 927, 983, 889, 241,
	994, 970, 1021, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1017, 1004, 1023, 884, 870, 876,
	871, 900, 1040, 293, 285, 1024, 1022, 902, 360, 224,
	954, 947, 940, 1126, 469, 1056, 257, 1006, 471, 180,
	405, 404, 914, 292, 1007, 181, 170, 384, 182, 302,
	204, 1027, 484, 220, 308, 449, 1086, 277, 351, 979,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1003, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 1046, 321, 266, 270, 286, 297, 978, 388,
	426, 472, 972, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 1068, 229, 406, 409, 483, 1001,
	216, 237, 427, 210, 1035, 1018, 965, 929, 935, 858,
	0, 209, 930, 931, 932, 933, 934, 997, 891, 903,
	883, 973, 882, 281, 989, 462, 463, 246, 1093, 1050,
	211, 1081, 1049, 348, 355, 347, 1052, 1051, 458, 1036,
	966, 953, 951, 859, 1034, 964, 952, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 1077, 955, 424,
	319, 0, 206, 0, 423, 1044, 1062, 438, 226, 877,
	1011, 453, 178, 380, 227, 279, 267, 371, 1082, 1080,
	1071, 1072, 307, 315, 993, 1059, 359, 392, 233, 468,
	420, 262, 1098, 0, 1100, 1096, 1099, 1097, 1116, 1117,
	1138, 1139, 1140, 1127, 1094, 192, 193, 1135, 1136, 194,
	946, 1038, 860, 0, 1014, 188, 189, 174, 179, 986,
	1057, 1106, 242, 164, 1089, 1090, 1091, 165, 1110, 1111,
	167, 168, 1133, 1132, 1131, 1134, 169, 1143, 1142, 1144,
	1095, 1102, 1105, 1112, 1113, 1114, 1121, 1122, 1129, 1124,
	1125, 0, 942, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 1118, 199, 212, 311, 1058, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1012, 969, 0, 919, 921, 920, 879, 881, 880, 878,
	1061, 345, 1030, 848, 855, 874, 885, 890, 896, 904,
	905, 913, 918, 928, 937, 938, 948, 961, 962, 968,
	992, 995, 1008, 1013, 1020, 1025, 1026, 470, 252, 945,
	967, 998, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 1078, 1079,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 925, 196, 0, 0, 202,
	0, 203, 205, 912, 201, 1029, 1054, 974, 988, 1826,
	2005, 0, 1967, 447, 1860, 2009, 1809, 1839, 2027, 1845,
	1848, 1929, 1775, 1898, 356, 1836, 1776, 1759, 1814, 1763,
	1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880, 1922,
	1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927, 1984,
	2006, 1879, 0, 0, 476, 0, 2016, 313, 1981, 0,
	474, 422, 338, 0, 0, 1875, 1990, 1896, 1959, 1858,
	1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0, 0,
	0, 0, 3145, 3150, 0, 3153, 3155, 3154, 0, 0,
	0, 3147, 0, 1919, 2003, 1830, 0, 1870, 1928, 2032,
	1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822, 263,
	0, 0, 0, 0, 0, 0, 0, 1873, 1897, 1949,
	1855, 0, 467, 1934, 1944, 1962, 1847, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 1912,
	0, 0, 0, 1783, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 1790, 1760, 1818, 1951, 1761, 1758, 339, 1779, 1964,
	1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784, 1974,
	2024, 1840, 310, 1782, 195, 1777, 1785, 1838, 352, 1948,
	1956, 0, 198, 312, 1971, 1812, 1829, 245, 0, 391,
	1924, 466, 0, 278, 1905, 390, 314, 459, 1939, 2002,
	465, 1841, 441, 475, 480, 271, 1881, 234, 419, 261,
	254, 1820, 1961, 1766, 284, 374, 249, 306, 1859, 1930,
	1813, 241, 1942, 1913, 1976, 418, 456, 200, 333, 457,
	479, 3148, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1972, 1955, 1978, 1806,
	1786, 1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831,
	360, 224, 1894, 1887, 1874, 1952, 469, 2028, 257, 1957,
	471, 0, 405, 404, 1844, 292, 1958, 0, 0, 384,
	3149, 302, 204, 1983, 484, 220, 308, 449, 0, 277,
	351, 1926, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 1954, 381, 407, 454, 222, 425, 0, 0,
	0, 397, 0, 0, 2010, 321, 266, 270, 286, 297,
	1925, 388, 426, 472, 1916, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1950, 216, 237, 427, 210, 1998, 1973, 1907, 1862,
	1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946,
	1817, 1833, 1805, 1920, 1804, 281, 1937, 462, 463, 246,
	1780, 2018, 211, 1781, 2017, 348, 355, 347, 2021, 2019,
	458, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	1895, 424, 319, 0, 206, 0, 423, 2008, 2034, 438,
	226, 1799, 1965, 453, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 1941, 2031, 359, 392,
	233, 468, 420, 262, 1795, 0, 1798, 1793, 1796, 1794,
	1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991,
	1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0, 0,
	0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0,
	1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022,
	2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918,
	1963, 1936, 1945, 1819, 1878, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 1904, 199, 212, 311,
	2030, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803,
	1802, 1800, 2033, 345, 1993, 1757, 1765, 1792, 1808, 1815,
	1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902,
	1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 470,
	252, 1884, 1909, 1947, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 1857, 196, 0,
	0, 202, 0, 203, 205, 1842, 201, 1989, 2025, 1921,
	1935, 1826, 2005, 0, 1967, 447, 1860, 2009, 1809, 1839,
	2027, 1845, 1848, 1929, 1775, 1898, 356, 1836, 1776, 1759,
	1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007,
	1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824,
	1927, 1984, 2006, 1879, 0, 0, 476, 0, 2016, 313,
	1981, 0, 474, 422, 338, 0, 0, 1875, 1990, 1896,
	1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0,
	0, 0, 0, 0, 3939, 3150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1919, 2003, 1830, 0, 1870,
	1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821,
	1822, 263, 0, 0, 0, 0, 0, 0, 0, 1873,
	1897, 1949, 1855, 0, 467, 1934, 1944, 1962, 1847, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1912, 0, 0, 0, 1783, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 339,
	1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938,
	1784, 1974, 2024, 1840, 310, 1782, 195, 1777, 1785, 1838,
	352, 1948, 1956, 0, 198, 312, 1971, 1812, 1829, 245,
	0, 391, 1924, 466, 0, 278, 1905, 390, 314, 459,
	1939, 2002, 465, 1841, 441, 475, 480, 271, 1881, 234,
	419, 261, 254, 1820, 1961, 1766, 284, 374, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 418, 456, 200,
	333, 457, 479, 0, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 360, 224, 1894, 1887, 1874, 1952, 469, 2028,
	257, 1957, 471, 0, 405, 404, 1844, 292, 1958, 0,
	0, 384, 0, 302, 204, 1983, 484, 220, 308, 449,
	0, 277, 351, 1926, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 1954, 381, 407, 454, 222, 425,
	0, 0, 0, 397, 0, 0, 2010, 321, 266, 270,
	286, 297, 1925, 388, 426, 472, 1916, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1950, 216, 237, 427, 210, 1998, 1973,
	1907, 1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866,
	1867, 1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 462,
	463, 246, 1780, 2018, 211, 1781, 2017, 348, 355, 347,
	2021, 2019, 458, 1999, 1908, 1893, 1891, 1773, 1997, 1906,
	1892, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1895, 424, 319, 0, 206, 0, 423, 2008,
	2034, 438, 226, 1799, 1965, 453, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1941, 2031,
	359, 392, 233, 468, 420, 262, 1795, 0, 1798, 1793,
	1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0,
	0, 1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0,
	0, 0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771,
	1772, 0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988,
	0, 2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885,
	1917, 1918, 1963, 1936, 1945, 1819, 1878, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 1904, 199,
	212, 311, 2030, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1966, 1911, 0, 1850, 1852, 1851,
	1801, 1803, 1802, 1800, 2033, 345, 1993, 1757, 1765, 1792,
	1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872,
	1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980,
	1982, 470, 252, 1884, 1909, 1947, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 1857,
	196, 0, 0, 202, 0, 203, 205, 1842, 201, 1989,
	2025, 1921, 1935, 1826, 2005, 0, 1967, 447, 1860, 2009,
	1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898, 356, 1836,
	1776, 1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970,
	1901, 2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995,
	1825, 1824, 1927, 1984, 2006, 1879, 0, 0, 476, 0,
	2016, 313, 1981, 0, 474, 422, 338, 0, 0, 1875,
	1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923,
	2012, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1919, 2003, 1830,
	0, 1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026,
	1996, 1821, 1822, 263, 0, 0, 0, 0, 0, 0,
	0, 1873, 1897, 1949, 1855, 0, 467, 1934, 1944, 1962,
	1847, 375, 283, 0, 0, 0, 0, 0, 0, 3885,
	0, 1816, 0, 1912, 0, 0, 0, 1783, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761,
	1758, 339, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854,
	1853, 1938, 1784, 1974, 2024, 1840, 310, 1782, 195, 1777,
	1785, 1838, 352, 1948, 1956, 0, 198, 312, 1971, 1812,
	1829, 245, 0, 391, 1924, 466, 0, 278, 1905, 390,
	314, 459, 1939, 2002, 465, 1841, 441, 475, 480, 271,
	1881, 234, 419, 261, 254, 1820, 1961, 1766, 284, 374,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 418,
	456, 200, 333, 457, 479, 0, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828, 2004, 293,
	285, 1979, 1977, 1831, 360, 224, 1894, 1887, 1874, 1952,
	469, 2028, 257, 1957, 471, 0, 405, 404, 1844, 292,
	1958, 0, 0, 384, 0, 302, 204, 1983, 484, 220,
	308, 449, 0, 277, 351, 1926, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1954, 381, 407, 454,
	222, 425, 0, 0, 0, 397, 0, 0, 2010, 321,
	266, 270, 286, 297, 1925, 388, 426, 472, 1916, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1950, 216, 237, 427, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 462, 463, 246, 1780, 2018, 211, 1781, 2017, 348,
	355, 347, 2021, 2019, 458, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1895, 424, 319, 0, 206, 0,
	423, 2008, 2034, 438, 226, 1799, 1965, 453, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1941, 2031, 359, 392, 233, 468, 420, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	1904, 199, 212, 311, 2030, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 345, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 470, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 0, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 447,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	356, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	476, 0, 2016, 313, 1981, 0, 474, 422, 338, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 467, 1934,
	1944, 1962, 1847, 375, 283, 0, 0, 0, 0, 0,
	0, 3198, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 339, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 310, 1782,
	195, 1777, 1785, 1838, 352, 1948, 1956, 0, 198, 312,
	1971, 1812, 1829, 245, 0, 391, 1924, 466, 0, 278,
	1905, 390, 314, 459, 1939, 2002, 465, 1841, 441, 475,
	480, 271, 1881, 234, 419, 261, 254, 1820, 1961, 1766,
	284, 374, 249, 306, 1859, 1930, 1813, 241, 1942, 1913,
	1976, 418, 456, 200, 333, 457, 479, 0, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828,
	2004, 293, 285, 1979, 1977, 1831, 360, 224, 1894, 1887,
	1874, 1952, 469, 2028, 257, 1957, 471, 0, 405, 404,
	1844, 292, 1958, 0, 0, 384, 0, 302, 204, 1983,
	484, 220, 308, 449, 0, 277, 351, 1926, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 1954, 381,
	407, 454, 222, 425, 0, 0, 0, 397, 0, 0,
	2010, 321, 266, 270, 286, 297, 1925, 388, 426, 472,
	1916, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1950, 216, 237,
	427, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 462, 463, 246, 1780, 2018, 211, 1781,
	2017, 348, 355, 347, 2021, 2019, 458, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 1895, 424, 319, 0,
	206, 0, 423, 2008, 2034, 438, 226, 1799, 1965, 453,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 1941, 2031, 359, 392, 233, 468, 420, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 1904, 199, 212, 311, 2030, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 345,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 470, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 1826, 2005, 0,
	1967, 447, 1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929,
	1775, 1898, 356, 1836, 1776, 1759, 1814, 1763, 1827, 1764,
	1811, 259, 1807, 1970, 1901, 2007, 1880, 1922, 1932, 258,
	244, 1890, 1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879,
	0, 0, 476, 0, 2016, 313, 1981, 0, 474, 422,
	338, 0, 0, 1875, 1990, 1896, 1959, 1858, 1931, 1791,
	1914, 2011, 1837, 1923, 2012, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1919, 2003, 1830, 0, 1870, 1928, 2032, 1762, 1915,
	0, 1767, 1778, 2026, 1996, 1821, 1822, 263, 0, 0,
	0, 0, 0, 0, 0, 1873, 1897, 1949, 1855, 0,
	467, 1934, 1944, 1962, 1847, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 1912, 0, 0,
	0, 1783, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 1790,
	1760, 1818, 1951, 1761, 1758, 339, 1779, 1964, 1994, 1856,
	301, 0, 2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840,
	310, 1782, 195, 1777, 1785, 1838, 352, 1948, 1956, 0,
	198, 312, 1971, 1812, 1829, 245, 0, 391, 1924, 466,
	0, 278, 1905, 390, 314, 459, 1939, 2002, 465, 1841,
	441, 475, 480, 271, 1881, 234, 419, 261, 254, 1820,
	1961, 1766, 284, 374, 249, 306, 1859, 1930, 1813, 241,
	1942, 1913, 1976, 418, 456, 200, 333, 457, 479, 0,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797,
	1787, 1828, 2004, 293, 285, 1979, 1977, 1831, 360, 224,
	1894, 1887, 1874, 1952, 469, 2028, 257, 1957, 471, 0,
	405, 404, 1844, 292, 1958, 0, 0, 384, 0, 302,
	204, 1983, 484, 220, 308, 449, 0, 277, 351, 1926,
	361, 197, 379, 328, 330, 327, 331, 282, 0, 0,
	1954, 381, 407, 454, 222, 425, 0, 0, 0, 397,
	0, 0, 2010, 321, 266, 270, 286, 297, 1925, 388,
	426, 472, 1916, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 1950,
	216, 237, 427, 210, 1998, 1973, 1907, 1862, 1868, 1768,
	0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833,
	1805, 1920, 1804, 281, 1937, 462, 463, 246, 1780, 2018,
	211, 1781, 2017, 348, 355, 347, 2021, 2019, 458, 1999,
	1908, 1893, 1891, 1773, 1997, 1906, 1892, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 1895, 424,
	319, 0, 206, 0, 423, 2008, 2034, 438, 226, 1799,
	1965, 453, 2312, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 1941, 2031, 359, 392, 233, 468,
	420, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899, 1900,
	2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992, 0,
	1886, 2001, 1774, 0, 1969, 0, 0, 0, 0, 1933,
	2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876, 1877,
	0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020, 2023,
	1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936,
	1945, 1819, 1878, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 1904, 199, 212, 311, 2030, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802, 1800,
	2033, 345, 1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834,
	1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910,
	1940, 1943, 1960, 1968, 1975, 1980, 1982, 470, 252, 1884,
	1909, 1947, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 0, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 1857, 196, 0, 0, 202,
	0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935, 1826,
	2005, 0, 1967, 447, 1860, 2009, 1809, 1839, 2027, 1845,
	1848, 1929, 1775, 1898, 356, 1836, 1776, 1759, 1814, 1763,
	1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880, 1922,
	1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927, 1984,
	2006, 1879, 0, 0, 476, 0, 2016, 313, 1981, 0,
	474, 422, 338, 0, 0, 1875, 1990, 1896, 1959, 1858,
	1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1919, 2003, 1830, 0, 1870, 1928, 2032,
	1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822, 263,
	0, 0, 0, 0, 0, 0, 0, 1873, 1897, 1949,
	1855, 0, 467, 1934, 1944, 1962, 1847, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 1912,
	0, 0, 0, 1783, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 1790, 1760, 1818, 1951, 1761, 1758, 339, 1779, 1964,
	1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784, 1974,
	2024, 1840, 310, 1782, 195, 1777, 1785, 1838, 352, 1948,
	1956, 0, 198, 312, 1971, 1812, 1829, 245, 0, 391,
	1924, 466, 0, 278, 1905, 390, 314, 459, 1939, 2002,
	465, 1841, 441, 475, 480, 271, 1881, 234, 419, 261,
	254, 1820, 1961, 1766, 284, 374, 249, 306, 1859, 1930,
	1813, 241, 1942, 1913, 1976, 418, 456, 200, 333, 457,
	479, 0, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 1972, 1955, 1978, 1806,
	1786, 1797, 1787, 1828, 2004, 293, 285, 1979, 1977, 1831,
	360, 224, 1894, 1887, 1874, 1952, 469, 2028, 257, 1957,
	471, 0, 405, 404, 1844, 292, 1958, 0, 0, 384,
	0, 302, 204, 1983, 484, 220, 308, 449, 0, 277,
	351, 1926, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 1954, 381, 407, 454, 222, 425, 0, 0,
	0, 397, 0, 0, 2010, 321, 266, 270, 286, 297,
	1925, 388, 426, 472, 1916, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 1950, 216, 237, 427, 210, 1998, 1973, 1907, 1862,
	1868, 1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946,
	1817, 1833, 1805, 1920, 1804, 281, 1937, 462, 463, 246,
	1780, 2018, 211, 1781, 2017, 348, 355, 347, 2021, 2019,
	458, 1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	1895, 424, 319, 0, 206, 0, 423, 2008, 2034, 438,
	226, 1799, 1965, 453, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 1941, 2031, 359, 392,
	233, 468, 420, 262, 1795, 0, 1798, 1793, 1796, 1794,
	1899, 1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991,
	1992, 0, 1886, 2001, 1774, 0, 1969, 0, 0, 0,
	0, 1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0,
	1876, 1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022,
	2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918,
	1963, 1936, 1945, 1819, 1878, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 1904, 199, 212, 311,
	2030, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803,
	1802, 1800, 2033, 345, 1993, 1757, 1765, 1792, 1808, 1815,
	1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902,
	1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 470,
	252, 1884, 1909, 1947, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 4055, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 1857, 196, 0,
	0, 202, 0, 203, 205, 1842, 201, 1989, 2025, 1921,
	1935, 1826, 2005, 0, 1967, 447, 1860, 2009, 1809, 1839,
	2027, 1845, 1848, 1929, 1775, 1898, 356, 1836, 1776, 1759,
	1814, 1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007,
	1880, 1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824,
	1927, 1984, 2006, 1879, 0, 0, 476, 0, 2016, 313,
	1981, 0, 474, 422, 338, 0, 0, 1875, 1990, 1896,
	1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1919, 2003, 1830, 0, 1870,
	1928, 2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821,
	1822, 263, 0, 0, 0, 0, 0, 0, 0, 1873,
	1897, 1949, 1855, 0, 467, 1934, 1944, 1962, 1847, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	0, 1912, 0, 0, 0, 1783, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 339,
	1779, 1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938,
	1784, 1974, 2024, 1840, 310, 1782, 195, 1777, 1785, 1838,
	352, 1948, 1956, 0, 198, 312, 1971, 1812, 1829, 245,
	0, 391, 1924, 466, 0, 278, 1905, 390, 314, 459,
	1939, 2002, 465, 1841, 441, 475, 480, 271, 1881, 234,
	419, 261, 254, 1820, 1961, 1766, 284, 374, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 418, 456, 200,
	333, 457, 479, 0, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 360, 224, 1894, 1887, 1874, 1952, 469, 2028,
	257, 1957, 471, 0, 405, 404, 1844, 292, 1958, 0,
	0, 384, 0, 302, 204, 1983, 484, 220, 308, 449,
	0, 277, 351, 1926, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 1954, 381, 407, 454, 222, 425,
	0, 0, 0, 397, 0, 0, 2010, 321, 266, 270,
	286, 297, 1925, 388, 426, 472, 1916, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 1950, 216, 237, 427, 210, 1998, 1973,
	1907, 1862, 1868, 1768, 0, 209, 1863, 1864, 1865, 1866,
	1867, 1946, 1817, 1833, 1805, 1920, 1804, 281, 1937, 462,
	463, 246, 1780, 2018, 211, 1781, 2017, 348, 355, 347,
	2021, 2019, 458, 1999, 1908, 1893, 1891, 1773, 1997, 1906,
	1892, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1895, 424, 319, 0, 206, 0, 423, 2008,
	2034, 438, 226, 1799, 1965, 453, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1941, 2031,
	359, 392, 233, 468, 420, 262, 1795, 0, 1798, 1793,
	1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953, 1788, 0,
	0, 1991, 1992, 0, 1886, 2001, 1774, 0, 1969, 0,
	0, 0, 0, 1933, 2029, 1846, 242, 0, 1770, 1771,
	1772, 0, 1876, 1877, 0, 0, 1987, 1986, 1985, 1988,
	0, 2022, 2020, 2023, 1789, 1810, 1832, 1882, 1883, 1885,
	1917, 1918, 1963, 1936, 1945, 1819, 1878, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 1904, 199,
	212, 311, 2030, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 1966, 1911, 0, 1850, 1852, 1851,
	1801, 1803, 1802, 1800, 2033, 345, 1993, 1757, 1765, 1792,
	1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861, 1871, 1872,
	1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968, 1975, 1980,
	1982, 470, 252, 1884, 1909, 1947, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 1857,
	196, 0, 0, 202, 0, 203, 205, 1842, 201, 1989,
	2025, 1921, 1935, 1826, 2005, 0, 1967, 447, 1860, 2009,
	1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898, 356, 1836,
	1776, 1759, 1814, 1763, 1827, 1764, 1811, 259, 1807, 1970,
	1901, 2007, 1880, 1922, 1932, 258, 244, 1890, 1889, 1995,
	1825, 1824, 1927, 1984, 2006, 1879, 0, 0, 476, 0,
	2016, 313, 1981, 0, 474, 422, 338, 0, 0, 1875,
	1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011, 1837, 1923,
	2012, 0, 0, 0, 0, 0, 0, 4343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1919, 2003, 1830,
	0, 1870, 1928, 2032, 1762, 1915, 0, 1767, 1778, 2026,
	1996, 1821, 1822, 263, 0, 0, 0, 0, 0, 0,
	0, 1873, 1897, 1949, 1855, 0, 467, 1934, 1944, 1962,
	1847, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 1912, 0, 0, 0, 1783, 1769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1790, 1760, 1818, 1951, 1761,
	1758, 339, 1779, 1964, 1994, 1856, 301, 0, 2000, 1854,
	1853, 1938, 1784, 1974, 2024, 1840, 310, 1782, 195, 1777,
	1785, 1838, 352, 1948, 1956, 0, 198, 312, 1971, 1812,
	1829, 245, 0, 391, 1924, 466, 0, 278, 1905, 390,
	314, 459, 1939, 2002, 465, 1841, 441, 475, 480, 271,
	1881, 234, 419, 261, 254, 1820, 1961, 1766, 284, 374,
	249, 306, 1859, 1930, 1813, 241, 1942, 1913, 1976, 418,
	456, 200, 333, 457, 479, 0, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	1972, 1955, 1978, 1806, 1786, 1797, 4346, 4347, 4348, 293,
	285, 1979, 1977, 1831, 360, 224, 1894, 1887, 1874, 1952,
	469, 2028, 257, 1957, 471, 0, 405, 404, 1844, 292,
	1958, 0, 0, 384, 0, 302, 204, 1983, 484, 220,
	308, 449, 0, 277, 351, 1926, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1954, 381, 407, 454,
	222, 425, 0, 0, 0, 397, 0, 0, 2010, 321,
	266, 270, 286, 297, 1925, 388, 426, 472, 1916, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 1950, 216, 237, 427, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 462, 463, 246, 1780, 2018, 211, 1781, 2017, 348,
	355, 347, 2021, 2019, 458, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1895, 424, 319, 0, 206, 0,
	423, 2008, 2034, 438, 226, 1799, 1965, 453, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1941, 2031, 359, 392, 233, 468, 420, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	1904, 199, 212, 311, 2030, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 345, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 470, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 0, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 447,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	356, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	476, 0, 2016, 313, 1981, 0, 474, 422, 338, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 3150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 467, 1934,
	1944, 1962, 1847, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 339, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 310, 1782,
	195, 1777, 1785, 1838, 352, 1948, 1956, 0, 198, 312,
	1971, 1812, 1829, 245, 0, 391, 1924, 466, 0, 278,
	1905, 390, 314, 459, 1939, 2002, 465, 1841, 441, 475,
	480, 271, 1881, 234, 419, 261, 254, 1820, 1961, 1766,
	284, 374, 249, 306, 1859, 1930, 1813, 241, 1942, 1913,
	1976, 418, 456, 200, 333, 457, 479, 0, 272, 410,
	273, 440, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 482, 473, 225, 274, 385, 389, 366,
	221, 448, 334, 344, 238, 240, 239, 215, 411, 455,
	228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787, 1828,
	2004, 293, 285, 1979, 1977, 1831, 360, 224, 1894, 1887,
	1874, 1952, 469, 2028, 257, 1957, 471, 0, 405, 404,
	1844, 292, 1958, 0, 0, 384, 0, 302, 204, 1983,
	484, 220, 308, 449, 0, 277, 351, 1926, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 1954, 381,
	407, 454, 222, 425, 0, 0, 0, 397, 0, 0,
	2010, 321, 266, 270, 286, 297, 1925, 388, 426, 472,
	1916, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 445, 399, 280, 320, 322, 430,
	437, 431, 432, 433, 434, 429, 436, 435, 395, 396,
	208, 439, 464, 229, 406, 409, 483, 1950, 216, 237,
	427, 210, 1998, 1973, 1907, 1862, 1868, 1768, 0, 209,
	1863, 1864, 1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920,
	1804, 281, 1937, 462, 463, 246, 1780, 2018, 211, 1781,
	2017, 348, 355, 347, 2021, 2019, 458, 1999, 1908, 1893,
	1891, 1773, 1997, 1906, 1892, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 1895, 424, 319, 0,
	206, 0, 423, 2008, 2034, 438, 226, 1799, 1965, 453,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 1941, 2031, 359, 392, 233, 468, 420, 262,
	1795, 0, 1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014,
	2015, 1953, 1788, 0, 0, 1991, 1992, 0, 1886, 2001,
	1774, 0, 1969, 0, 0, 0, 0, 1933, 2029, 1846,
	242, 0, 1770, 1771, 1772, 0, 1876, 1877, 0, 0,
	1987, 1986, 1985, 1988, 0, 2022, 2020, 2023, 1789, 1810,
	1832, 1882, 1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819,
	1878, 368, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 317, 336, 329,
	365, 332, 0, 0, 0, 367, 386, 408, 414, 415,
	442, 443, 444, 446, 450, 451, 452, 0, 0, 0,
	376, 248, 1904, 199, 212, 311, 2030, 383, 276, 335,
	412, 337, 298, 247, 481, 340, 382, 485, 1966, 1911,
	0, 1850, 1852, 1851, 1801, 1803, 1802, 1800, 2033, 345,
	1993, 1757, 1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843,
	1849, 1861, 1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943,
	1960, 1968, 1975, 1980, 1982, 470, 252, 1884, 1909, 1947,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 460,
	461, 477, 478, 1857, 196, 0, 0, 202, 0, 203,
	205, 1842, 201, 1989, 2025, 1921, 1935, 586, 447, 580,
	591, 573, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 0, 637, 0, 0, 0, 0, 0, 259, 0,
	0, 581, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 634, 635, 0,
	729, 0, 730, 732, 733, 734, 735, 0, 0, 0,
	731, 2304, 3366, 3367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 3361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 0, 572, 571, 574, 0,
	0, 0, 339, 0, 0, 0, 579, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 583, 0, 0, 198, 312, 587,
	0, 0, 245, 0, 391, 2301, 466, 0, 278, 0,
	390, 314, 459, 0, 590, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 575, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 578,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 640, 407,
	454, 222, 425, 576, 577, 584, 585, 588, 589, 592,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 2302, 2303, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 3378, 1063, 0, 3368, 3369, 3371, 3379, 3380,
	3370, 3372, 3373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3374, 3375, 3376, 3377, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 582, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 0, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 586, 447, 580, 591, 573, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 0, 565, 0, 0,
	0, 0, 0, 259, 0, 0, 581, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 313, 0, 0,
	474, 422, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 571, 574, 0, 0, 0, 339, 0, 0,
	0, 579, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 195, 0, 0, 0, 352, 583,
	0, 0, 198, 312, 587, 0, 0, 245, 0, 391,
	0, 466, 0, 278, 0, 390, 314, 459, 0, 590,
	465, 0, 441, 475, 480, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 456, 200, 333, 457,
	479, 575, 272, 410, 273, 440, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 482, 473, 225,
	274, 385, 389, 366, 221, 448, 334, 344, 238, 240,
	239, 215, 411, 455, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 469, 0, 257, 0,
	471, 0, 405, 404, 578, 292, 0, 0, 0, 384,
	0, 302, 204, 0, 484, 220, 308, 449, 0, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 0, 568, 407, 454, 222, 425, 576, 577,
	584, 585, 588, 589, 592, 321, 266, 270, 286, 297,
	0, 388, 426, 472, 0, 217, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 393, 394, 428, 445, 399,
	280, 320, 322, 430, 437, 431, 432, 433, 434, 429,
	436, 435, 395, 396, 208, 439, 464, 229, 406, 409,
	483, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 462, 463, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 438,
	226, 0, 0, 453, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 468, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 317, 336, 329, 365, 332, 0, 0, 0, 367,
	386, 408, 414, 415, 442, 443, 444, 446, 450, 451,
	452, 0, 0, 0, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 481, 340,
	382, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 582, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 460, 461, 477, 478, 447, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 2453, 2457, 0, 172, 476, 190,
	0, 313, 0, 495, 474, 422, 338, 498, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 2456, 301, 191, 0, 0,
	0, 2449, 0, 2450, 2452, 2451, 310, 1162, 195, 0,
	2447, 2455, 352, 0, 0, 177, 198, 312, 0, 0,
	0, 245, 1156, 391, 0, 466, 494, 278, 0, 390,
	314, 459, 0, 0, 465, 0, 441, 475, 480, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	456, 200, 333, 457, 479, 166, 272, 410, 273, 440,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 482, 473, 225, 274, 385, 389, 366, 221, 448,
	334, 344, 238, 240, 239, 215, 411, 455, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	469, 0, 257, 0, 471, 180, 405, 404, 0, 292,
	0, 181, 170, 384, 182, 302, 204, 0, 484, 220,
	308, 449, 493, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 0, 381, 407, 454,
	222, 425, 173, 176, 185, 397, 186, 187, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 472, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 445, 399, 280, 320, 322, 430, 437, 431,
	432, 433, 434, 429, 436, 435, 395, 396, 208, 439,
	464, 229, 406, 409, 483, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 462, 463, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 438, 226, 0, 0, 453, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 468, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 317, 336, 329, 365, 332,
	0, 0, 0, 367, 386, 408, 414, 415, 442, 443,
	444, 446, 450, 451, 452, 0, 0, 0, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 481, 340, 382, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 460, 461, 477,
	478, 447, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 1475, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 476, 190, 0, 313, 0, 495, 474, 422,
	338, 498, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 1476, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 496, 0, 1471, 1472, 1470, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	467, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 177,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 466,
	494, 278, 0, 390, 314, 459, 0, 0, 465, 0,
	441, 475, 480, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 456, 200, 333, 457, 479, 166,
	272, 410, 273, 440, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 482, 473, 225, 274, 385,
	389, 366, 221, 448, 334, 344, 238, 240, 239, 215,
	411, 455, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 469, 0, 257, 0, 471, 180,
	405, 404, 0, 292, 0, 181, 170, 384, 182, 302,
	204, 0, 484, 220, 308, 449, 493, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	0, 381, 407, 454, 222, 425, 173, 176, 185, 397,
	186, 187, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 472, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 445, 399, 280, 320,
	322, 430, 437, 431, 432, 433, 434, 429, 436, 435,
	395, 396, 208, 439, 464, 229, 406, 409, 483, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 462, 463, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 438, 226, 0,
	0, 453, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 468,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 317,
	336, 329, 365, 332, 0, 0, 0, 367, 386, 408,
	414, 415, 442, 443, 444, 446, 450, 451, 452, 0,
	0, 0, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 481, 340, 382, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 460, 461, 477, 478, 447, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 476, 190, 0, 313,
	0, 495, 474, 422, 338, 498, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 1162, 195, 0, 1158, 0,
	352, 0, 0, 177, 198, 312, 0, 0, 0, 245,
	1156, 391, 0, 466, 494, 278, 0, 390, 314, 459,
	0, 0, 465, 0, 441, 475, 480, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 456, 200,
	333, 457, 479, 166, 272, 410, 273, 440, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 482,
	473, 225, 274, 385, 389, 366, 221, 448, 334, 344,
	238, 240, 239, 215, 411, 455, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 469, 0,
	257, 0, 471, 180, 405, 404, 0, 292, 0, 181,
	170, 384, 182, 302, 204, 0, 484, 220, 308, 449,
	493, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 0, 381, 407, 454, 222, 425,
	173, 176, 185, 397, 186, 187, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 472, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	445, 399, 280, 320, 322, 430, 437, 431, 432, 433,
	434, 429, 436, 435, 395, 396, 208, 439, 464, 229,
	406, 409, 483, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 462,
	463, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 438, 226, 0, 0, 453, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 468, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 317, 336, 329, 365, 332, 0, 0,
	0, 367, 386, 408, 414, 415, 442, 443, 444, 446,
	450, 451, 452, 0, 0, 0, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	481, 340, 382, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 460, 461, 477, 478, 0,
	196, 42, 447, 202, 0, 203, 205, 0, 201, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 88, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 677, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 96,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 109,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	671, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	313, 0, 495, 474, 422, 338, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 3520, 195, 0, 0,
	3519, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 494, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 166, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 484, 220, 308,
	449, 493, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 454, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 313, 0, 495, 474, 422, 338,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3487, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	1162, 195, 0, 0, 2455, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 494,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 166, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 484, 220, 308, 449, 493, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 454, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 677, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 484, 220, 308, 449, 161,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 454, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3195, 678, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 671, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 313, 0, 495, 474, 422, 338, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2904, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 1162, 195,
	0, 0, 2455, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 494, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 484,
	220, 308, 449, 493, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	454, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 313, 0, 495, 474,
	422, 338, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1477, 1476, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 2259, 391, 0,
	466, 494, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 493, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 677, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 166, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 484, 220, 308,
	449, 161, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 454, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 671, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 313, 0, 495, 474, 422, 338,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3478, 0, 0, 0, 0, 0,
	3480, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 494,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 166, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 484, 220, 308, 449, 493, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 454, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 313, 0,
	495, 474, 422, 338, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2042, 2040, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 494, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 484, 220, 308, 449, 493,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 454, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 313, 0, 495, 474, 422, 338, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 2040, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 494, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 484,
	220, 308, 449, 493, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	454, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 313, 0, 495, 474,
	422, 338, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 1162, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 494, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 493, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	313, 0, 495, 474, 422, 338, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3339, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 494, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 166, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 484, 220, 308,
	449, 493, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 454, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 313, 0, 495, 474, 422, 338,
	498, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 494,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 166, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 484, 220, 308, 449, 493, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 454, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 313, 0,
	495, 474, 422, 338, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3480, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 494, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 484, 220, 308, 449, 493,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 454, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 313, 0, 495, 474, 422, 338, 498, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 494, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 484,
	220, 308, 449, 493, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	454, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 313, 0, 495, 474,
	422, 338, 498, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 494, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 493, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 476, 190, 0,
	313, 0, 495, 474, 422, 338, 498, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 494, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 166, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 484, 220, 308,
	449, 493, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 454, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 476, 190, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 545,
	542, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 166, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 484, 220, 308, 449, 161, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 454, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 313, 0,
	495, 474, 422, 338, 498, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 494, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 484, 220, 308, 449, 493,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 454, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 2527, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 484,
	220, 308, 449, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	454, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 2413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 0, 196, 0, 0,
	202, 0, 203, 205, 447, 201, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 476, 190, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 484, 220, 308, 449, 161,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 454, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 476,
	190, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 155, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 484,
	220, 308, 449, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	454, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 476, 190, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	166, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 484, 220, 308, 449, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 454, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	1160, 730, 732, 733, 734, 735, 0, 0, 0, 731,
	2304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 726, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 727, 728, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 166, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 484, 220, 308, 449, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 454, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 652, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 166, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	454, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 4441, 0, 0, 0,
	0, 0, 259, 4439, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	0, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 405, 404, 0, 292, 0, 4440, 0, 384, 0,
	302, 204, 0, 484, 220, 308, 449, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 454, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2976, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 2977, 2978, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 1622, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 2457, 0, 0, 476, 0, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 2456, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 0, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 484, 220, 308, 449, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 454, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 0, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	454, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	0, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 484, 220, 308, 449, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 454, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	3534, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 3532, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 3530, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 0, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 484, 220, 308, 449, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 454, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 3528, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 0, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	454, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 3523, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	0, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 484, 220, 308, 449, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 454, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	3510, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 3508, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 3445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 0, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 484, 220, 308, 449, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 454, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3436, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 0, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	454, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	0, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 484, 220, 308, 449, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 454, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 2578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 2733, 2732, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 447, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 313, 0,
	0, 474, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 466, 0, 278, 0, 390, 314, 459, 0,
	0, 465, 0, 441, 475, 480, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 456, 200, 333,
	457, 479, 0, 272, 410, 273, 440, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 482, 473,
	225, 274, 385, 389, 366, 221, 448, 334, 344, 238,
	240, 239, 215, 411, 455, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 469, 0, 257,
	0, 471, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 484, 220, 308, 449, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 454, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 472, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 445,
	399, 280, 320, 322, 430, 437, 431, 432, 433, 434,
	429, 436, 435, 395, 396, 208, 439, 464, 229, 406,
	409, 483, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 462, 463,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	438, 226, 0, 0, 453, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 468, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 317, 336, 329, 365, 332, 0, 0, 0,
	367, 386, 408, 414, 415, 442, 443, 444, 446, 450,
	451, 452, 0, 0, 0, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 481,
	340, 382, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 460, 461, 477, 478, 447, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 313, 0, 0, 474, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 466, 0, 278, 0,
	390, 314, 459, 0, 0, 465, 0, 441, 475, 480,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 456, 200, 333, 457, 479, 0, 272, 410, 273,
	440, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 482, 473, 225, 274, 385, 389, 366, 221,
	448, 334, 344, 238, 240, 239, 215, 411, 455, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 469, 0, 257, 0, 471, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 484,
	220, 308, 449, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	454, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 472, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 445, 399, 280, 320, 322, 430, 437,
	431, 432, 433, 434, 429, 436, 435, 395, 396, 208,
	439, 464, 229, 406, 409, 483, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 462, 463, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 458, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 438, 226, 0, 0, 453, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 468, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 317, 336, 329, 365,
	332, 0, 0, 0, 367, 386, 408, 414, 415, 442,
	443, 444, 446, 450, 451, 452, 0, 0, 0, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 481, 340, 382, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 460, 461,
	477, 478, 447, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 313, 0, 0, 474,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	466, 0, 278, 0, 390, 314, 459, 0, 0, 465,
	0, 441, 475, 480, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 456, 200, 333, 457, 479,
	0, 272, 410, 273, 440, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 482, 473, 225, 274,
	385, 389, 366, 221, 448, 334, 344, 238, 240, 239,
	215, 411, 455, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 469, 0, 257, 0, 471,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 484, 220, 308, 449, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 454, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 472, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 445, 399, 280,
	320, 322, 430, 437, 431, 432, 433, 434, 429, 436,
	435, 395, 396, 208, 439, 464, 229, 406, 409, 483,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 462, 463, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 438, 226,
	0, 0, 453, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	468, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	317, 336, 329, 365, 332, 0, 0, 0, 367, 386,
	408, 414, 415, 442, 443, 444, 446, 450, 451, 452,
	0, 0, 0, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 481, 340, 382,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 460, 461, 477, 478, 447, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	313, 0, 0, 474, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 466, 0, 278, 0, 390, 314,
	459, 0, 0, 465, 0, 441, 475, 480, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 456,
	200, 333, 457, 479, 0, 272, 410, 273, 440, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	482, 473, 225, 274, 385, 389, 366, 221, 448, 334,
	344, 238, 240, 239, 215, 411, 455, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 469,
	0, 257, 0, 471, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 484, 220, 308,
	449, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 454, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 472, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 445, 399, 280, 320, 322, 430, 437, 431, 432,
	433, 434, 429, 436, 435, 395, 396, 208, 439, 464,
	229, 406, 409, 483, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	462, 463, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 438, 226, 0, 0, 453, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 468, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 317, 336, 329, 365, 332, 0,
	0, 0, 367, 386, 408, 414, 415, 442, 443, 444,
	446, 450, 451, 452, 0, 0, 0, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 481, 340, 382, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 470, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 460, 461, 477, 478,
	447, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 313, 0, 0, 474, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 466, 0,
	278, 0, 390, 314, 459, 0, 0, 465, 0, 441,
	475, 480, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 456, 200, 333, 457, 479, 0, 272,
	410, 273, 440, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 482, 473, 225, 274, 385, 389,
	366, 221, 448, 334, 344, 238, 240, 239, 215, 411,
	455, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 469, 0, 257, 0, 471, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 484, 220, 308, 449, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 454, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	472, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 445, 399, 280, 320, 322,
	430, 437, 431, 432, 433, 434, 429, 436, 435, 395,
	396, 208, 439, 464, 229, 406, 409, 483, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 462, 463, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 438, 226, 0, 0,
	453, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 468, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 317, 336,
	329, 365, 332, 0, 0, 0, 367, 386, 408, 414,
	415, 442, 443, 444, 446, 450, 451, 452, 0, 0,
	0, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 481, 340, 382, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	460, 461, 477, 478, 42, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 71, 0, 0, 4254, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4247, 0, 0, 0,
	0, 4592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 71, 57, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	62, 92, 91, 89, 0, 0, 0, 57, 0, 4254,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	4247, 4250, 0, 0, 0, 4588, 0, 0, 0, 0,
	0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256,
	0, 4260, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 89, 0, 0, 0, 0, 0, 4254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 69, 70, 0, 4250, 0, 0, 4247, 0,
	60, 0, 0, 4587, 0, 4259, 4251, 4252, 4253, 4257,
	4258, 4255, 4589, 4256, 0, 4260, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4248, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 4261, 4249, 0, 66,
	67, 73, 0, 74, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	4261, 4249, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 69, 70, 0, 4250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4259, 4251, 4252, 4253, 4257,
	4258, 4255, 0, 4256, 0, 4260, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	69, 70, 0, 4250, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 4259, 4251, 4252, 4253, 4257, 4258, 4255,
	0, 4256, 0, 4260, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 71, 0, 0, 0, 0, 0,
	93, 0, 60, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	4261, 4249, 87, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 4584, 0, 71, 0,
	0, 4254, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	59, 61, 4247, 0, 0, 0, 87, 0, 4261, 4249,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 4247, 0, 0, 0,
	0, 4576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 71, 57,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	59, 61, 96, 0, 0, 0, 87, 0, 4248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 62, 92, 91, 89,
	0, 0, 0, 57, 0, 4254, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 85, 0,
	0, 0, 0, 0, 69, 70, 4247, 4250, 59, 61,
	0, 4573, 0, 0, 87, 0, 0, 4259, 4251, 4252,
	4253, 4257, 4258, 4255, 0, 4256, 0, 4260, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 89, 0, 0,
	0, 0, 0, 4254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 84, 69, 70,
	0, 4250, 0, 0, 4247, 0, 60, 0, 0, 4490,
	0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256,
	0, 4260, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4248, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 42, 0,
	60, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 71, 57, 0, 0, 0, 0, 93, 0,
	0, 47, 4261, 4249, 0, 66, 67, 73, 0, 74,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 62, 92, 91, 0, 0, 4254,
	0, 57, 0, 0, 0, 0, 4261, 4249, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 69, 70,
	4247, 4250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256,
	0, 4260, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 69, 70, 0, 4250,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 4259,
	4251, 4252, 4253, 4257, 4258, 4255, 0, 4256, 0, 4260,
	0, 0, 0, 0, 78, 0, 79, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4248, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 59, 61, 0, 0, 4261, 4249, 87, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 4261, 4249, 0, 66, 67, 73,
	0, 74, 69, 70, 0, 4250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4259, 4251, 4252, 4253, 4257,
	4258, 4255, 4487, 4256, 0, 4260, 0, 0, 0, 0,
	78, 0, 79, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 71, 0, 0, 0,
	0, 0, 93, 0, 60, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4254, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4247, 0, 59, 61, 0, 4482,
	4261, 4249, 87, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 4247, 0,
	0, 0, 0, 4480, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4248, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	71, 57, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 62, 92,
	91, 89, 0, 0, 0, 57, 0, 4254, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 1659, 69, 70, 4247, 4250,
	59, 61, 0, 4363, 0, 0, 87, 0, 0, 4259,
	4251, 4252, 4253, 4257, 4258, 4255, 0, 4256, 0, 4260,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 89,
	0, 0, 0, 0, 0, 4254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 84,
	69, 70, 0, 4250, 0, 0, 4247, 0, 60, 0,
	0, 0, 0, 4259, 4251, 4252, 4253, 4257, 4258, 4255,
	0, 4256, 0, 4260, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4248, 0, 0, 84, 1646, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 4261, 4249, 0, 66, 67, 73,
	0, 74, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 1660, 4261, 4249,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	69, 70, 0, 4250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4259, 4251, 4252, 4253, 4257, 4258, 4255,
	0, 4256, 0, 4260, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 69, 70,
	0, 4250, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 4259, 4251, 4252, 4253, 4257, 4258, 4255, 0, 4256,
	0, 4260, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 4261, 4249,
	87, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 4261, 4249, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 1676, 1677, 1678, 1679,
	1680, 1681, 0, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 85, 1661, 1662, 1663,
	1643, 1642, 1674, 1644, 1647, 1641, 1645, 1640, 0, 0,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	8038, -1000, -506, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2819, -1000, 2819, 307, -1000, 440, -1000, 1425, 525,
	-1000, -1000, -1000, -1000, -1000, 719, 333, 57756, 1107, 54812,
	78308, -252, 1747, 77574, 153, -1000, 153, 434, 54078, 842,
	992, 76840, 2712, 2113, 188, 23, 14, 235, 38661, 37916,
	304, 221, 223, 214, 177, 1329, -1000, 60692, 853, -1000,
	330, -1000, -1000, -1000, -1000, -1000, 46004, 2977, 2988, 2977,
	-1000, 2868, 2909, -1000, -1000, 2868, 2270, 2270, -1000, 60692,
	13103, -1000, -1000, -1000, -1000, -1000, 30399, -1000, 1279, -1000,
	58490, 40863, 2819, -1000, 1084, 1073, -97, 1023, 1023, 849,
	1023, 1023, -468, 1106, -1000, 822, 1636, -1000, -1000, -1000,
	-1000, 1631, 58490, 65830, 1024, 75372, 1024, 1024, 1024, 1024,
	1024, 1024, 1024, 1024, 53344, 58490, -1000, 1267, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 58490, 2966, 2965, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2540,
	2539, 52610, 579, 2783, 1624, 310, 1624, -1000, -1000, 1661,
	-1000, 919, 914, 911, 910, 903, 909, 57, 1588, 1647,
	2877, -1000, 2485, 2868, 2868, 1588, -1000, 881, -1000, -1000,
	-1000, -1000, -1000, -1000, 1345, -1000, -1000, 1705, 1705, 560,
	1065, 344, 931, 342, 2822, 1612, 2782, 2781, 2146, 2780,
	832, 2777, 2535, -1000, 1262, -1000, -1000, 58, -1000, 2112,
	58490, -1000, -1000, 2028, 2018, 667, 2433, 1158, 2582, -1000,
	-1000, 651, 686, 2518, 785, 2518, 2518, 2518, 413, 2518,
	2518, 8, 2518, 2518, 2518, 328, 2518, 348, 2518, 2518,
	2518, 2518, 2518, -1000, 2266, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 682, 2432, 2486,
	2580, 239, -1000, -184, -1000, 2845, 793, -1000, -1000, -1000,
	318, 1279, 61426, 2472, -1000, 2485, -1000, -1000, 2483, 2485,
	-1000, 2085, 1103, 1024, 757, -1000, 528, -1000, -1000, -1000,
	2815, 2485, 41600, -1000, -1000, 1484, -1000, 2485, 2485, 1279,
	2866, 1279, 1279, 2861, 2847, 1279, 2761, 27391, 17615, 3002,
	1779, -1000, -1000, -1000, -1000, 1279, 2964, -1000, 40129, 1258,
	-1000, 17615, 1954, 2485, 2485, -1000, 1154, 1270, -1000, 1149,
	1217, -1000, -1000, 18367, 18367, 18367, 18367, 18367, 18367, 18367,
	-1000, -1000, -1000, -1000, -1000, -1000, 2242, 2241, 2239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2485,
	1255, 1244, -1000, 2485, 2485, 2485, 2485, 2485, -1000, 16111,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485,
	2485, 2485, 2485, 2485, 2485, 2485, 2485, 17615, 2485, 2485,
	2485, 2485, 2485, -1000, 2485, 2485, 2485, 2485, 2485, 2485,
	2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485,
	2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485,
	2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2485, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2485, 2485,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2485, 1030, 1030, 57022, 2482, -50, 29647,
	-1000, -1000, -1000, -1000, 28143, 63628, 1534, -1000, -1000, -1000,
	-1000, 2764, -1000, -1000, 1231, 1217, 1154, 1153, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2819, 342, -1000, 2393,
	-1000, -1000, 80651, 80651, 80651, 80651, 80651, 80651, 48940, -1000,
	-1000, -1000, 2534, 2868, -1000, 75372, 58490, 851, 2111, 1687,
	2109, 76840, 76840, 1023, -1000, 790, 65830, 65830, -371, 1023,
	808, 65830, 777, 2481, 1063, 2480, 1062, 2040, 58490, 2813,
	2579, 58490, 2108, 2107, 76840, 76840, 65830, 65830, 76840, -1000,
	-1000, -1000, 26639, -1000, 1306, 2479, 48206, 47472, 51876, 51876,
	-1000, -1000, -1000, 879, -1000, 1624, -1000, 6478, 17615, 1023,
	1023, 58490, 58490, 58490, 58490, 58490, -1000, 58490, -1000, -1000,
	1624, -1000, -1000, 1624, 1624, 1624, 1588, 2961, 1588, -1000,
	-1000, -1000, 1624, 77574, 77574, 17615, -1000, 18367, 65096, 1355,
	-1000, -1000, 1624, -1000, 77574, 961, 961, 961, -1000, 2106,
	536, -1000, -1000, -1000, -1000, -1000, 344, -1000, -1000, -1000,
	2726, 2844, 2839, 2105, 832, 832, -1000, 2247, 832, 2463,
	-1000, 1610, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 832, 2822, 16863, 75372, -485, -1000,
	-1000, 2478, -1000, 469, -1000, -1000, 916, 2578, 916, 8380,
	65830, 65830, 65830, -1000, 2518, 75372, -1000, 2518, 2518, 2518,
	7, 2518, 2518, -1000, -1000, 2518, -1000, -1000, -1000, 2518,
	-1000, -1000, 2518, -1000, -1000, -1000, 2518, 2518, -1000, 2518,
	2518, -1000, -1000, -1000, -1000, -1000, 65830, 916, 537, 2477,
	916, 65830, 65830, 1061, 213, -26, 145, -1000, -1000, -1000,
	317, 316, 314, 313, -1000, -1000, -1000, -1000, 303, 301,
	-1000, -1000, 58490, 58490, 885, -1000, 2472, 61426, 2837, 22127,
	853, -1000, 17615, 2789, -1000, 2789, -1000, -1000, -1000, 377,
	-1000, 58490, 65830, 76840, 46004, 46004, 46004, 46004, -1000, 2605,
	2604, -1000, 2596, 2595, 2594, 473, 61426, -1000, 2815, 307,
	2391, 2270, 2270, 528, 41600, -1000, 2485, -1000, 61426, 1321,
	1079, 1077, 1076, 2726, -1000, -1000, -1000, -1000, -1000, 2140,
	2083, 1886, 12351, 18367, -1000, -1000, -1000, -1000, -1000, 2977,
	2977, -1000, -1000, -1000, -1000, -1000, -1000, 1722, 2972, 1521,
	2461, -1000, -1000, -1000, 2470, -1000, 1772, 1205, 1893, 1796,
	-1000, -1000, -1000, -1000, -1000, -1000, 13103, -1000, 58490, -1000,
	17615, 17615, 17615, 1760, -1000, 45270, -1000, -1000, -1000, 22879,
	1543, 18367, 1790, 1510, 18367, 18367, 18367, 18367, 18367, 18367,
	18367, 18367, 18367, 18367, 18367, 18367, 18367, 18367, 18367, 1380,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2102, -1000,
	342, 35663, 12351, 35663, 548, 548, 75372, 1335, 1335, 1335,
	1335, 1335, 1335, 59224, -1000, -1000, -1000, 2843, 34159, 35663,
	2843, 2843, 2843, 2843, 2843, 2386, 1961, 60692, 16111, 46004,
	12351, 12351, 12351, 2270, 17615, 17615, 12351, 18367, 12351, 15359,
	14607, 19871, 12351, 12351, 2843, 1657, 1961, 25887, 12351, -1000,
	2270, -1000, -1000, -1000, -1000, 1968, -1000, -1000, -324, -324,
	-324, 404, 12351, 12351, 12351, 12351, 2270, 2270, 12351, 12351,
	12351, 12351, 12351, 2270, 2270, 2270, 2270, 12351, 12351, 12351,
	12351, 12351, 12351, 12351, 12351, 12351, 12351, 12351, 12351, -1000,
	-1000, -1000, 1855, 56280, 46004, 58490, 2424, 2385, -1000, -1000,
	1204, 28895, 2455, -1000, -34, -38, -50, -1000, -1000, 1318,
	-1000, -1000, -1000, -1000, 13855, -1000, -1000, -1000, 23631, 2868,
	-1000, 39395, -1000, 36, -1000, -1000, -1000, 2506, -1000, 2508,
	164, 551, 2508, 82, 80, 2508, 2508, 2508, -1000, -1000,
	-1000, -1000, 98, -1000, -1000, -1000, -1000, -1000, 2532, 2531,
	-1000, 2506, 2506, 2506, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2516, 535,
	2507, 2507, 2507, 2507, 2507, -1000, -1000, -1000, -1000, -1000,
	991, -1000, -1000, -1000, 17615, 2761, 2856, 2487, 2485, 1067,
	-469, 808, 2789, 2803, 2789, 869, -1000, 1198, 2520, 76840,
	828, 2450, -1000, 556, 2435, 1130, 55546, -1000, -1000, -1000,
	-1000, -1000, 58490, 58490, 65830, 65830, 65830, 1099, -1000, 58490,
	2465, -1000, -1000, -1000, -1000, -1000, 2441, -1000, 2435, -1000,
	-1000, 1195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -442, -444, 58490, -1000, -1000,
	-1000, -1000, -1000, -1000, 2464, -1000, 2464, -1000, -1000, -1000,
	2246, 1961, 2101, 2100, 2822, -1000, -1000, -1000, -1000, 1601,
	-1000, -1000, -1000, -1000, 1624, 58490, 2822, -1000, -1000, -1000,
	1961, 1060, 2538, 2485, 2270, -1000, -1000, -1000, 151, -1000,
	149, -1000, -1000, -1000, 2099, -1000, 18367, 2723, 2720, -1000,
	2463, 2463, -1000, 2463, 832, 59958, 2463, -1000, -1000, 2381,
	-1000, 260, 2245, 58490, -1000, 61426, 53, -1000, -76, 73904,
	-1000, -1000, -1000, 916, 73904, -1000, 328, 249, -1000, 1058,
	-1000, 2355, -1000, -1000, -1000, -1000, 2518, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 73904, 408, 516,
	73904, 2441, 2960, 277, 2462, -1000, 1609, 1607, -1000, -1000,
	136, -1000, -1000, -1000, -1000, 2876, -1000, 248, 248, 2243,
	18367, -1000, 2485, 2322, -1000, 1170, -1000, -1000, -1000, -1000,
	-1000, -1000, 2485, -1000, -1000, -1000, -1000, 2763, 1534, 1534,
	1534, 6753, 556, 2577, 2527, 2576, 549, -1000, -1000, -1000,
	-1000, 2603, -1000, 2597, 2593, -1000, -1000, -1000, 2492, 61426,
	46004, -1000, -1000, -1000, 2270, 75372, 1184, -1000, 61426, 2485,
	2485, 2485, 18367, 18367, 1502, -1000, 18367, 18367, 1501, -1000,
	18367, 18367, 1409, -1000, 2270, 2460, -1000, -1000, 1961, 1167,
	5005, -1000, 74638, 47, 2583, 27391, 27391, 17615, -1000, -1000,
	-1000, 23631, 2860, -1000, 2639, 2636, 2959, -1000, -1000, -1000,
	1543, 1546, 1549, -1000, -1000, 1813, -1000, -1000, -1000, -1000,
	-1000, 1166, 2485, -1000, -1000, -1000, -1000, -1000, 5134, -1000,
	-1000, -1000, -1000, 1790, 18367, 18367, 18367, 1060, 5134, 4977,
	1862, 1891, 1335, 1497, 1497, 1326, 1326, 1326, 1326, 1326,
	1592, 1592, -1000, -1000, -1000, -1000, 2270, -1000, 2353, -1000,
	-1000, 2242, 2241, 2239, -1000, -1000, -1000, -1000, 12351, -1000,
	-1000, -1000, -1000, -1000, 12351, 12351, 12351, 12351, 12351, 17615,
	-1000, 2353, 2353, 2353, -1000, 1674, 1941, 2254, 4961, 2353,
	1342, 2952, 2353, 1317, 2951, 2353, 2016, 18367, 18367, 18367,
	2353, 2353, 12351, 1682, -1000, 17615, 2270, 1256, 2270, 1154,
	1153, 2353, -1000, 2270, 2459, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2458, 2949, 2456, -1000,
	-1000, -1000, -1000, 2353, 2270, 2353, 2353, -124, -124, 2270,
	2353, 2270, 2353, 2353, -124, -124, -124, -124, 2353, 2353,
	2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353,
	-1000, 2270, 1429, 58490, -1000, 2445, 1429, 2428, 46004, -1000,
	-1000, 46004, 77574, 25135, -1000, 28143, -50, -51, -1000, -1000,
	2455, -1000, -1000, 1504, -1000, -1000, 2238, 1961, -1000, 1152,
	2761, 4957, -1000, -1000, -1000, -1000, 2517, 44536, -1000, 2675,
	1250, 1250, 1250, 64362, 76106, 2673, -1000, -1000, 207, 29,
	-1000, -1000, -1000, 2017, -1000, 359, 500, 2508, -1000, -1000,
	-1000, 2508, 2508, -1000, 2508, 2508, -1000, -1000, -1000, -1000,
	2237, 2237, -1000, -1000, -1000, -1000, 2011, -1000, 2516, -1000,
	1995, -1000, -1000, -1000, -1000, 207, 207, 207, 207, 207,
	-1000, 1852, -1000, 2575, 75372, 2836, 58490, -373, -1000, -1000,
	-1000, 2945, -1000, -1000, 75372, 62894, 2574, -1000, -1000, 336,
	65830, 553, 690, 300, -1000, 1683, -1000, -1000, 1057, -1000,
	1056, -1000, -1000, -1000, -1000, -1000, -1000, 58490, 65830, 75372,
	2570, 2568, -1000, 51876, -1000, -1000, -1000, -1000, 2918, 2098,
	2097, -1000, 1588, 1624, -1000, 18367, 65830, -1000, 897, -1000,
	-1000, -1000, 5134, 18367, 18367, -1000, -1000, -1000, -1000, 1717,
	-1000, -1000, -1000, -1000, -8, -1000, -1000, 1051, 1142, 1140,
	73904, 1043, -1000, 379, 65830, -1000, 75372, -1000, 2948, 2946,
	407, 2940, 65830, 2454, -1000, 1604, 1603, 1602, 1597, 1583,
	1582, 1581, 1578, 1557, 213, 2513, 2510, -1000, -1000, 265,
	-1000, -47, -1000, -1000, 5134, -1000, -1000, 22127, 35663, -1000,
	1534, 1494, -1000, 1438, 2236, 1150, 1021, -1000, -1000, 1136,
	1116, 1018, 1534, 999, 430, 1042, 2728, 2725, 578, 573,
	-1000, 1534, 999, 1264, 687, -1000, 1481, 1475, 1450, 1449,
	1448, 1444, 1443, 1431, 663, -377, -1000, 1534, 1534, 1534,
	1534, 1534, 1534, 1534, 1534, -171, -178, 1534, 1534, 1534,
	1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534,
	1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534,
	31151, 1534, 1534, -1000, 1115, 765, -1000, -1000, 17615, 2509,
	-1000, 17615, -1000, -1000, -1000, -1000, -1000, 75372, 2492, 528,
	-1000, 2320, -1000, -1000, 1184, 75372, 75372, 75372, 4936, 1877,
	2485, 4873, 1828, 2485, 4819, 1566, 2485, 2815, 12351, 21375,
	2235, 2453, 2234, 2230, -1000, 45, 2612, -1000, -1000, -1000,
	58490, -1000, -1000, -1000, -1000, 2918, 43802, 13103, -1000, -1000,
	-1000, -1000, 33407, 12351, -1000, 1060, 5134, 4654, -1000, 18367,
	-1000, -1000, 2270, 2353, 2353, 2353, 2353, 2353, 1961, -1000,
	-1000, -1000, 395, 1380, 395, -1000, 1380, 18367, -1000, 18367,
	18367, -1000, 18367, 18367, -1000, -1000, 18367, 4591, 3587, 2915,
	-266, -1000, 2457, 1652, -1000, 17615, 1937, -1000, -1000, -1000,
	-1000, -1000, 18367, 18367, 18367, 18367, -1000, -1000, -1000, -1000,
	-1000, 73170, -1000, -124, -124, -124, -124, -124, -1000, -1000,
	-1000, -1000, -124, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -124, -124, -1000, 427, 2485, -1000, 24383, 2918,
	46004, 2361, 2361, -1000, 1138, -1000, -1000, -1000, -69, -45,
	-1000, -1000, -1000, -1000, -1000, 35663, -1000, -1000, -1000, 8213,
	2907, 1534, 1534, 1534, 378, 1534, 1534, 1534, 1534, 1534,
	-187, -197, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534,
	1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 1534, 180,
	1534, 1534, 1534, 1534, 1534, 1534, 31151, 1534, 1534, -378,
	49674, 1160, 988, -1000, -1000, -1000, 76106, 76106, 76106, -1000,
	76106, 76106, -1000, -1000, -1000, -1000, 50408, -1000, -1000, 1737,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2485, -500,
	1994, 58490, -1000, 2754, 1426, 37919, 2971, -1000, 2672, -1000,
	2670, 2669, 2225, -1000, -1000, 2394, 2378, 2376, -1000, 2508,
	-1000, -1000, -1000, -1000, -1000, 2351, -1000, 2349, 2452, -1000,
	2346, -430, 58490, -1000, -1000, 2485, 1992, 2567, -1000, -1000,
	-1000, -1000, 2356, 2449, -1000, 80651, 75372, 75372, 75372, 749,
	-283, 442, -1000, 65830, 391, 556, 701, 2033, -405, 2801,
	58490, 65830, -1000, -1000, -1000, 72436, 72436, -1000, -1000, 17615,
	-1000, -1000, 2822, -1000, 5134, 2435, -1000, -1000, 5134, 5134,
	1429, 1102, -1000, 65830, 1353, 71702, 1039, 65830, 405, 238,
	-1000, 65830, 65830, 2938, 65830, 2441, 277, 2224, 2223, 2222,
	1977, 2221, 1971, 1967, 1966, 1965, -1000, 58490, 58490, 2220,
	2732, -1000, -1000, 1421, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7256, 1021, 1423, 1422, 1419, 1412, -1000, 46738,
	76106, 1163, 1004, -1000, -1000, 2485, -1000, 43068, 50408, 50408,
	50408, 75372, 2668, 2665, 75372, 50408, 50408, 75372, 50408, 942,
	2092, 2749, 1534, 95, -1000, -1000, -1000, 70968, -1000, 70234,
	744, 51142, 50408, 75372, 58490, 42334, -1000, -1000, -1000, -1000,
	69500, 1964, 75372, 75372, 68766, 68032, 67298, 66564, -1000, -247,
	819, 17615, 819, 1959, 1959, 2219, 2218, 2217, 1534, 1534,
	210, 1959, 2216, 210, 1959, 37167, 2215, 960, 819, 819,
	819, 1959, 1959, 1959, 1959, 2213, 393, 1897, 2212, 1959,
	2091, 2075, 819, -1000, -225, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1959, 2485, 890, 1038,
	877, -13, 1961, 75372, 1961, 2340, -1000, -1000, 1445, 75372,
	-1000, 2283, 2283, 2283, 18367, 18367, 18367, 18367, 18367, 18367,
	18367, 18367, 18367, 61426, -1000, -1000, 1137, -10, 75372, -1000,
	35, -1000, -1000, -1000, 2916, -1000, 2447, -1000, -1000, -1000,
	2270, -1000, 18367, 5134, -1000, -124, -124, -124, -124, -124,
	2270, 2506, 2506, 2506, -1000, 2506, 2507, 109, -1000, -1000,
	-1000, 2506, 129, 2506, 128, -1000, 2270, 2270, 2270, 2086,
	2811, 2724, 2671, 2548, 2086, 18367, 18367, 18367, 2485, -114,
	-1000, 1961, 17615, 2569, 2358, 2086, 2086, -1000, -1000, 2088,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2565, 2565,
	24383, 2815, -1000, 20623, -1000, 853, -1000, -1000, 75372, 2396,
	-1000, 1534, 1296, 1534, 1534, 2819, 2361, -1000, -1000, 1352,
	-1000, -1000, -1000, -1000, 163, 819, 819, 819, 1534, 2748,
	1534, 1959, 1959, 2211, 2210, 2209, 1534, 1534, 210, 1959,
	2208, 210, 1959, 37167, 2206, 960, 819, 819, 819, 1959,
	1959, 1959, 1959, 2204, 393, -1000, 1890, 2200, 1959, 2042,
	2037, 819, -1000, -226, 1959, 2485, -248, 2338, -1000, 2506,
	2506, 2664, 1250, -1000, -1000, -1000, -1000, -1000, -1000, 2505,
	-1000, -1000, 18367, 2821, -1000, 2504, 1403, -1000, -1000, -1000,
	-1000, 548, 2192, -1000, -1000, 18367, -1000, -1000, 2485, 2485,
	2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485, 2485,
	2485, -81, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2191, -1000, 1953, -1000, 1919, -1000, -1000, -1000, 2499,
	-1000, 2820, -1000, 58490, 347, 62894, -1000, 80651, 80651, 80651,
	-13, 383, 397, -1000, 1698, -1000, -1000, -1000, 2188, 2183,
	2169, 2435, 561, 1697, 432, -1000, 2812, 2810, 2168, 2167,
	2166, 2164, 1901, -1000, -1000, 2537, 75372, 2446, -1000, 1961,
	1624, 35, 58490, 238, -1000, -1000, -1000, 65830, 238, -1000,
	-1000, 459, 2441, 2441, 65830, 2441, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2334, 2332, -1000, -1000,
	-1000, -1000, -1000, -1000, 1174, 1213, 355, 354, 51142, 944,
	80651, 80651, 2487, 1250, -1000, 2663, 1378, -1000, -1000, -1000,
	-1000, -1000, -1000, 50408, 2444, -432, -436, 1283, -452, -1000,
	-1000, -1000, -1000, 51142, 1534, 1380, 2747, 649, 343, 647,
	338, -1000, -1000, -1000, -1000, 944, 1203, 1037, -1000, 2660,
	50408, 1036, 626, 334, -1000, 1765, -284, 2444, -1000, 2444,
	-1000, 2444, -1000, 2444, -1000, -1000, -1000, 1961, -1000, -1000,
	-1000, -1000, -1000, -1000, 2163, 2162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -189, -1000, 37167, 1744, -1000, 2564,
	76840, -1000, 720, 2563, 1836, 548, 2329, -1000, 75372, -1000,
	-1000, -1000, -1000, -1000, 5134, 5134, 2313, 5134, 5134, 2205,
	5134, 5134, 2123, -1000, 32655, 2485, -1000, -4, -1000, 2914,
	2905, -1000, -1000, 5134, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 420, 414, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18367, 18367, 18367, 18367, -1000, 2086,
	2086, 2086, 18367, 2270, 2160, 1961, 18367, 18367, -1000, -1000,
	1402, -1000, -1000, 2791, -1000, 2404, 61426, 2270, 2406, 2322,
	2270, 305, -1000, -1000, -1000, 60692, 46004, 2443, -1000, 2485,
	2320, 2819, 24383, 17615, 17615, 17615, 17615, 2868, -1000, -216,
	-1000, 448, 386, -1000, -1000, -1000, -1000, -1000, -1000, 1380,
	1534, 31903, -1000, -1000, -1000, -1000, -1000, 2159, 2158, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -195, -1000, 37167, -1000,
	237, 49674, 2796, 2796, 76106, 76106, 75372, 2086, 2485, 75372,
	-1000, -1000, -1000, -1000, -1000, 2086, -1000, -1000, 2291, 2284,
	49674, 342, -1000, -405, 2875, -1000, 347, -1000, 2157, 805,
	814, -1000, 803, 802, 800, 798, 789, -1000, -1000, -1000,
	-1000, 2563, 763, 383, -1000, -63, 1899, 1442, 2739, 397,
	-1000, 1889, 1870, 1861, 1860, 584, -1000, -1000, -1000, -1000,
	299, 556, -1000, 698, 2155, 695, 2154, -1000, -1000, 443,
	-1000, -1000, 2711, 2318, -1000, -4, -1000, 2818, 238, 2818,
	399, 2441, -1000, -1000, 2274, -1000, -1000, 2087, -1000, -1000,
	2498, 76106, 76106, 2287, -1000, 75372, -1000, -1000, -1000, -1000,
	-1000, 2788, 2787, -1000, -1000, 944, 1380, -1000, 1380, -1000,
	-1000, -1000, -1000, -1000, 50408, 75372, 50408, 1034, 50408, -1000,
	-1000, 2485, 1092, -1000, -1000, -1000, -1000, 2316, -1000, 567,
	2153, 315, -1000, -1000, 1115, 722, -1000, -1000, -1000, -281,
	-1000, -1000, 18367, 18367, 18367, -1000, 34911, 2702, 2700, -126,
	17615, 17615, -1000, -1000, -1000, -1000, 2086, 2086, 2086, 2086,
	-1000, -1000, -1000, 267, -1000, -1000, 2086, 2086, 2819, 2904,
	2572, -1000, 2492, -1000, -1000, 2406, 305, -1000, 853, -1000,
	11599, -1000, 2868, -1000, 1961, 1961, 1961, 1961, -1000, -229,
	1858, 18367, 2485, 2485, 776, -1000, 1380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2316, 237, -1000, 37167, 1534, 2152,
	1534, 1534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2314,
	-498, 18367, 2299, -1000, -1000, -1000, 2296, -1000, -1000, 829,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2710, 2708, 826,
	890, -1000, 2151, 2149, -1000, 703, 2014, 1272, -129, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	694, 2080, -1000, 429, -1000, -1000, 426, -1000, -1000, 2903,
	-405, 18367, -1000, 2702, -1000, 65830, 2818, -1000, -1000, -1000,
	-1000, 207, 207, 49674, 2487, 2497, -1000, 1378, 2634, 18367,
	-1000, -1000, 1332, 1327, -1000, -1000, 1033, 50408, -1000, 1378,
	58490, 37167, -1000, -1000, -1000, -1000, 890, 1360, 745, 2086,
	2086, 2086, 2277, -1000, 10198, 335, -1000, 2678, 2682, 2901,
	-1000, 75372, -1000, 1961, 2440, -1000, 1961, -1000, -1000, -1000,
	-1000, 2270, 296, -336, -1000, -1000, 1437, 17615, 2970, -1000,
	-1000, -1000, 305, -1000, -1000, -1000, 2485, 2899, -1000, 2086,
	75372, 18367, 2485, 1554, -1000, -1000, -1000, -1000, 1845, -1000,
	2145, 2132, 963, -1000, -1000, -1000, 2086, -1000, 237, -288,
	342, 846, 80643, -1000, -1000, -1000, -1000, 1744, -1000, -1000,
	-1000, -1000, 1834, -1000, -1000, 1856, 696, 425, -1000, 2817,
	-1000, -1000, 1831, 5134, 1022, -286, -1000, 2294, 2493, 49674,
	-1000, 922, 5134, 1534, 1380, 50408, -1000, 2287, 27, -1000,
	80643, 1744, 1269, 732, 1836, -1000, -1000, -1000, 2270, 34911,
	412, -460, -18, 2128, 2700, 2894, 2696, 2684, -1000, 2127,
	2439, -1000, 2816, 17615, -1000, 2611, -279, -341, 2270, 368,
	368, 2438, 24383, 2270, -1000, 1378, -408, -1000, 2283, 2086,
	75372, 1814, -1000, -1000, -1000, 58490, -498, -1000, 237, -1000,
	350, -1000, 860, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10847, 17615, 167,
	36415, 2060, 2059, 80643, 1800, 80643, 17615, 2058, 2057, 2658,
	18367, 80585, 565, -351, -1000, -352, -1000, -1000, -1000, 2126,
	-1000, 2492, 1799, 450, 237, 49674, 2290, 882, 1380, -1000,
	-1000, -1000, 684, -1000, -1000, 563, 548, -1000, 1836, -1000,
	2815, -1000, -1000, 2125, -162, -1000, 2485, -20, -1000, 2121,
	-1000, 2885, 2883, -1000, 75372, 2485, -1000, -1000, 2609, -1000,
	-1000, -1000, 372, -1000, 1406, 834, 1369, -1000, 548, -1000,
	2437, -1000, 2287, 382, -1000, -1000, 2283, -1000, 2489, -1000,
	388, 989, 972, -288, -1000, 2056, 2055, -1000, 1837, 1741,
	-1000, 17615, 1827, 648, 585, 9910, -1000, -1000, -1000, -1000,
	-1000, -1000, -507, -1000, 327, -508, 959, -1000, -1000, 2054,
	-1000, 2936, 5134, -1000, -509, -1000, -1000, -1000, -1000, 2745,
	1492, 62160, -1000, 2281, 237, 2485, -1000, -1000, -1000, -1000,
	-281, -1000, 1360, 61426, 636, 2084, 34911, 2485, -1000, 2076,
	1900, -1000, -1000, -295, 1694, -1000, -1000, -1000, -1000, -1000,
	-324, -1000, 2485, 776, -1000, 75372, -1000, 356, 349, -1000,
	-1000, -1000, -1000, 1648, 1679, 80643, -1000, 1798, 80643, 2873,
	2870, 2855, 35, 35663, 80435, 80381, 80643, 80643, 17615, 80047,
	80643, 1711, -1000, 79901, 80643, -1000, 24383, -1000, -1000, -1000,
	-1000, 2982, 2435, 237, -1000, 19119, 80643, -1000, 1360, -1000,
	1839, 1824, 2562, 2561, 548, -1000, 2277, 34911, -1000, -1000,
	-339, 372, -1000, 18367, 2485, 2279, -1000, -1000, 323, 1676,
	80643, -1000, -510, 80643, -511, 854, 342, 978, 1318, -1000,
	600, -1000, 2052, -513, -514, -515, 816, 17615, -516, 2051,
	-1000, -1000, 2437, 65830, -1000, 2086, 2270, -1000, -1000, 2560,
	548, -1000, 2559, 548, -88, -89, 2558, -1000, 2277, -343,
	-1000, 2086, 18367, 2557, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 79843, 60692, -1000, -517, 79693, -518, 5203, -1000, -1000,
	-1000, 79639, -1000, -1000, -1000, -1000, 608, -1000, -1000, 2786,
	-1000, -1000, 79305, 79247, 79097, 80643, 1777, 79043, 2436, -1000,
	-1000, 2435, -1000, -1000, -1000, 295, 2556, -387, 2555, 294,
	291, -1000, -1000, -93, -1000, -1000, -231, 2086, 2552, 2549,
	2923, -1000, -519, -1000, -1000, 10130, 1672, 80643, 1015, 80643,
	1572, -1000, 17615, -1000, 978, -1000, 18367, 2050, 599, 17615,
	-521, 593, 575, 2038, 287, -389, 2544, 2542, -1000, -1000,
	-1000, 1797, -231, -1000, 2947, -1000, 2968, 1145, 1145, 9852,
	1667, -1000, -1000, -523, 1014, 80643, -1000, 1727, -1000, 5134,
	-1000, 2035, 1577, 9798, -1000, -1000, -1000, 281, -390, -1000,
	-1000, -1000, -1000, -1000, 970, 1817, -1000, -1000, -1000, 9643,
	-1000, -524, 80643, -1000, 582, 569, -1000, -1000, -1000, -1000,
	-1000, 1012, 9294, -527, 2034, 1819, -1000, 1006, 80643, -1000,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 3517, 3501, 3500, 11, 3495, 273, 282, 303, 15,
	2746, 3494, 284, 3490, 280, 3486, 31, 26, 21, 35,
	3485, 3120, 3112, 3109, 3107, 33, 3484, 8, 3482, 3481,
	3105, 3480, 3479, 3103, 3472, 3459, 3455, 3444, 3443, 3437,
	3435, 3433, 3432, 3099, 3097, 3095, 3093, 3429, 3428, 3427,
	3081, 3076, 3074, 3426, 25, 48, 43, 3424, 6, 3419,
	193, 218, 3416, 4, 3412, 3411, 13, 194, 3410, 3407,
	62, 3072, 3405, 3401, 3400, 3399, 3398, 3397, 142, 3394,
	3391, 3068, 3390, 3055, 3389, 3040, 3038, 3036, 3034, 3030,
	221, 3383, 3026, 3024, 3022, 3368, 2671, 225, 479, 223,
	3365, 120, 144, 1543, 3364, 204, 3363, 206, 3359, 3358,
	3356, 459, 3355, 161, 3353, 3387, 158, 159, 174, 658,
	3352, 58, 176, 317, 3351, 10, 3350, 113, 3346, 215,
	3344, 222, 2742, 190, 274, 188, 3342, 3341, 141, 3340,
	3339, 3338, 212, 3337, 3335, 229, 2519, 3334, 3332, 182,
	3331, 137, 3330, 132, 3329, 3328, 3327, 3326, 226, 110,
	90, 163, 170, 3325, 154, 3324, 3323, 3321, 3320, 3319,
	3318, 69, 135, 2017, 3317, 131, 184, 3312, 61, 38,
	28, 3308, 3307, 59, 3305, 3304, 164, 3297, 3295, 136,
	3294, 183, 66, 3293, 3292, 3291, 3290, 107, 85, 3288,
	72, 3286, 181, 3284, 3280, 3276, 3275, 3273, 96, 3272,
	79, 3270, 187, 155, 423, 3269, 3266, 53, 40, 3264,
	64, 17, 16, 101, 49, 103, 80, 180, 162, 129,
	153, 52, 147, 54, 150, 208, 3262, 224, 168, 200,
	115, 39, 3261, 3259, 199, 3258, 108, 205, 178, 179,
	203, 3245, 3242, 3241, 231, 3240, 175, 549, 3235, 134,
	324, 227, 3234, 238, 138, 3233, 3231, 3229, 3228, 111,
	50, 123, 3227, 42, 232, 230, 234, 44, 104, 3225,
	370, 5063, 5498, 6452, 29, 73, 167, 5222, 262, 197,
	3224, 77, 3223, 3222, 3220, 4769, 172, 37, 121, 149,
	3219, 157, 116, 112, 3218, 3217, 3215, 3214, 3213, 3212,
	152, 201, 3209, 3205, 65, 3204, 3203, 46, 41, 19,
	18, 3202, 148, 216, 213, 202, 3197, 198, 51, 3196,
	3190, 177, 128, 3189, 3187, 3186, 3183, 173, 114, 196,
	3181, 195, 126, 146, 3178, 118, 3177, 3176, 91, 6892,
	185, 3175, 3174, 291, 127, 3173, 3172, 3171, 3169, 57,
	3168, 3167, 3, 3166, 106, 55, 75, 109, 24, 156,
	3164, 3163, 192, 3162, 3160, 143, 166, 3159, 139, 130,
	63, 3157, 71, 145, 3156, 160, 2, 5, 14, 3155,
	3154, 3153, 3150, 3148, 3145, 3141, 3140, 125, 3139, 3137,
	102, 81, 78, 3136, 68, 3135, 3132, 3131, 191, 165,
	70, 209, 124, 7, 3130, 3129, 9, 3128, 171, 3127,
	93, 3126, 117, 3125, 3124, 67, 100, 47, 92, 3122,
	3116, 94, 3114, 3101, 99, 3091, 3089, 217, 2286, 3083,
	518, 3070, 207, 169, 74, 86, 3063, 82, 105, 3058,
	95, 3032, 20, 76, 3014, 23, 30, 1574, 3011, 0,
	1607, 211, 3009, 122, 3007, 3005, 220, 2994,
}

var yyR1 = [...]int{
	0, 458, 458, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 242, 242, 95, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 125, 125, 8, 8,
	124, 124, 124, 239, 239, 239, 239, 236, 236, 126,
	126, 123, 123, 131, 16, 16, 16, 109, 109, 17,
	18, 18, 18, 18, 461, 461, 140, 140, 138, 138,
	139, 139, 234, 234, 19, 19, 19, 244, 244, 249,
	249, 249, 252, 252, 252, 252, 222, 223, 224, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 449, 449, 449, 450, 450, 450,
	450, 450, 277, 277, 277, 277, 414, 414, 429, 429,
	429, 430, 430, 428, 428, 428, 428, 428, 432, 432,
	433, 433, 431, 431, 431, 431, 435, 435, 436, 436,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 417, 417, 417, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 440, 440, 441, 441, 442, 442, 442, 442,
	443, 443, 443, 443, 443, 444, 444, 444, 444, 444,
	444, 444, 445, 445, 446, 446, 3, 2, 395, 395,
	396, 396, 397, 397, 397, 397, 398, 398, 399, 399,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	31, 31, 31, 31, 31, 31, 276, 276, 272, 272,
	272, 274, 274, 275, 275, 275, 416, 416, 416, 410,
	410, 410, 412, 412, 411, 411, 411, 413, 413, 418,
	418, 418, 418, 418, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 421, 421, 419, 419, 159,
	159, 422, 422, 427, 427, 423, 423, 424, 424, 426,
	426, 426, 425, 425, 425, 425, 314, 314, 178, 178,
	68, 68, 69, 69, 69, 211, 211, 211, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	55, 55, 56, 29, 29, 29, 29, 57, 57, 58,
	32, 32, 32, 32, 32, 32, 65, 65, 65, 64,
	64, 63, 63, 63, 63, 63, 63, 34, 35, 36,
	462, 462, 462, 59, 59, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 66, 66, 61, 61, 60, 60, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 33,
	33, 33, 33, 33, 33, 25, 394, 394, 394, 54,
	54, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 76, 76, 351, 352, 352, 352,
	352, 352, 352, 338, 338, 339, 339, 339, 339, 339,
	339, 328, 328, 328, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 302, 302, 302, 302, 306, 306, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 305, 305, 305,
	307, 307, 307, 307, 307, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 309, 309, 309, 309, 309, 309, 309, 309, 337,
	337, 311, 311, 310, 310, 310, 331, 331, 332, 332,
	332, 329, 329, 329, 330, 330, 315, 315, 315, 315,
	315, 315, 316, 333, 317, 317, 318, 318, 318, 318,
	318, 318, 319, 319, 320, 320, 320, 322, 322, 327,
	327, 326, 326, 326, 326, 326, 326, 323, 323, 323,
	323, 323, 323, 324, 324, 324, 325, 336, 336, 336,
	336, 336, 312, 46, 46, 52, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	372, 372, 377, 377, 266, 266, 267, 267, 53, 53,
	53, 53, 53, 165, 165, 373, 373, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 374, 374, 376, 376,
	340, 340, 368, 368, 367, 367, 366, 366, 366, 366,
	366, 366, 366, 349, 349, 350, 350, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 344, 344, 344, 343,
	343, 345, 345, 348, 348, 348, 365, 365, 364, 364,
	341, 341, 341, 378, 378, 378, 378, 378, 100, 100,
	342, 342, 342, 379, 346, 346, 347, 347, 347, 387,
	388, 386, 386, 386, 386, 386, 166, 166, 166, 370,
	370, 370, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	101, 101, 101, 102, 102, 321, 321, 353, 353, 353,
	353, 353, 457, 457, 457, 354, 354, 354, 354, 354,
	354, 448, 448, 447, 447, 447, 355, 355, 356, 356,
	356, 357, 357, 359, 359, 273, 273, 360, 360, 361,
	361, 358, 358, 358, 362, 362, 391, 391, 391, 390,
	390, 71, 71, 71, 71, 73, 73, 72, 72, 80,
	80, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 70, 70, 286, 286, 75, 210,
	210, 210, 271, 271, 384, 384, 385, 385, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 381,
	381, 380, 380, 382, 382, 74, 74, 74, 74, 160,
	160, 22, 22, 77, 77, 415, 415, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 389, 389, 389,
	24, 24, 81, 82, 82, 82, 285, 285, 285, 285,
	85, 85, 85, 85, 237, 237, 238, 238, 86, 86,
	86, 86, 87, 87, 87, 87, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 120,
	258, 258, 257, 257, 256, 256, 256, 259, 259, 259,
	259, 300, 300, 300, 84, 84, 84, 96, 96, 91,
	91, 94, 94, 94, 94, 97, 97, 98, 98, 99,
	99, 92, 93, 43, 44, 44, 44, 44, 45, 89,
	89, 89, 90, 90, 90, 90, 111, 111, 464, 464,
	464, 88, 465, 103, 104, 104, 106, 106, 106, 107,
	107, 107, 108, 108, 108, 263, 263, 263, 263, 263,
	263, 263, 105, 105, 105, 114, 114, 118, 118, 118,
	118, 117, 117, 117, 117, 213, 213, 218, 292, 292,
	194, 194, 214, 214, 219, 219, 219, 220, 220, 221,
	221, 221, 221, 221, 216, 216, 215, 215, 217, 181,
	181, 181, 181, 179, 179, 179, 179, 179, 179, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 177, 177, 290, 290, 290, 290,
	289, 289, 289, 122, 122, 127, 127, 129, 129, 129,
	129, 129, 129, 129, 129, 132, 196, 196, 466, 466,
	150, 150, 151, 151, 151, 151, 152, 152, 152, 152,
	152, 154, 154, 154, 155, 155, 155, 155, 155, 155,
	156, 157, 157, 153, 153, 153, 175, 175, 232, 232,
	233, 233, 231, 231, 235, 235, 128, 128, 130, 130,
	130, 130, 135, 135, 136, 136, 137, 137, 297, 297,
	141, 141, 141, 143, 142, 142, 142, 142, 142, 142,
	144, 144, 451, 452, 452, 453, 453, 453, 453, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 455,
	455, 456, 456, 145, 145, 147, 148, 148, 146, 146,
	146, 146, 146, 146, 158, 158, 149, 161, 161, 161,
	161, 162, 162, 119, 119, 119, 119, 119, 119, 119,
	119, 255, 255, 164, 164, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 190, 190, 190, 190, 190,
	190, 167, 167, 167, 167, 167, 167, 167, 113, 113,
	191, 191, 191, 134, 133, 133, 116, 116, 115, 115,
	192, 192, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 184, 184,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 189, 189,
	189, 189, 189, 463, 463, 186, 186, 185, 185, 185,
	185, 185, 185, 110, 110, 110, 110, 110, 298, 298,
	298, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 67, 67, 203, 203, 112, 112, 201,
	201, 202, 204, 204, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	174, 174, 174, 205, 205, 193, 193, 121, 206, 206,
	207, 208, 208, 209, 209, 212, 225, 225, 225, 226,
	226, 226, 226, 176, 176, 176, 227, 227, 227, 227,
	169, 169, 168, 168, 168, 170, 170, 170, 170, 171,
	171, 467, 467, 230, 230, 229, 229, 228, 228, 228,
	228, 228, 228, 240, 240, 195, 195, 198, 198, 197,
	199, 241, 241, 246, 246, 246, 246, 243, 243, 247,
	247, 247, 247, 250, 250, 251, 251, 251, 248, 248,
	248, 248, 245, 245, 245, 294, 294, 294, 294, 253,
	253, 262, 262, 260, 260, 261, 261, 254, 254, 313,
	313, 313, 268, 268, 269, 269, 270, 270, 264, 264,
	264, 264, 265, 265, 291, 291, 287, 287, 293, 293,
	288, 288, 295, 295, 296, 296, 296, 296, 392, 392,
	393, 393, 393, 334, 334, 403, 403, 335, 335, 404,
	404, 406, 406, 401, 401, 402, 402, 405, 405, 47,
	407, 407, 408, 408, 409, 409, 409, 409, 48, 49,
	49, 49, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 284, 284, 284, 284, 284, 284, 281, 281,
	281, 281, 281, 281, 282, 282, 282, 459, 460,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 2, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 3, 5, 5,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 5, 3,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 2, 1, 11, 12, 12, 13, 13, 0, 1,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	2, 3, 3, 3, 3, 4, 5, 3, 3, 4,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 6, 1, 4,
	5, 5, 6, 0, 1, 0, 3, 1, 1, 0,
	2, 0, 8, 9, 0, 2, 0, 1, 2, 0,
	2, 1, 1, 1, 1, 4, 3, 6, 5, 1,
	3, 5, 4, 8, 10, 9, 2, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 3, 3, 6, 5,
	4, 4, 5, 5, 8, 4, 5, 7, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 3, 3,
	3, 4, 5, 5, 3, 7, 6, 5, 2, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 5, 0,
	1, 2, 0, 1, 0, 1, 1, 2, 5, 3,
	4, 4, 4, 4, 4, 4, 3, 7, 6, 8,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	3, 1, 3, 8, 8, 8, 11, 12, 15, 0,
	3, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 8, 5, 1, 1, 1, 1, 1,
	4, 4, 4, 4, 1, 3, 1, 1, 2, 2,
	4, 4, 3, 3, 3, 3, 3, 4, 3, 5,
	5, 5, 4, 4, 4, 4, 3, 2, 2, 6,
	2, 4, 3, 3, 4, 4, 5, 8, 6, 3,
	4, 4, 2, 4, 3, 2, 4, 5, 6, 2,
	6, 6, 3, 3, 4, 2, 4, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 0, 1, 2,
	1, 2, 4, 4, 5, 0, 1, 0, 3, 0,
	2, 4, 4, 2, 3, 4, 4, 5, 3, 3,
	4, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 0, 2, 2, 2, 2,
	2, 2, 0, 1, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 2, 6, 0, 1,
	0, 3, 0, 1, 0, 2, 2, 4, 1, 2,
	2, 2, 2, 2, 0, 2, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 2, 2,
	1, 1, 1, 1, 3, 1, 1, 1, 4, 5,
	1, 2, 3, 1, 1, 2, 2, 4, 0, 1,
	2, 6, 1, 3, 2, 4, 1, 1, 1, 1,
	1, 5, 5, 8, 5, 5, 8, 5, 5, 8,
	2, 2, 2, 3, 4, 4, 0, 1, 3, 1,
	0, 3, 1, 3, 1, 3, 4, 6, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	2, 2, 12, 1, 3, 3, 3, 6, 7, 2,
	3, 3, 4, 4, 5, 5, 8, 8, 3, 3,
	4, 3, 4, 1, 3, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 6, 4,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 4, 4, 4, 2, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 6, 3, 4,
	2, 2, 2, 0, 2, 1, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 1,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 1, 0, 2, 4, 4,
	1, 4, 1, 3, 4, 1, 4, 3, 6, 2,
	3, 1, 1, 0, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 5, 1, 3, 2, 3, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	4, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -458, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -71, -22, -23, -24, -81, -85, -86, -87, -83,
	-84, -91, -92, -93, -89, -88, -30, -33, -25, -95,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -132, -459, 12, -126, 34, -76, 190,
	-449, -73, -72, -74, -75, 193, 192, 230, 194, 643,
	367, 644, 223, 72, 443, -94, 446, 447, -464, 305,
	306, 25, 42, 448, 450, 35, 36, 245, 333, 335,
	197, 444, 427, 428, 358, 691, -6, 649, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	760, -208, 20, -103, -465, -208, -10, -9, -4, 649,
	-103, -109, 14, 15, 13, 554, -103, -351, 28, -3,
	117, 76, -8, 11, -265, -276, 97, 545, 198, -274,
	329, 331, 208, -262, -264, -272, 255, 265, 49, 210,
	209, 266, 199, 329, 199, 200, 202, 545, 198, 238,
	237, 329, 331, 270, 643, 199, -146, -295, -281, -283,
	-282, 347, 82, -280, 574, 578, 270, 581, 582, 587,
	337, 90, 52, 367, 568, 359, 368, 220, 523, 569,
	330, 336, 339, 360, 732, 369, 371, 372, 566, 567,
	54, 202, 556, 557, 560, 213, 747, 352, 221, 646,
	266, 755, 750, 752, 341, 753, 513, 605, 443, 462,
	454, 481, 647, 703, 278, 300, 451, 384, 530, 606,
	344, 293, 365, 704, 320, 288, 519, 525, 303, 446,
	607, 608, 609, 539, 246, 276, 705, 452, 297, 299,
	298, 260, 573, 304, 41, 226, 478, 656, 644, 255,
	706, 612, 699, 611, 249, 282, 610, 327, 40, 32,
	613, 248, 542, 108, 275, 707, 375, 527, 614, 499,
	376, 244, 271, 273, 289, 709, 651, 348, 232, 526,
	429, 474, 358, 127, 253, 315, 377, 710, 500, 504,
	711, 531, 334, 314, 617, 712, 713, 378, 655, 283,
	714, 201, 340, 618, 279, 715, 256, 533, 345, 498,
	211, 648, 222, 56, 235, 534, 502, 620, 508, 511,
	430, 374, 431, 716, 717, 718, 719, 356, 354, 622,
	355, 357, 624, 267, 295, 652, 621, 654, 61, 196,
	658, 506, 505, 507, 296, 672, 529, 486, 484, 720,
	721, 349, 217, 722, 723, 485, 23, 724, 725, 537,
	319, 351, 726, 727, 728, 623, 292, 628, 604, 729,
	730, 528, 501, 503, 254, 126, 643, 277, 731, 353,
	524, 362, 659, 650, 338, 290, 629, 733, 380, 291,
	234, 228, 538, 424, 425, 441, 442, 370, 734, 428,
	735, 736, 737, 738, 332, 331, 447, 363, 630, 448,
	272, 301, 653, 739, 631, 632, 740, 741, 264, 247,
	541, 532, 60, 515, 510, 366, 381, 453, 426, 438,
	432, 434, 435, 436, 437, 440, 439, 433, 518, 444,
	274, 241, 633, 634, 635, 427, 636, 12, 294, 346,
	637, 638, 639, 522, 364, 302, 265, 268, 489, 236,
	742, 743, 476, 477, 445, 239, 230, 121, 540, 325,
	698, 329, 382, 287, 59, 242, 53, 744, 745, 269,
	243, 657, 286, 449, 343, 660, 199, 82, -285, -280,
	-283, -284, -281, 347, 231, 58, 95, 63, 62, 82,
	-280, 643, 143, 482, 530, 190, 520, 521, 527, -344,
	528, 237, 424, 366, 240, -300, 199, -258, 239, 519,
	334, 353, 578, 243, 244, 271, 425, 431, 200, 201,
	37, 532, 531, 523, -295, -96, 449, -96, -96, 203,
	449, -111, 232, 194, -146, 231, -66, 82, 307, -66,
	34, 82, -158, -287, -295, 82, -280, 41, 82, 448,
	522, 522, 84, 650, 246, 26, -438, -413, 362, -437,
	-411, 191, 190, 15, 192, 270, 367, 368, 333, 200,
	13, 35, 732, 218, 369, 370, 11, 223, 371, 372,
	238, 14, 373, -439, -416, 385, 386, 387, 388, 389,
	390, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 81, 82, -280, 26, -438, -413,
	362, 370, 424, 445, 424, 424, -267, -266, 383, 508,
	143, -125, 702, -123, -131, -297, -295, -281, -196, -466,
	251, 545, -254, 329, -274, 204, -127, -129, -130, -150,
	-133, 700, -459, -128, -451, -146, -134, 82, 603, -107,
	10, -106, -108, 9, 8, -107, -226, 22, 21, -263,
	-104, -226, -460, 78, -460, -125, -117, 134, -119, -295,
	-163, 100, -173, 33, 29, -172, 347, 231, -164, -200,
	-281, -199, -134, 143, -299, 132, 133, 140, 101, 186,
	-184, -182, -183, -185, -187, -188, 226, 476, 477, 81,
	83, 91, 84, 85, 86, 87, 92, 93, 94, -287,
	-283, -279, -282, 574, 578, 581, 582, 587, -197, -459,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 66, 67, 572, 198, 555, 556, 479, 557,
	13, 558, 559, 560, 645, 220, 564, 103, 55, 324,
	546, 547, 551, -189, 548, 552, 553, 566, 567, 568,
	569, 205, 545, 138, 554, 591, 592, 593, 594, 595,
	596, 597, 598, 600, 601, 599, 575, 576, 577, 579,
	580, 583, 584, 585, 586, 588, 589, 590, 674, 195,
	191, 194, 99, 28, 30, 675, 252, 102, 460, 494,
	563, 21, 25, 214, 197, 482, 212, 142, 207, 215,
	309, 311, 190, 70, 676, 543, 310, 520, 670, 667,
	669, 668, 473, 471, 308, 677, 15, 31, 224, 259,
	678, 469, 192, 250, 106, 107, 679, 46, 45, 8,
	312, 225, 318, 470, 680, 681, 24, 73, 216, 16,
	210, 240, 754, 682, 333, 18, 125, 19, 683, 664,
	666, 665, 204, 119, 200, 746, 68, 257, 684, 458,
	463, 464, 465, 466, 467, 459, 96, 685, 686, 116,
	323, 64, 603, 37, 245, 700, 561, 322, 687, 43,
	42, 493, 497, 492, 321, 509, 117, 22, 549, 550,
	35, 688, 689, 233, 496, 457, 491, 701, 690, 662,
	262, 71, 383, 472, 758, 38, 74, 229, 379, 350,
	47, 97, 20, 258, 69, 39, 570, 122, 759, 475,
	206, 237, 691, 535, 261, 692, 123, 468, 702, 218,
	118, 450, 193, 361, 306, 219, 328, 335, 693, 251,
	124, 521, 661, 694, 565, 34, 223, 305, 456, 208,
	695, 263, 317, 307, 316, 696, 697, 342, 48, 756,
	673, 199, 44, 105, 495, 455, 490, 203, 562, 238,
	313, 9, 49, 36, 516, 14, 373, 72, 75, 483,
	480, 488, 487, 209, 757, 17, 326, 571, 649, 536,
	98, 671, 517, 544, -103, -103, -103, -243, 445, -250,
	-247, 531, 532, -248, -251, -245, -200, 508, 729, 730,
	530, 482, 529, -287, -295, -281, 347, 231, 143, 575,
	576, 577, 103, 479, 555, 591, 546, 548, 543, 547,
	545, 33, 592, 29, 94, 593, 572, 205, 13, 186,
	579, 580, 594, 595, 596, 66, 549, 550, 645, 138,
	100, 597, 598, 92, 600, 601, 324, 554, 67, 599,
	198, 585, 584, 583, 586, 558, 559, 93, 551, 552,
	553, 55, 589, 588, 590, -2, -6, -459, -146, -352,
	-339, -342, -287, -281, -283, -284, 227, -282, 215, -379,
	82, -280, 212, -208, -103, 200, 202, 554, -261, 205,
	-261, 238, 237, 270, -275, 263, -261, -261, 733, 199,
	-274, 109, 109, -77, -146, -415, -410, -416, -260, 205,
	-287, -260, -260, -260, -260, -260, -260, -260, -260, 82,
	-285, -146, 187, -82, -146, -138, 16, 16, 75, 75,
	82, -285, 82, 430, 374, 34, -259, 117, 17, 545,
	198, 199, 237, 238, 202, 270, -259, -346, 16, 119,
	241, 241, 241, 241, 241, 242, 241, -257, 522, 524,
	525, 526, -256, 16, 119, 17, -120, 117, 24, -459,
	-226, -226, -256, 241, 135, -98, 99, -98, 82, 448,
	203, -90, -4, -18, -16, -17, -111, -9, -175, -153,
	28, 6, 7, 109, 34, 34, 81, 59, 34, -61,
	-60, -62, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 304, 34, -394, 76, 187, -334, 508,
	82, -407, -408, -146, 84, 84, 74, 353, 74, 77,
	203, 77, 74, -440, 363, 76, -440, 331, 363, 364,
	265, 329, 202, -440, -440, 331, -440, -440, -440, 350,
	-440, -440, 522, -440, -440, -440, 365, 366, -440, 520,
	202, -440, -440, -440, -440, -440, 79, 74, 77, 353,
	74, 16, 74, 426, 429, 535, 649, -165, 26, -371,
	143, 375, 376, 377, 378, 374, 353, 379, 380, 381,
	241, 382, 199, 522, 374, -6, -123, 77, -230, -459,
	77, -197, -459, 82, -327, -326, -323, -324, -325, -322,
	33, 199, -260, 270, -141, -143, -142, -144, 64, 68,
	70, 65, 66, 67, 523, 71, -270, 28, -133, -459,
	-122, -9, -132, -127, -459, -151, 122, -161, -270, -152,
	72, 204, 73, 28, -153, -154, -155, -156, -157, 6,
	7, 54, -459, -459, -7, -8, 26, 27, -14, -7,
	-12, -14, 26, 27, 26, 27, -7, -227, 24, 35,
	-176, 84, 87, -200, -209, -212, -119, -295, 58, -114,
	26, 27, 65, 57, 63, 62, -223, 89, 16, -290,
	99, 97, 98, 116, -289, 28, 82, 81, -285, 187,
	-119, -167, 119, 100, 117, 118, 102, 129, 128, 139,
	132, 133, 134, 135, 136, 137, 138, 130, 131, 142,
	109, 110, 111, 112, 113, 114, 115, -255, -459, -134,
	-459, 187, -459, 187, 188, 189, 187, -173, -173, -173,
	-173, -173, -173, -173, 81, 81, 81, -459, 187, 187,
	-459, -459, -459, -459, -459, -192, -119, 649, -459, 199,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -203, -119, -459, -459, -463,
	-459, -463, -463, -186, -463, -459, -186, -186, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -186,
	-186, -186, -459, -254, -254, 16, -138, -139, -146, -149,
	-295, 77, -244, -249, 533, 535, 445, -248, -248, -294,
	-287, 81, 33, 143, -350, 109, 120, 34, 187, -208,
	78, 77, -302, -306, -308, -307, -309, -304, -305, -67,
	486, 484, 480, 479, 482, 485, 143, 483, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 34,
	226, 476, 477, 478, 660, 500, 501, 502, 503, 504,
	505, 506, 507, 454, 481, 647, 455, 456, 457, 458,
	459, 460, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, -302, -302, -302, -302, -302,
	-286, -379, 82, -285, 76, -226, -263, -287, -146, -276,
	208, -274, 82, 100, 82, -145, -287, -295, -158, -261,
	264, -419, -418, -410, -413, 673, -261, -275, -410, 269,
	267, 268, 77, 203, 77, 203, 79, -138, 29, 74,
	-140, -146, 82, 82, -145, -158, -412, -410, -413, -159,
	-287, -295, -296, -295, -278, -283, -284, 674, 195, 26,
	191, 194, 99, 28, 30, 675, 252, 102, 460, 143,
	575, 576, 577, 494, 563, 21, 25, 214, 103, 197,
	479, 482, 212, 142, 207, 215, 309, 311, 555, 591,
	190, 70, 676, 546, 548, 543, 547, 310, 545, 520,
	670, 667, 669, 668, 473, 471, 308, 33, 677, 15,
	592, 31, 224, 259, 27, 678, 136, 469, 192, 602,
	250, 106, 107, 679, 46, 45, 8, 29, 312, 225,
	94, 318, 593, 470, 680, 681, 24, 73, 216, 16,
	210, 240, 754, 682, 333, 18, 572, 125, 19, 683,
	664, 666, 665, 205, 204, 119, 200, 746, 68, 257,
	13, 684, 458, 463, 464, 465, 466, 467, 459, 186,
	96, 685, 686, 116, 323, 64, 579, 580, 603, 50,
	37, 245, 594, 595, 700, 596, 561, 322, 687, 43,
	42, 493, 497, 492, 321, 509, 66, 117, 22, 549,
	550, 35, 688, 689, 645, 233, 496, 457, 491, 701,
	690, 662, 138, 262, 71, 100, 383, 597, 598, 92,
	472, 758, 38, 74, 229, 379, 350, 47, 97, 20,
	258, 69, 39, 570, 122, 759, 600, 475, 206, 237,
	691, 535, 261, 692, 123, 601, 468, 702, 218, 118,
	450, 193, 324, 554, 361, 306, 219, 328, 335, 67,
	693, 251, 124, 599, 198, 521, 661, 11, 694, 565,
	34, 223, 305, 456, 208, 695, 263, 317, 307, 316,
	696, 57, 697, 342, 48, 585, 584, 583, 586, 756,
	65, 558, 559, 673, 199, 44, 105, 495, 455, 490,
	203, 562, 238, 93, 313, 9, 49, 36, 516, 14,
	373, 72, 75, 551, 552, 553, 55, 483, 480, 488,
	589, 487, 588, 590, 209, 757, 104, 17, 326, 571,
	649, 536, 98, 671, 517, 14, 192, 77, 81, -238,
	82, -285, 81, -238, -237, -238, -237, 241, -259, 81,
	-299, -119, -261, -261, -146, -146, -146, -146, -146, -146,
	-259, -259, -259, -259, -256, 16, -256, -259, -295, -295,
	-119, -173, -410, 547, 134, -259, -295, -99, -97, 217,
	-97, -99, 82, 82, 448, -90, 38, 28, 28, 82,
	-61, -61, 81, -61, 77, 109, -61, -175, 78, -192,
	-287, -392, 746, 77, -409, 28, 535, 536, 509, -442,
	199, 240, 237, 74, -442, -437, 370, -412, -411, -410,
	-440, -441, -287, -440, -440, -440, 522, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -416, -442, 333, 77,
	-442, -412, -410, 203, -374, -376, 441, 442, 536, 537,
	452, 374, 374, 374, 374, 374, 374, -138, -138, 203,
	252, -131, 28, -229, -228, -288, -281, -283, -284, 227,
	-287, -278, -466, -327, -324, -323, -325, 482, 530, 142,
	542, -146, -410, -159, -129, -129, -127, -129, 64, 64,
	64, 69, 64, 69, 69, 64, 64, -142, -297, -270,
	77, -460, -460, -460, -9, -459, -297, -161, -270, 200,
	200, 200, 102, 16, 52, 26, 102, 16, 52, 26,
	102, 16, 52, 26, -116, -115, -118, 134, -119, -295,
	-173, -239, 96, 14, 119, 77, 23, 77, -225, 30,
	31, 187, -174, 59, 84, 87, -239, 77, -117, -146,
	-119, -119, -119, -190, 92, 100, 93, 94, -289, 227,
	134, -296, -288, -283, -281, 347, 231, -278, -173, -191,
	-197, -134, 88, 119, 117, 118, 102, -173, -173, -173,
	-173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
	-173, -173, -298, 82, 81, 143, 82, -288, -115, -288,
	-172, 226, 476, 477, 92, -172, -287, -287, -105, 26,
	27, -288, 523, -288, -105, -105, -105, -105, -105, 77,
	-460, -115, -115, -115, -460, -119, -119, -115, -173, -115,
	-200, 81, -115, -200, 81, -115, -173, 561, 562, 563,
	-115, -115, -105, -201, -202, 104, -200, -281, -284, 347,
	231, -115, -460, 84, -179, -180, 652, 661, 662, 664,
	667, 660, 659, 658, 656, 655, 654, 657, 653, 671,
	670, 669, 668, 666, 665, 663, -179, -179, -181, 226,
	478, 476, 477, -115, -116, -115, -115, -460, -460, -118,
	-115, -118, -115, -115, -460, -460, -460, -460, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-460, 84, -148, 96, -146, -122, -146, -138, -461, 16,
	75, -461, 77, 187, -247, -250, 77, 534, 536, 537,
	-244, -319, -320, 142, 74, 95, 81, -119, -288, -296,
	-226, -370, -339, -340, -341, -342, -363, 215, -378, 206,
	208, 210, 209, 49, -343, 216, 200, 50, -303, -329,
	515, 516, -311, 76, -310, 76, -67, 480, 479, 482,
	-310, 480, 487, -310, 487, 487, -310, -310, -310, 480,
	76, 76, -311, -311, -311, -331, 76, -331, 475, -332,
	76, -332, -332, -332, -332, -303, -303, -303, -303, -303,
	-379, -119, -227, -291, 75, -230, 202, 733, -327, 29,
	-327, -68, 252, 221, 187, 76, -159, 255, 256, -414,
	77, 33, -420, 330, 84, 205, -146, 231, -146, -146,
	-410, -410, -416, -389, 219, 214, -146, 77, 77, 187,
	712, 712, -146, 77, 81, 82, 82, -175, -347, 16,
	119, -259, -146, -175, -113, 227, 75, -463, -460, 450,
	451, 82, -173, 38, 38, -60, -172, -287, 78, -393,
	204, 554, 81, -408, -297, 508, 536, -443, 134, -287,
	-442, -443, -446, 649, 203, 78, 77, -440, -443, 350,
	333, -443, 16, -373, -375, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 77, 109, 109, 453, -377, 24,
	-372, 649, -372, 81, -173, -133, -460, 77, 187, -197,
	34, -349, -350, -349, -349, -80, -385, -78, -383, 195,
	192, 191, 266, 197, -322, 555, 249, 248, 282, 283,
	73, 35, 196, 193, -70, -79, 230, 288, 234, 289,
	194, 229, 290, 228, 291, 649, 286, 753, 513, 605,
	606, 639, 90, 609, 246, 41, 200, 619, 612, 542,
	615, 616, 375, 614, 618, 211, 622, 621, 623, 625,
	626, 627, 339, 630, 631, 632, 247, 633, 634, 635,
	364, 640, 9, -420, -426, 74, -136, -135, 74, 75,
	-137, 74, -135, 64, 64, 64, -233, 76, -297, -127,
	-460, -235, -287, -161, -297, -459, -459, -459, -173, -173,
	119, -173, -173, 119, -173, -173, 119, -460, 77, 187,
	77, -236, 40, 39, -287, 510, 60, -176, -176, -212,
	-253, 24, 16, 55, 55, -124, 16, -223, -223, 92,
	93, 94, 187, -459, -191, -173, -173, -173, -113, 99,
	-460, -460, -116, -115, -115, -115, -115, -115, -119, -460,
	-460, -460, 77, 75, 28, -460, 75, 119, -460, 16,
	16, -460, 16, 16, -460, -460, 16, -173, -173, -173,
	-460, -460, -115, -204, -202, 106, -119, -460, -460, -460,
	-460, -460, 77, 77, 16, 77, -460, -460, -460, -460,
	-213, 570, -213, -460, -460, -460, -460, -460, -213, -213,
	-213, -213, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -234, 122, -146, 34, -234,
	75, -122, -122, -149, -295, 134, -249, -252, 538, 535,
	541, 82, 81, 143, 81, 187, -227, -355, -369, 77,
	122, 753, 513, 605, -322, 606, 639, 90, 609, 246,
	41, 200, 619, 612, 542, 615, 616, 375, 614, 618,
	211, 622, 621, 623, 625, 626, 627, 339, 630, 444,
	631, 632, 247, 633, 634, 635, 364, 640, 9, 649,
	76, -348, -286, -378, 82, -280, 50, -343, -345, -343,
	-343, -343, -348, 82, -280, -348, 50, 715, 92, 100,
	-318, -320, 143, -315, -316, -333, -336, -312, 28, 754,
	518, 218, -342, 482, 530, 33, 74, 513, 206, 50,
	49, 210, 90, -330, 517, 84, 84, 581, -310, 487,
	-310, -310, -310, -310, -310, -337, 81, -337, 84, -331,
	84, 78, 74, -287, 28, -146, 673, -69, 13, 14,
	15, -287, -395, -396, -397, -287, 119, 257, 258, 74,
	-429, 361, -418, 331, 340, 99, 21, 649, -450, 100,
	203, 203, -146, -410, -287, 74, 74, -238, -162, 17,
	82, 82, -256, -259, -173, -413, 243, 244, -173, -173,
	-147, 96, -409, 203, 187, 187, -443, 203, 352, -412,
	-287, 16, 16, 350, 16, -412, 77, 109, 109, 109,
	109, 109, 109, 109, 109, 109, -376, 76, 76, 384,
	535, -228, -288, -349, 82, 81, 143, 82, 81, 143,
	81, -384, 77, -385, 195, 192, 282, 283, -383, -271,
	-343, -391, -390, -341, -342, 122, 207, 215, 215, 212,
	-271, -343, 206, 216, 122, 215, 212, -271, 200, -349,
	-271, 482, 142, 203, 37, 37, 364, 122, 364, 122,
	-349, -271, 207, -343, -268, 215, -269, 203, 28, 287,
	122, 122, 122, 122, 122, 122, 122, 122, 292, 673,
	-349, -349, -349, -349, -349, -349, -349, -349, 611, 611,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -353, -447, 81, -457, 90, 270, 339,
	82, -280, -278, 84, 86, 85, -349, -349, -160, 193,
	276, 272, -119, 76, -119, -231, -287, -233, -460, 77,
	-161, -231, -231, -231, 99, 203, -459, 99, 203, -459,
	99, 203, -459, -270, -118, 134, -296, 81, 77, 81,
	81, 511, 61, -146, -162, 602, -122, -117, 134, -288,
	-116, -113, 99, -173, -460, -460, -460, -460, -460, -460,
	-301, 143, 479, 482, 226, 478, 471, 469, 468, 470,
	498, 484, 515, 476, 516, 660, -298, -301, -298, -173,
	-173, -173, -173, -173, -173, 16, 16, 16, 646, -208,
	108, -119, 105, -173, -173, -173, -173, -287, -218, -459,
	-213, -213, -213, -213, -213, -214, -213, -214, -214, -214,
	-214, -214, -214, -214, -214, -214, -214, -214, -169, -170,
	34, -168, -9, -459, -171, -467, 55, 59, -459, -241,
	-246, -200, -281, -284, 227, -162, -122, -162, -162, 187,
	535, 539, 540, -369, 21, -349, -349, -349, 530, 482,
	142, -349, -349, -349, -349, -349, 611, 611, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, 445, -349, -349, -349, -349,
	-349, -349, -353, -447, -349, -349, 673, -365, -364, 82,
	-285, 206, 49, -378, -348, -348, -348, -348, -348, -100,
	-286, 92, -459, 755, 84, -146, 34, 82, 143, 81,
	-172, 133, -299, -164, -183, -459, 93, 94, 546, 547,
	551, 548, 552, 553, 566, 567, 568, 569, 543, 549,
	550, 14, 50, 50, 50, 81, 78, 78, 78, -310,
	78, 77, 78, 77, 78, 77, -166, 707, 708, -146,
	-222, -230, 84, 74, 78, 77, -302, -287, -287, -287,
	272, -432, 649, 336, -430, -428, 342, 343, 344, 345,
	346, -413, 341, -420, 338, 81, 82, 81, 672, 706,
	727, 699, 29, -146, -410, -232, 76, -231, -232, -119,
	-175, -234, 199, -412, 134, 134, -287, 203, -412, 350,
	-445, 649, -412, -412, 16, -412, -375, 81, 81, 81,
	84, 81, 84, 84, 84, 84, -138, -138, 81, 35,
	82, 81, 143, -78, 195, 192, 282, 283, 76, -338,
	82, -285, -348, -264, 208, 206, -459, 82, -286, -286,
	-286, -287, 50, 50, -235, -286, -286, -287, -286, 33,
	279, 280, 281, 82, 34, -349, 482, -235, 26, -235,
	26, 33, 336, 284, 285, -338, -286, -287, -146, 216,
	212, -286, -235, 26, 84, -235, -287, -235, 26, -235,
	26, -235, 26, -235, 26, 641, -353, -119, -353, -457,
	-457, 81, 81, 81, -349, -349, -102, 642, 217, -457,
	81, -102, -457, -447, 81, -101, 217, 220, 222, -353,
	-353, -353, -457, -457, -457, -457, 81, -354, 33, 613,
	474, 608, 629, 607, 82, 92, 81, 81, -457, 33,
	-457, 33, -457, -353, 636, -457, -459, -425, 248, 249,
	203, 277, 100, -422, 752, 273, -231, 78, 77, -151,
	-287, -460, -460, -460, -173, -173, -173, -173, -173, -173,
	-173, -173, -173, -297, 187, 525, -287, -317, -318, -205,
	18, -223, -460, -173, -214, -214, -214, -214, -214, -460,
	-311, -311, -311, -311, -332, 475, -311, 459, -311, 459,
	-460, -460, -460, -460, 24, 24, 24, 24, -460, -173,
	-173, -173, -459, -112, 565, -119, 77, 77, -460, -460,
	-292, 82, -240, 74, -240, -241, -270, -9, -460, -229,
	-171, -459, 11, 55, 59, 649, 199, -195, -198, -466,
	-235, -162, 77, -350, -350, -350, -350, -208, -162, -356,
	-357, -360, -359, 123, 620, 687, -353, -353, -353, -349,
	34, -349, -457, -457, 81, 81, 81, -349, -349, -102,
	-457, 81, -102, -457, -447, 81, -101, -353, -353, -353,
	-457, -457, -457, -457, 81, -354, 82, 92, 81, 81,
	-457, 33, -457, 33, -457, -353, 636, -457, -459, 641,
	78, 77, -311, -311, 50, -345, 76, -173, 28, 76,
	82, 143, 81, -172, 81, -173, -189, 81, 84, 84,
	76, -224, 28, -450, -146, -398, -399, -400, 90, 648,
	100, 259, 260, 217, 261, 262, 263, -397, -302, -302,
	-302, -422, -435, -436, -434, 339, 359, 360, 347, -433,
	-431, 354, 355, 356, 357, 99, 81, 81, 81, -421,
	330, 99, 339, 21, 28, 21, 28, 81, 81, 81,
	81, 84, 75, -231, -259, -317, -146, -445, -412, -445,
	333, -412, 78, 78, -338, -210, 220, 221, -302, -302,
	-291, -345, 50, -380, -382, 122, -286, 707, 708, 707,
	708, 34, 192, 745, 715, -338, -349, -298, 34, 364,
	364, 364, 364, -210, -269, 203, 50, -286, 203, 364,
	364, 96, 649, 81, 81, 610, 624, -448, -447, -314,
	90, 74, -159, 277, -426, 74, -178, -172, -183, -172,
	78, -287, 77, 77, 77, 134, -459, -401, -257, -206,
	19, 21, -317, 82, -317, 82, -173, -173, -173, -173,
	-460, -460, -460, -173, -460, 81, -173, -173, -194, 122,
	32, -240, -297, -460, -171, -459, -460, -460, 77, -197,
	-459, -460, -208, -246, -119, -119, -119, -119, -226, -361,
	628, -459, 525, 617, 50, -298, -349, -321, -447, 81,
	81, 81, 610, 624, -448, -367, -366, 75, 211, 90,
	614, 632, 745, 715, -364, -225, -225, -348, -348, -231,
	-460, -459, -231, -460, 78, 78, -365, -9, -222, 24,
	-223, -400, 81, 263, 259, 263, 263, 263, 263, 264,
	-426, -417, 90, 337, -434, 348, 713, 332, 361, 84,
	84, 121, 35, 36, -431, 84, 84, 84, 84, -428,
	21, 649, -420, 338, 81, 81, 338, 81, 81, 330,
	-450, 41, 78, -401, -444, 28, -445, -444, 350, 78,
	82, -303, -303, 76, -348, -348, -460, 77, -287, 33,
	33, -210, -298, -298, -286, -287, -286, 203, -286, -459,
	199, 77, -460, 327, 81, 366, -160, -427, -180, -173,
	-173, -173, -452, -453, -288, 720, -402, 43, -404, 44,
	-216, 571, -207, -119, -193, -121, -119, -460, -460, -460,
	-460, -110, 119, 649, -460, -460, -208, 21, 50, -233,
	-171, -9, -459, -198, -460, -226, -358, 637, 84, -173,
	-459, -459, -273, 266, -298, -460, -366, -447, -349, 81,
	-349, -349, 78, -328, 757, 756, -173, 78, 78, -222,
	-224, 250, -224, 41, 41, 255, 256, -425, 81, 81,
	33, 349, 186, 33, 84, 186, 573, 338, 81, 82,
	339, 339, 21, -173, -402, -410, -444, -365, -291, 76,
	-382, 55, -173, 142, 142, 203, -286, -380, -146, -447,
	-222, -425, 132, -423, 274, -460, -460, -460, -460, 77,
	-302, 24, 81, 604, -405, 48, -403, -335, 47, 21,
	-215, -217, -287, 77, -460, 647, 71, 650, -219, 124,
	123, -192, 14, -9, -381, -459, 21, -460, -231, -173,
	-459, 109, 84, 81, 81, 218, -460, -368, -367, -277,
	649, -9, 251, -27, -4, -16, -17, -18, -19, -21,
	-71, -22, -23, -28, -29, -24, -81, -85, -86, -87,
	-83, -94, -92, -93, -89, -88, -32, -34, -35, -37,
	-40, -41, -38, -39, -36, -30, -33, -42, -25, -43,
	-44, -45, -50, -51, -31, -52, -46, 103, 205, 444,
	308, 319, 320, 321, 82, 324, 326, 322, 323, 318,
	328, 443, -314, 84, 33, 84, 33, 351, 339, 28,
	84, -313, 204, 649, 78, 76, -365, 235, -349, -298,
	-286, -460, -70, 649, -27, -314, 186, -424, 275, -178,
	-460, -453, -454, 604, 29, 726, 525, 81, -404, 21,
	-406, 45, 46, 81, 77, 28, -121, 61, 648, 651,
	-460, -220, 102, -221, 121, 573, -177, 84, 186, -220,
	-241, -460, -380, -359, -460, -460, -231, 84, -146, -328,
	212, 278, 508, -222, -211, 253, 254, -222, -119, -55,
	-56, 104, -119, 82, -65, -293, 311, 312, 313, -288,
	82, 82, -54, -27, 80, -54, -119, 82, 82, -462,
	16, 58, -173, 108, -54, 327, 656, 656, 81, -233,
	84, 331, -368, -365, 78, 236, -298, 287, -222, 327,
	-172, -178, -427, -270, 81, 604, -459, 525, 81, 21,
	21, -217, -218, 61, -221, 126, 127, 251, 126, 127,
	-172, -460, 617, 50, -460, 76, 350, 212, 212, -277,
	-222, 82, 82, -55, 108, 106, -56, -119, 105, 309,
	310, 314, -302, 77, 760, 443, 321, 324, 326, 760,
	327, 82, 16, 760, -222, -242, 34, 43, 124, 33,
	336, 26, -413, 78, -368, -459, -222, -180, -427, -297,
	-455, -456, 376, 92, 33, 81, -452, -459, 81, 81,
	649, 99, -179, -459, -273, -231, 350, 350, -224, 108,
	106, 103, -54, 105, -54, 24, 24, 24, -317, -288,
	108, -27, 108, -54, -54, -54, -119, 325, -54, 96,
	108, -27, -241, 8, -368, -173, 233, -27, -456, 92,
	33, -455, 92, 33, 74, 74, -172, -460, -452, 650,
	-221, -173, -459, 78, -20, -26, -19, -25, -16, -17,
	-18, 443, 649, 103, -54, 760, -54, 760, -66, 84,
	-9, -64, -63, 84, -66, 316, 100, 317, 82, -319,
	321, 82, 760, 760, 760, 327, -119, 760, -59, 82,
	-222, -413, -460, -460, -222, 74, -172, 74, -172, 679,
	376, 679, 376, 74, -460, 651, -460, -173, -387, -388,
	74, -222, -54, 108, -125, 760, 108, 760, 108, 106,
	-57, -58, 107, -27, 77, 315, 33, 108, 108, 325,
	-54, 108, 108, 77, 74, 74, 376, 376, 679, 376,
	-362, 638, -460, -388, 74, -387, 74, 15, 14, 760,
	108, 103, 205, -54, 108, 106, -58, -119, -63, -173,
	82, 321, -119, 760, 324, 326, 82, 74, 74, 84,
	-362, -386, 219, 214, 217, 34, -386, 108, 103, 760,
	205, -54, 105, 82, 108, 108, 376, 679, 213, 33,
	92, 108, 760, -54, 324, 326, 205, 108, 760, 82,
	82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1711, 1212, 1711, 0, 1212, 0, 1212, 0, -2,
	133, 921, 922, 923, 924, 0, 0, 0, 0, 0,
	0, 0, -2, 1176, 1177, 1180, 1177, 1177, 1206, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1318, 2737,
	-2, 1208, 1209, 1210, -2, -2, 0, 53, 0, 60,
	2, 1719, 0, 1225, 1214, 1719, 0, 0, 49, 0,
	0, 1212, 1212, 1212, 87, 88, 0, 119, 0, 121,
	0, 0, 1711, 1212, 0, 0, 0, 1795, 1795, 333,
	1795, 1795, 1810, 0, 1813, 331, 0, 1792, 1808, 1809,
	1811, 0, 0, 0, 1793, 0, 1793, 1793, 1793, 1793,
	1793, 1793, 1793, 1793, 0, 0, 1091, 1408, 1410, 1411,
	1412, 1413, 1822, 1823, 2728, 2729, 2730, 2731, 2732, 2733,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2734, 2735, 2736, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 0, 0, 0, 1096,
	1097, 1098, 1099, 2722, 2723, 2724, 2725, 2726, 2727, 1108,
	1109, 0, 0, 0, 1167, 0, 1167, 1127, 1128, 0,
	1130, 0, 0, 0, 0, 0, 0, 0, 1164, 1142,
	1145, 1149, 0, 1719, 1719, 1164, 1155, 0, 776, 777,
	778, 1172, 1173, 1161, 1174, 1179, 1178, 1187, 1187, 0,
	1178, 79, -2, 0, 1346, 0, 457, 459, 0, 480,
	0, 483, 486, 1414, 0, -2, -2, 1833, 1193, 0,
	0, 1858, 1859, 0, 0, 0, 0, 0, 2595, 231,
	347, 272, 272, 272, 272, 272, 272, 272, 0, 272,
	272, 0, 272, 272, 272, 2611, 272, 0, 272, 272,
	272, 272, 272, 230, 346, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 336, 337, 338, 0, 0, 0,
	2595, 0, 730, 1181, 731, 733, 0, 727, 724, 725,
	0, 80, 0, 67, 81, 1743, 1368, 1369, 1315, 0,
	1319, -2, 0, 1793, 0, 1798, 69, 1305, 1306, 1307,
	-2, 0, 0, 1313, 1314, -2, 1464, 1822, 0, 0,
	1219, 0, 0, 1216, 1222, 0, 1726, 0, 0, 117,
	1213, 47, 48, 2738, 59, 0, 0, 1241, 1296, 0,
	1423, 2293, 1429, -2, 2206, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 2151, 0, 0, 0, 0, 0, 2248,
	1502, 1503, 1504, 1505, 1506, 1507, 2459, 2676, 2677, 1689,
	1693, 1694, 1695, 1696, 1697, 1698, -2, -2, -2, 1674,
	1675, 0, 1687, 2728, 2729, 2731, 2732, 2733, 1760, 0,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 2274, 2337, 2225, 2342, 2170, 2734, 2162, 2735,
	2239, 2366, 2367, 2736, 2282, 2707, 0, -2, 2391, 2330,
	-2, -2, -2, 1570, -2, -2, -2, 2718, 2719, 2704,
	2709, 2232, 2180, 2290, 2331, 2171, 2192, 2211, 2260, 2261,
	2263, 2295, 2296, 2314, 2323, 2341, 2152, 2153, 2154, 2255,
	2256, 2363, 2362, 2361, 2364, 2397, 2395, 2398, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2155,
	2156, 2157, 2158, 2159, 2161, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2172, 2173, 2174, -2, 2179, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2190, 2191, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2207, 2208, 2210, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2226, 2227, 2228, 2229,
	2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2249, 2250, 2251, 2252,
	2253, 2254, 2257, 2258, 2259, 2262, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2275, 2276, -2, -2,
	2279, 2280, 2281, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2291, 2292, 2294, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2324, 2325, 2326,
	2327, 2328, 2329, 2332, 2333, 2334, 2335, 2336, 2338, 2339,
	2340, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2365,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2392,
	2393, 2394, 2396, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 0, 1797, 1797, 0, 104, 2678, 0,
	1767, -2, -2, 1769, 0, 0, 0, -2, -2, -2,
	-2, 2163, -2, 1674, 0, 0, 0, 0, 2151, 2152,
	2153, 2154, 2160, 2162, 2170, 2171, 2175, 2176, 2177, 2178,
	2180, 2189, 2192, 2206, 2209, 2211, 2225, 2232, 2239, 2248,
	2255, 2256, 2260, 2261, 2263, 2274, 2277, 2278, 2282, 2290,
	2293, 2295, 2296, 2297, 2314, 2323, 2330, 2331, 2337, 2341,
	2342, 2361, 2362, 2363, 2364, 2366, 2367, 2378, 2388, 2389,
	2390, 2391, 2395, 2397, 2398, 120, 1711, 0, 122, 0,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 802,
	1816, 1817, 0, 1719, 1225, 0, 0, 331, 0, 0,
	0, 0, 0, 1795, 326, 0, 0, 0, 0, 1795,
	333, 0, 0, 1071, 0, 1072, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	1115, 1090, 0, 1092, 98, 1095, 0, 0, 0, 0,
	1112, 1113, 1116, 0, 1158, 1167, 1118, 0, 0, 1795,
	1795, 0, 0, 0, 0, 0, 1126, 0, 804, 805,
	1167, 1132, 1133, 1167, 1167, 1167, 1164, 0, 1164, 1139,
	1162, 1163, 1167, 0, 0, 0, 1144, 0, 0, 0,
	1152, 1153, 1167, 1157, 0, -2, 1185, -2, 1194, 0,
	0, 1199, 1202, 1203, 1204, 1205, 79, 1201, 1211, 1347,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 482,
	463, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 1346, 0, 0, 1828, 1834,
	1198, 1849, 1850, 0, 1860, 1861, 276, 0, 276, 0,
	0, 0, 0, 198, 272, 0, 200, 272, 272, 272,
	0, 272, 272, 207, 208, 272, 210, 211, 212, 272,
	214, 215, 272, 217, 218, 219, 272, 272, 222, 272,
	272, 225, 226, 227, 228, 229, 345, 276, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 732, 734, 705,
	0, 0, 0, 0, 710, 711, 712, 713, 0, 0,
	716, 717, 0, 0, 0, 65, 66, 0, 0, 0,
	1318, 1316, 0, -2, 926, -2, 681, 682, 683, 0,
	678, 0, 0, 0, 0, 0, 0, 0, 1370, 0,
	0, 1373, 0, 0, 0, 0, 0, 1807, -2, 0,
	0, 0, 0, 1303, 0, 1320, 0, 1322, 0, -2,
	0, 0, 0, 1807, 1326, 1327, 1328, 1329, 1330, 0,
	0, 0, 1466, 0, 57, 58, 1220, 1221, 54, 62,
	63, 55, 1217, 1218, 1223, 1224, 56, 73, 0, 0,
	1720, 1723, 1724, 1725, 1712, 1713, 1716, 0, 0, 73,
	1226, 1227, 1228, 1229, 1230, 1231, 0, 1215, 0, 1242,
	0, 0, 0, 0, 1297, 0, 1300, 1301, 1302, 0,
	1427, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1430, 0, 1444,
	0, 0, 0, 0, 0, 0, 0, 1495, 1496, 1497,
	1498, 1499, 1500, 0, 1690, 1691, 1692, 1232, 0, 0,
	1232, 1232, 1232, 1232, 1232, 0, 1470, 2404, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1232, 0, 1666, 0, 0, 1567,
	0, 1568, 1569, 1571, 1585, 0, 1572, 1573, 0, 0,
	0, 0, 0, 1466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	1581, 1582, 0, 0, 0, 0, 0, 0, 98, 100,
	1408, 0, 105, 107, 0, 0, 2678, 1770, 1771, 672,
	1785, 1786, 1787, 1788, 0, 765, 766, 1783, 0, 1719,
	819, 0, 554, 651, 572, 573, 574, 641, 576, 643,
	0, 643, 643, 1663, 1664, 643, 643, 643, 618, 619,
	620, 621, 622, 624, 625, 626, 627, 628, 0, 0,
	600, 641, 641, 641, 604, 631, 632, 633, 634, 635,
	636, 637, 638, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 646, 646,
	648, 648, 648, 648, 648, 554, 554, 554, 554, 554,
	0, 801, 1026, 1027, 0, 1726, 117, 1814, 1743, 0,
	0, 333, -2, 0, -2, 0, 1403, 0, 0, 0,
	0, 146, 367, 349, 131, 0, 0, 327, 332, 328,
	329, 330, 0, 0, 0, 0, 340, 1087, 1794, 0,
	1079, 96, 1080, 1081, 1082, 1083, 1084, 342, 1085, 1086,
	369, 0, 1409, 1824, 1825, 1826, 1827, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 0, 0, 0, 1100, 1102,
	1106, 1107, 1101, 1103, 1110, 1104, 1111, 1156, 1117, 1168,
	0, 1170, 0, 0, 1346, 1122, 1123, 1124, 1125, 806,
	1131, 1134, 1135, 1141, 1167, 0, 1346, 1140, 1165, 1166,
	1143, 1458, 1146, 1583, 0, 1154, 1175, 1191, 0, 1186,
	0, 1192, 1196, 1195, 0, 1200, 0, 0, 0, 1207,
	458, 460, 462, 481, 0, 0, 484, 485, 487, 0,
	1415, 1830, 0, 0, 1852, 0, 1854, 1856, 0, 0,
	277, 278, 279, 276, 0, 232, 0, 294, 348, 0,
	199, 0, 274, 201, 202, 203, 272, 205, 206, 209,
	213, 216, 220, 221, 223, 224, 344, 0, 0, 0,
	0, 196, 0, 0, 729, 746, 0, 0, 1182, 1183,
	0, 706, 707, 708, 709, 722, 715, 720, 720, 0,
	0, 82, 0, 0, 1745, 1748, 1749, 1750, 1751, 1752,
	1820, 1821, 0, 925, 684, 685, 686, 0, 763, 763,
	763, 677, 0, 379, 1364, 1366, 0, 1361, 1371, 1372,
	1374, 0, 1376, 0, 0, 1379, 1380, 1381, 1350, 0,
	0, 1312, 1463, 1465, 0, 0, 1417, 1324, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 1341,
	0, 0, 0, 1342, 0, 1467, 1468, 1237, 1238, 0,
	0, 45, 0, 1727, 0, 0, 0, 0, 1715, 1717,
	1718, 0, 0, 1700, 0, 0, 70, 117, 117, 50,
	1424, 1425, 1426, 1428, 1445, 0, 1447, 1449, 1298, 1299,
	1243, 0, 1676, -2, 1678, -2, -2, -2, 1435, 1436,
	1460, 1461, 1462, 0, 0, 0, 0, 1458, 1440, 0,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1494, 1598, 1599, 1600, 0, 1685, 0, 1686,
	1492, 0, 0, 0, 1699, 1493, 1681, 1501, 1466, 1233,
	1234, 1683, 1684, 1682, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	1476, 1689, 0, 1476, 1689, 0, 0, 2264, 2376, 2156,
	0, 0, 0, 1672, 1669, 0, 0, 0, 0, 2722,
	2723, 0, 1584, 0, 0, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 0, 0, 0, 1269,
	1270, 1271, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 0, 102, 0, 1407, 0, -2, 0, 0, 94,
	95, 0, 0, 0, 1768, 0, 0, 0, 110, 111,
	106, 1772, 673, 0, -2, 1779, 1689, 1781, 1676, 0,
	1726, -2, 539, 540, 541, 542, 0, 783, 792, 0,
	0, 781, 0, 783, 783, 0, 779, 780, 545, 654,
	652, 653, 575, 0, 605, 0, 643, 643, 1663, 1664,
	607, 643, 643, 610, 643, 643, 613, 616, 617, 623,
	0, 0, 601, 602, 603, 592, 0, 593, 646, 595,
	0, 596, 597, 598, 599, 546, 547, 548, 549, 550,
	800, 0, 296, 0, 0, 0, 0, 0, 126, 1796,
	127, 0, 390, 391, 0, 298, 0, 334, 335, 148,
	0, 0, 350, 0, 137, 0, 534, 535, 0, 1073,
	0, 1075, 339, 1077, 1088, 1089, 1078, 0, 0, 0,
	0, 0, 99, 0, 1169, 1119, 1120, 1121, 1421, 0,
	0, 1136, 1164, 1167, 1159, 0, 0, 1147, 0, 1190,
	1188, 1197, 1343, 0, 0, 464, 465, 466, 488, 0,
	1831, 1832, 1829, 1851, 0, 1855, 1857, 0, 280, 282,
	0, 0, 190, 0, 0, 273, 0, 204, 0, 0,
	0, 0, 0, 728, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1184, 714, 0,
	718, 0, 719, 703, 704, 83, 1744, 0, 0, 1317,
	763, 0, 764, 0, 0, 1034, 928, 929, 1036, -2,
	1032, 1032, 763, 1032, 0, 0, 0, 0, 0, 0,
	966, 763, 1032, 1802, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1024, 1025, 763, 763, 763,
	763, 763, 763, 763, 763, 0, 0, 763, 763, 763,
	763, 763, 763, 763, 763, 763, 763, 763, 763, 763,
	763, 763, 763, 763, 763, 763, 763, 763, 763, 763,
	0, 763, 763, 1028, 1069, 0, 1358, 1365, 0, 0,
	1359, 0, 1360, 1375, 1377, 1378, 1308, 0, 1350, 1304,
	-2, 0, 1354, 1323, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 74, 2472, 0, 77, 0, 0, 1721, 1722, 1714,
	0, 1789, 1790, 1701, 1702, 1421, 0, 0, 1235, 1446,
	1448, 1450, 0, 1466, 1437, 1458, 1441, 0, 1438, 0,
	1432, 1540, 0, 0, 0, 0, 0, 0, 1471, 1538,
	1539, 1541, 0, 0, 0, 1545, 0, 0, 1549, 0,
	0, 1591, 0, 0, 1592, 1554, 0, 0, 0, 0,
	0, 1560, 1711, 0, 1670, 0, 0, 1563, 1564, 1565,
	1566, 1586, 0, 0, 0, 0, 1587, 1588, 1589, 1590,
	1527, 0, 1528, 0, 0, 0, 0, 0, 1534, 1535,
	1536, 1537, 1252, 1252, 1252, 1252, 1252, 1252, 1252, 1252,
	1252, 1252, 1252, 1252, 1579, 0, 0, 1406, 0, 1421,
	0, 1421, 1421, 101, 0, 1416, 108, 109, 0, 0,
	115, 674, 675, 676, 1780, 0, 297, 536, 820, 677,
	0, 763, 763, 763, 0, 763, 763, 763, 763, 763,
	0, 0, 763, 763, 763, 763, 763, 763, 763, 763,
	763, 763, 763, 763, 763, 763, 763, 763, 763, 0,
	763, 763, 763, 763, 763, 763, 0, 763, 763, 0,
	0, 0, 0, 791, -2, -2, 783, 783, 783, 782,
	783, 783, 774, 784, 785, 775, 798, 555, 556, 0,
	558, 559, 560, 561, 562, 563, 564, 565, 0, 0,
	0, 0, 570, 0, 0, 0, 0, 663, 0, 698,
	700, 0, 0, 571, 655, 0, 0, 0, 606, 643,
	614, 608, 609, 611, 612, 0, 639, 0, 0, 594,
	0, 816, 0, 1815, 116, 1743, 0, 0, 392, 393,
	394, 1404, 0, 299, 300, 0, 0, 0, 0, 0,
	158, 0, 368, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 97, 343, 370, 0, 0, 1105, 1129, 0,
	807, 808, 1346, 1138, 1459, 1148, 1150, 1151, 1344, 1345,
	102, 0, 1853, 0, 0, 0, 0, 0, 0, 292,
	275, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 1746, 1747, 0, 690, 691, 692, 693, 694, 695,
	696, 927, 677, 1035, 0, 0, 0, 0, 1037, 0,
	783, 0, 0, 936, 937, 0, 1033, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 958, 959, 960, 0, 961, 0,
	0, 0, 0, 0, 0, 0, 1803, 1804, 1805, 978,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 763, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1017, 1018, 877, 878, 879, 880, 881,
	893, 894, 895, 882, 883, 884, 0, 0, 382, 0,
	0, 0, 1362, 0, 1367, 0, 1352, 1309, -2, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 1239, 0, 0, 0, 75,
	664, 1728, 1729, 46, 1703, 71, 72, 117, 1244, 1688,
	0, 1439, 0, 1442, 1508, 1252, 1252, 1252, 1252, 1252,
	0, 641, 641, 641, 1648, 641, 648, 1651, 1653, 1654,
	1655, 641, 1657, 641, 1660, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	1562, 1673, 0, 0, 0, 0, 0, 1245, 1246, 1248,
	1529, 1530, 1531, 1532, 1533, 1512, 1253, 1513, 1514, 1516,
	1517, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1753, 1753,
	0, -2, 1735, 0, 1732, 1318, 1741, 1742, 0, 1421,
	1761, 0, 0, 0, 0, 1711, 1421, 92, 93, 0,
	112, 113, 114, 821, 903, 0, 0, 0, 763, 0,
	763, 0, 0, 0, 0, 0, 763, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 0, 0, 0,
	0, 0, 863, 864, 0, 0, 0, 0, 786, 641,
	641, 0, 781, 790, 767, 769, 770, 771, 773, 0,
	799, 557, 0, 0, 568, 0, 0, 669, 670, 671,
	656, 0, 0, 659, 660, 0, 1433, 1434, 1583, 1583,
	1583, 1583, 1583, 1583, 0, 0, 0, 0, 1583, 1583,
	1583, 0, 697, 699, 701, 702, 642, 644, 645, 615,
	629, 0, 630, 0, 649, 0, 803, 817, 818, 0,
	118, 0, 137, 0, 306, 0, 302, 0, 0, 0,
	0, 166, 0, 149, 150, 151, 153, 154, 0, 0,
	0, 147, 0, 352, 0, 355, 356, 357, 0, 0,
	0, 0, 0, 1074, 1076, 0, 0, 1349, 1094, 1422,
	1167, 664, 0, 292, 281, 283, 284, 0, 292, 295,
	191, 0, 192, 194, 0, 193, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 0, 0, 723, 721,
	687, 688, 689, 930, -2, 1032, 0, 0, 0, 1029,
	0, 0, 1814, 781, 1810, 0, 0, -2, 938, 939,
	962, 963, 964, 0, 1039, 0, 0, 0, 0, 944,
	945, 946, 947, 0, 763, 0, 0, 0, 0, 0,
	0, 967, 968, 969, 970, 1029, 0, 0, 974, 0,
	0, 0, 0, 0, 1046, 0, 0, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1023, 980, 981, 982, 983,
	984, 985, 986, 987, 0, 0, 990, 873, 874, 991,
	992, 993, 994, 995, 996, 997, 870, 871, 872, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 885, 886,
	887, 888, 889, 890, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 0, 1021, 0, 386, 383, 384,
	0, 380, 0, 379, 0, 0, 0, 1351, 0, 1321,
	1355, 1418, 1419, 1420, 1331, 1332, 0, 1334, 1335, 0,
	1337, 1338, 0, 1357, 0, 0, 78, 1843, 665, 1708,
	0, 1236, 1509, 1443, 1511, 1515, 1510, 1518, 1523, 1543,
	1643, 664, 664, 1649, 1650, 1652, 1656, 1658, 1659, 1661,
	1547, 1544, 1546, 1548, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 1671, 0, 0, 1576, 1577,
	1250, 1249, 84, 0, 85, 1753, 0, 0, 0, 0,
	0, 0, -2, -2, -2, 2135, 2099, 1739, 1755, 0,
	0, 1711, 0, 0, 0, 0, 0, 1719, 91, 909,
	898, 0, 0, 907, 908, 904, 822, 823, 824, 0,
	763, 0, 827, 828, 830, 831, 832, 0, 0, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 0, 867, 0, 869,
	751, 0, 1716, 1716, 783, 783, 0, 0, 0, 0,
	666, 667, 668, 657, 658, 0, 662, 640, 0, 0,
	0, 0, 116, 136, 0, 117, 307, 308, 0, 0,
	0, 313, 0, 0, 0, 0, 0, 301, 303, 304,
	305, 379, 184, 167, 168, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 0, 0, 155, 156, 157, 351,
	0, 0, 354, 0, 0, 0, 0, 138, 139, 0,
	141, 137, 0, 0, 1137, 1843, 1405, 285, 292, 285,
	0, 195, 748, 749, 0, 932, 1030, 0, 554, 554,
	0, 783, 783, 0, 1061, 0, 965, 940, 942, 941,
	943, 0, 0, 950, 951, 1029, 0, 955, 0, 1040,
	1041, 1042, 1043, 971, 0, 0, 0, 0, 0, 1044,
	1045, 0, 0, 988, 989, 1019, 1020, 0, 891, 1065,
	0, 0, 1070, 381, 1069, 0, 373, 388, 389, 0,
	1363, 1353, 0, 0, 0, 1240, 0, 1845, 1839, 1264,
	0, 0, 1644, 1645, 1646, 1647, 0, 0, 0, 0,
	1556, 1557, 1558, 1593, 1561, 1668, 0, 0, 1711, 0,
	0, 86, 1350, -2, 1733, 0, 0, 1740, 1318, 1757,
	0, 103, 1719, 1762, 1763, 1764, 1765, 1766, 90, 911,
	0, 0, 0, 0, 905, 825, 0, 829, 875, 876,
	833, 834, 865, 866, 0, 750, 754, 0, 763, 0,
	763, 763, 761, 762, 787, 788, 789, 768, 772, 0,
	551, 0, 0, 661, 647, 650, 0, 116, 118, 0,
	118, 309, 310, 311, 312, 314, 315, 0, 0, 0,
	382, 130, 0, 0, 169, 0, 0, 0, 0, 179,
	180, 181, 182, 183, 161, 162, 163, 164, 165, 152,
	0, 0, 353, 0, 360, 362, 0, 361, 363, 0,
	135, 0, 1348, 1845, 187, 0, 285, 189, 293, 931,
	1031, 543, 544, 0, 1814, 0, 1038, 0, 0, 0,
	949, 952, 953, 956, 972, 973, 0, 0, 977, 0,
	0, 0, 1022, 116, 387, 385, 382, 371, 375, 0,
	0, 0, 0, 1383, 0, 2563, 76, 1847, -2, 0,
	68, 0, 1709, 1710, 1704, 1705, 1707, 1550, 1552, 1551,
	1553, 0, 0, 0, 1574, 1575, 1254, 0, 0, 1731,
	1734, 1736, 0, 1756, 1758, 89, 1059, 0, 910, 0,
	0, 0, 0, 0, 826, 868, 755, 756, 0, 758,
	0, 0, 0, 566, 552, 553, 0, 569, 752, 142,
	0, 0, 79, 316, 317, 318, 319, 386, 185, 186,
	170, 171, 0, 173, 174, 0, 0, 0, 365, 0,
	358, 359, 0, 1093, 1799, 286, 188, 0, 0, 0,
	1062, 0, 948, 763, 0, 0, 976, 0, 1048, 892,
	79, 386, 0, 377, 0, 1333, 1336, 1339, 0, 0,
	0, 0, 0, 0, 1839, 0, 1841, 0, 1838, 0,
	1265, 1266, 0, 0, 1559, 0, 0, 0, 0, 0,
	0, 1251, 0, 0, 897, 0, 903, 899, 0, 0,
	0, 0, 757, 759, 760, 0, 551, 123, 753, 124,
	0, 116, 395, 116, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 0, 0,
	0, 0, 0, 79, 0, 79, 0, 0, 0, 440,
	0, 79, 0, 0, 175, 0, 177, 178, 364, 0,
	140, 1350, 0, 0, 752, 0, 0, 0, 0, 957,
	975, 1047, 0, 1024, 116, 1066, 0, 372, 0, 373,
	1806, 1384, 1385, 0, 0, 1386, 0, 0, 1846, 0,
	1844, 0, 0, 1840, 0, 0, 1706, 1594, 0, 1597,
	1247, 1255, 0, 1258, 0, 0, 0, 1294, 0, 1256,
	1754, -2, 0, 0, 900, 901, 0, 906, 0, 567,
	0, 0, 0, 142, 116, 0, 0, 129, 0, 0,
	410, 0, 0, 1816, 0, 0, -2, -2, -2, 1818,
	437, 438, 0, 489, 0, 0, 0, 454, 455, 0,
	441, 0, 456, 320, 0, 116, 172, 176, 366, 42,
	0, 0, 933, 0, 752, 0, 954, 1049, 1067, 116,
	0, 373, 376, 0, 1389, 0, 0, 0, 1848, 0,
	0, 1267, 1268, 1595, 0, 1259, 1260, 1261, 1262, 1263,
	0, 1060, 0, 905, 902, 0, 143, 0, 0, 125,
	118, 396, 397, 0, 0, 79, 411, 0, 79, 0,
	0, 0, 664, 0, 79, 79, 79, 79, 0, 79,
	79, 0, 442, 79, 79, 44, 0, 1800, 1801, 287,
	288, 289, 291, 752, 935, 0, 79, 374, 378, 1382,
	1390, 1391, 0, 0, 0, 1398, 0, 0, 1842, 1836,
	0, 0, 1295, 0, 0, 0, 144, 145, 79, 0,
	79, 408, 0, 79, 0, 0, 0, 0, 672, 1819,
	0, 490, 321, 0, 0, 0, 0, 0, 0, 0,
	323, 116, 43, 0, 934, 0, 2283, 116, 1392, 0,
	0, 1393, 0, 0, 0, 0, 0, 1387, 0, 0,
	1257, 0, 0, 793, 116, 398, 399, 400, 401, 402,
	403, 79, 0, 406, 0, 79, 0, 79, 420, 421,
	422, 79, 429, 431, 432, 433, 0, 435, 436, 424,
	445, 322, 79, 79, 79, 79, 0, 79, 439, 443,
	132, 290, 1063, 1064, 1068, 0, 0, 0, 0, 1394,
	1395, 1399, 1401, 0, 1388, 1596, 914, 0, 794, 795,
	0, 128, 0, 405, 80, 79, 0, -2, 0, 79,
	0, 417, 0, 423, 0, 434, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1400, 1402,
	912, 0, 914, 796, 0, 797, 0, 0, 0, 79,
	0, 409, 413, 0, 0, 79, 418, 0, 430, 425,
	325, 446, 0, 79, 448, 451, 444, 0, 0, 915,
	913, 809, 811, 812, 0, 0, 810, 404, 407, 79,
	415, 0, 79, 447, 0, 0, 1396, 1397, 813, 814,
	815, 0, 79, 0, 449, 452, 414, 0, -2, 450,
	453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 760,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:554
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:605
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:614
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:620
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:642
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:654
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:701
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:741
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:776
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:790
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:800
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:823
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:831
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:839
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:848
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:860
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:870
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:889
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:895
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:907
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:932
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:957
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1002
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1020
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1043
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1056
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1069
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1123
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1144
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1238
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1265
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1285
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1306
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1342
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1366
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1388
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1420
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1435
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1469
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1481
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1494
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1508
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1530
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1563
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1568
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1577
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1650
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1687
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1699
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1703
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1736
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1751
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1767
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1783
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1810
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1824
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1838
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1851
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1861
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1871
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1882
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1915
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1919
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1979
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2093
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2098
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2145
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2149
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2157
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2199
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2211
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2318
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2327
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2331
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2335
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2369
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2378
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2486
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2508
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2512
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2516
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2542
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2577
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2612
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2724
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2740
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2746
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2751
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2756
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2762
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2786
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2790
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2794
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2798
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2802
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2809
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2881
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2907
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2911
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2922
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2926
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2930
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2941
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2945
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2949
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2982
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2990
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3000
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3010
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3084
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3102
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3126
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3190
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3217
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3247
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3267
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3376
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3389
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3419
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3540
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3576
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3720
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3730
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3746
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3758
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3770
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3802
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3826
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3831
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3881
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3890
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3925
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3986
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4039
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4111
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4115
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4141
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4398
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4402
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4408
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4412
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4427
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4446
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.val = ":="
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4498
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4510
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.val = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4565
		{
			yyVAL.val = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4589
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 793:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4613
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4617
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4621
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4625
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.bytes = []byte(nil)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4658
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4673
		{
			yyVAL.val = ""
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4693
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = Restrict
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = Cascade
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = NoAction
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = SetDefault
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = SetNull
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4720
		{
			yyVAL.val = true
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.val = true
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.val = false
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4775
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4791
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4795
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4803
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4871
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4887
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4891
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4915
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4923
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4931
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5042
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5053
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5057
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5070
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5077
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5094
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5104
		{
			yyVAL.val = false
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.val = true
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.val = ""
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5132
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5136
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5141
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5145
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 913:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5154
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5165
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5169
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5174
		{
			yyVAL.val = ""
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5182
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5187
		{
			yyVAL.val = string("")
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5217
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5232
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5252
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5271
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5277
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5292
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 933:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5308
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5325
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5349
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5371
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5385
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5436
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5456
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5466
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5476
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5486
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5496
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5516
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5531
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5547
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5557
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5567
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5583
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5597
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5611
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5625
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5639
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5653
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5679
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5689
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5711
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5725
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5739
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5766
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5776
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5786
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5796
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5806
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5823
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5836
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5865
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5886
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5907
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5926
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5936
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5952
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5956
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5972
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5980
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5984
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5996
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6000
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6004
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6012
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6016
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6020
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6024
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6028
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6036
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6040
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6048
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6052
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6056
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6060
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6064
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6068
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6076
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6080
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6088
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6092
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6096
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6100
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6104
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6108
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6112
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6116
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6120
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = true
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = false
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6140
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6160
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6173
		{
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6175
		{
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6178
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6192
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6206
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6210
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6214
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6218
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6222
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6226
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6234
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6238
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1049:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6242
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6250
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6263
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6267
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6271
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6275
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6279
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6283
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6287
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6292
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6296
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6306
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6312
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6316
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6322
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1066:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6352
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1067:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6378
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1068:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6406
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6436
		{
			yyVAL.val = EventName{}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6440
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6446
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6450
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6462
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6486
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6502
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6506
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6512
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6530
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6550
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6568
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6585
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6602
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6622
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6642
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6657
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6672
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{

		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6695
		{
			yyVAL.val = Restrict
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6699
		{
			yyVAL.val = Cascade
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6705
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6718
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6733
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1093:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6739
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6743
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6759
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6763
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6767
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6771
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6781
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6788
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6798
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6802
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6806
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6810
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6816
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6820
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6828
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6845
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6856
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6879
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6891
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6904
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6917
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6939
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6961
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6971
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6981
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6994
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7004
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7015
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7025
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7035
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7046
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7058
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7070
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7084
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7097
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7108
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7122
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7134
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7144
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7155
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7168
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7178
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7190
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7201
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7214
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7223
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7234
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7245
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7256
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7267
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7281
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7291
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7301
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7311
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7323
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7329
		{
			yyVAL.val = false
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7333
		{
			yyVAL.val = true
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7339
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7343
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7349
		{
			yyVAL.val = ""
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7353
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7357
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7363
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7367
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7375
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = ""
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7385
		{
			yyVAL.val = SessionStr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7389
		{
			yyVAL.val = GlobalStr
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7395
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7407
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7420
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7432
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7436
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7442
		{
			yyVAL.val = &Begin{}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7446
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7452
		{
			yyVAL.val = &Begin{}
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7456
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7460
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7464
		{
			yyVAL.val = &Begin{}
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7469
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7473
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7478
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7482
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7487
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7491
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = &Commit{}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7503
		{
			yyVAL.val = &Rollback{}
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7509
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7523
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7527
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Statement: tryCastStatement(yyDollar[3].val)}
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7543
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7547
		{
			yyVAL.val = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].val.(SelectStatement)}
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7553
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7561
		{
			yyVAL.val = ""
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7565
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7577
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7597
		{
			setAllowComments(yylex, true)
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7601
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7609
		{
			yyVAL.val = Comments(nil)
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7613
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = UnionStr
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7623
		{
			yyVAL.val = UnionAllStr
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7627
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = IntersectStr
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7637
		{
			yyVAL.val = IntersectAllStr
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7641
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7647
		{
			yyVAL.val = ExceptStr
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7651
		{
			yyVAL.val = ExceptAllStr
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7655
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7660
		{
			yyVAL.val = QueryOpts{}
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7664
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7675
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7686
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7697
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7708
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7719
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7731
		{
			yyVAL.val = ""
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7735
		{
			yyVAL.val = AllStr
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7739
		{
			yyVAL.val = DistinctStr
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7745
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7753
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7764
		{
			yyVAL.val = &StarExpr{}
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7772
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7776
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = &StarExpr{}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7800
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7804
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7810
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7815
		{
			yyVAL.val = ColIdent{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7818
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7823
		{
			yyVAL.val = Exprs(nil)
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7827
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7832
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7836
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7845
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7849
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7856
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7879
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7894
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7898
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7902
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7906
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7913
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = Window(nil)
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7924
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7930
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7939
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7979
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7983
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = ColIdent{}
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7992
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7996
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8000
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8006
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8010
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8014
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8024
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8034
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8038
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8053
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8068
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8074
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8088
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8094
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8098
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8103
		{
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8105
		{
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8109
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8119
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8134
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8138
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8142
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8146
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8152
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8156
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8160
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8164
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8168
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8174
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8182
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8192
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8196
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8200
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8204
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8208
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8214
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8220
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8224
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8230
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8234
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8238
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8243
		{
			yyVAL.val = Expr(nil)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8247
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8253
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8257
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8262
		{
			yyVAL.val = Columns(nil)
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8266
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8272
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8276
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8282
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8286
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8292
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8296
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8310
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8314
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8318
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8322
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8328
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8330
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8334
		{
			yyVAL.val = JoinCondition{}
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8336
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8340
		{
			yyVAL.val = JoinCondition{}
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8342
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = JoinStr
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8357
		{
			yyVAL.val = JoinStr
		}
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = JoinStr
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = StraightJoinStr
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = LeftJoinStr
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8377
		{
			yyVAL.val = LeftJoinStr
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = RightJoinStr
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = RightJoinStr
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8389
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8393
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8403
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1382:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8413
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8425
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8435
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8439
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1388:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8444
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8455
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8459
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8463
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1396:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8483
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8487
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = &NullVal{}
		}
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8497
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = &NullVal{}
		}
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8507
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8513
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8517
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8523
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8529
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8533
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8539
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8543
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8551
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8555
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8559
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8569
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8575
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8580
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8584
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8588
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8592
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8597
		{
			yyVAL.val = Expr(nil)
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8601
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8627
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8631
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8635
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = ""
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8651
		{
			yyVAL.val = BoolVal(true)
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8655
		{
			yyVAL.val = BoolVal(false)
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8673
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8677
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8681
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8685
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8689
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8693
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8697
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8703
		{
			yyVAL.val = IsNullStr
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8707
		{
			yyVAL.val = IsNotNullStr
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8711
		{
			yyVAL.val = IsTrueStr
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8715
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = IsFalseStr
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = EqualStr
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = LessThanStr
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = GreaterThanStr
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = LessEqualStr
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = NotEqualStr
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8753
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = Expr(nil)
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8772
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8782
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8797
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8814
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8818
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8840
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8844
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8848
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8852
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8856
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8860
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8864
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8916
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8920
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8924
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8932
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8946
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8950
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8954
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8974
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1510:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8988
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1511:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8992
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8996
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9000
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9004
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1515:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9012
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9016
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1518:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9020
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9024
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9028
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9032
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9036
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9048
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9052
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9061
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9065
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9069
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9073
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9077
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9081
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9085
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9089
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9093
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9097
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9101
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9112
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9116
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9120
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9124
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9128
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1543:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1544:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9140
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1546:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9144
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1547:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9148
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1548:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9152
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9156
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1550:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9160
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1551:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9164
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1552:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9168
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1553:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9172
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9176
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9180
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9184
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1557:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9188
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1558:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9192
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1559:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9196
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1561:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9221
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9225
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9244
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9249
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9253
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9257
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9261
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1574:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9265
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9269
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1576:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9273
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1577:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9277
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9293
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9297
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9301
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9328
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9332
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9336
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9340
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9344
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9348
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = ""
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = BooleanModeStr
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1596:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9376
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9380
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9384
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = Armscii8Str
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9394
		{
			yyVAL.val = AsciiStr
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = Big5Str
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = UBinaryStr
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = Cp1250Str
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = Cp1251Str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = Cp1256Str
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = Cp1257Str
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = Cp850Str
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = Cp852Str
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = Cp866Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = Cp932Str
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = Dec8Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = EucjpmsStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = EuckrStr
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = Gb18030Str
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = Gb2312Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = GbkStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9462
		{
			yyVAL.val = Geostd8Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9466
		{
			yyVAL.val = GreekStr
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9470
		{
			yyVAL.val = HebrewStr
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9474
		{
			yyVAL.val = Hp8Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9478
		{
			yyVAL.val = Keybcs2Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9482
		{
			yyVAL.val = Koi8rStr
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9486
		{
			yyVAL.val = Koi8uStr
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9490
		{
			yyVAL.val = Latin1Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9494
		{
			yyVAL.val = Latin2Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9498
		{
			yyVAL.val = Latin5Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9502
		{
			yyVAL.val = Latin7Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9506
		{
			yyVAL.val = MacceStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9510
		{
			yyVAL.val = MacromanStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9514
		{
			yyVAL.val = SjisStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9518
		{
			yyVAL.val = Swe7Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9522
		{
			yyVAL.val = Tis620Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9526
		{
			yyVAL.val = Ucs2Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9530
		{
			yyVAL.val = UjisStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9534
		{
			yyVAL.val = Utf16Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9538
		{
			yyVAL.val = Utf16leStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9542
		{
			yyVAL.val = Utf32Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9546
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9550
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9554
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9568
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9572
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9576
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9580
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9588
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9631
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9635
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9639
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9649
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9654
		{
			yyVAL.val = Expr(nil)
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9658
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9663
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9667
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9683
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9688
		{
			yyVAL.val = Expr(nil)
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9692
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9710
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9714
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9718
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9722
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9726
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9730
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9734
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9742
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9760
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9764
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9768
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9772
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9788
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9792
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9796
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9800
		{
			yyVAL.val = &NullVal{}
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9810
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9814
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = Exprs(nil)
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9829
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9833
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9839
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = Expr(nil)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9854
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9859
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9863
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9879
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9884
		{
			yyVAL.val = AscScr
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9888
		{
			yyVAL.val = AscScr
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9892
		{
			yyVAL.val = DescScr
		}
	case 1719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9905
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9909
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = ""
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = ForUpdateStr
		}
	case 1728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = ShareModeStr
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9946
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9950
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9974
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9979
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9994
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1738:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9999
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10010
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10019
		{
			yyVAL.val = Columns(nil)
		}
	case 1744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10023
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10029
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10033
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10043
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10047
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10051
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10055
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10059
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10064
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10068
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10078
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10084
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10088
		{
			yyVAL.val = ValTuple{}
		}
	case 1759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10094
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10100
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10110
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10114
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10120
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10123
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10127
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10131
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10137
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10147
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10158
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10171
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10184
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = SetScope_Global
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = SetScope_Session
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10200
		{
			yyVAL.val = SetScope_Session
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10204
		{
			yyVAL.val = SetScope_Persist
		}
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10208
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10214
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10218
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10222
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10232
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10239
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10246
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10250
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10254
		{
			yyVAL.val = &Default{}
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10258
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10267
		{
			yyVAL.val = 0
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = 1
		}
	case 1793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10272
		{
			yyVAL.val = 0
		}
	case 1794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = 1
		}
	case 1795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10277
		{
			yyVAL.val = 0
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10279
		{
			yyVAL.val = 1
		}
	case 1797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10282
		{
			yyVAL.val = ""
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10284
		{
			yyVAL.val = IgnoreStr
		}
	case 1799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10287
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10289
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10291
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10294
		{
			yyVAL.val = struct{}{}
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10296
		{
			yyVAL.val = struct{}{}
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = struct{}{}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10302
		{
			yyVAL.val = struct{}{}
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10305
		{
			yyVAL.val = struct{}{}
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10307
		{
			yyVAL.val = struct{}{}
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10311
		{
			yyVAL.val = UniqueStr
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = FulltextStr
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10315
		{
			yyVAL.val = SpatialStr
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = VectorStr
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10320
		{
			yyVAL.val = ""
		}
	case 1813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10325
		{
			yyVAL.val = ColIdent{}
		}
	case 1815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10327
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10331
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10335
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10345
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10369
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10373
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10377
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10382
		{
			yyVAL.val = string("")
		}
	case 1829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10384
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10387
		{
			yyVAL.val = string("")
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10389
		{
			yyVAL.val = IgnoreStr
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10391
		{
			yyVAL.val = ReplaceStr
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = BoolVal(false)
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10396
		{
			yyVAL.val = BoolVal(true)
		}
	case 1835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10399
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10403
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = BoolVal(false)
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10412
		{
			yyVAL.val = BoolVal(true)
		}
	case 1839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10417
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10451
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10476
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10482
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10497
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10515
		{
			yyVAL.val = LockRead
		}
	case 1855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10519
		{
			yyVAL.val = LockReadLocal
		}
	case 1856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = LockWrite
		}
	case 1857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10533
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10539
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10560
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11487
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11496
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
