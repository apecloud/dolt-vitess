// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const APPLICATION_PASSWORD_ADMIN = 57709
const AUDIT_ABORT_EXEMPT = 57710
const AUDIT_ADMIN = 57711
const AUTHENTICATION_POLICY_ADMIN = 57712
const BACKUP_ADMIN = 57713
const BINLOG_ADMIN = 57714
const BINLOG_ENCRYPTION_ADMIN = 57715
const CLONE_ADMIN = 57716
const CONNECTION_ADMIN = 57717
const ENCRYPTION_KEY_ADMIN = 57718
const FIREWALL_ADMIN = 57719
const FIREWALL_EXEMPT = 57720
const FIREWALL_USER = 57721
const FLUSH_OPTIMIZER_COSTS = 57722
const FLUSH_STATUS = 57723
const FLUSH_TABLES = 57724
const FLUSH_USER_RESOURCES = 57725
const GROUP_REPLICATION_ADMIN = 57726
const GROUP_REPLICATION_STREAM = 57727
const INNODB_REDO_LOG_ARCHIVE = 57728
const INNODB_REDO_LOG_ENABLE = 57729
const NDB_STORED_USER = 57730
const PASSWORDLESS_USER_ADMIN = 57731
const PERSIST_RO_VARIABLES_ADMIN = 57732
const REPLICATION_APPLIER = 57733
const REPLICATION_SLAVE_ADMIN = 57734
const RESOURCE_GROUP_ADMIN = 57735
const RESOURCE_GROUP_USER = 57736
const ROLE_ADMIN = 57737
const SENSITIVE_VARIABLES_OBSERVER = 57738
const SESSION_VARIABLES_ADMIN = 57739
const SET_USER_ID = 57740
const SHOW_ROUTINE = 57741
const SKIP_QUERY_REWRITE = 57742
const SYSTEM_VARIABLES_ADMIN = 57743
const TABLE_ENCRYPTION_ADMIN = 57744
const TP_CONNECTION_ADMIN = 57745
const VERSION_TOKEN_ADMIN = 57746
const XA_RECOVER_ADMIN = 57747
const REPLICA = 57748
const REPLICAS = 57749
const SOURCE = 57750
const STOP = 57751
const RESET = 57752
const FILTER = 57753
const LOG = 57754
const MASTER = 57755
const SOURCE_HOST = 57756
const SOURCE_USER = 57757
const SOURCE_PASSWORD = 57758
const SOURCE_PORT = 57759
const SOURCE_LOG_FILE = 57760
const SOURCE_LOG_POS = 57761
const SOURCE_CONNECT_RETRY = 57762
const SOURCE_RETRY_COUNT = 57763
const SOURCE_AUTO_POSITION = 57764
const REPLICATE_DO_DB = 57765
const REPLICATE_IGNORE_DB = 57766
const REPLICATE_DO_TABLE = 57767
const REPLICATE_IGNORE_TABLE = 57768
const IO_THREAD = 57769
const SQL_THREAD = 57770
const BEGIN = 57771
const START = 57772
const TRANSACTION = 57773
const COMMIT = 57774
const ROLLBACK = 57775
const SAVEPOINT = 57776
const WORK = 57777
const RELEASE = 57778
const CHAIN = 57779
const CONSISTENT = 57780
const SNAPSHOT = 57781
const BIT = 57782
const TINYINT = 57783
const SMALLINT = 57784
const MEDIUMINT = 57785
const INT = 57786
const INTEGER = 57787
const BIGINT = 57788
const INTNUM = 57789
const SERIAL = 57790
const INT1 = 57791
const INT2 = 57792
const INT3 = 57793
const INT4 = 57794
const INT8 = 57795
const REAL = 57796
const DOUBLE = 57797
const FLOAT_TYPE = 57798
const DECIMAL = 57799
const NUMERIC = 57800
const DEC = 57801
const FIXED = 57802
const PRECISION = 57803
const TIME = 57804
const TIMESTAMP = 57805
const DATETIME = 57806
const CHAR = 57807
const VARCHAR = 57808
const BOOL = 57809
const CHARACTER = 57810
const VARBINARY = 57811
const NCHAR = 57812
const NVARCHAR = 57813
const NATIONAL = 57814
const VARYING = 57815
const VARCHARACTER = 57816
const TEXT = 57817
const TINYTEXT = 57818
const MEDIUMTEXT = 57819
const LONGTEXT = 57820
const LONG = 57821
const BLOB = 57822
const TINYBLOB = 57823
const MEDIUMBLOB = 57824
const LONGBLOB = 57825
const JSON = 57826
const ENUM = 57827
const GEOMETRY = 57828
const POINT = 57829
const LINESTRING = 57830
const POLYGON = 57831
const GEOMETRYCOLLECTION = 57832
const MULTIPOINT = 57833
const MULTILINESTRING = 57834
const MULTIPOLYGON = 57835
const LOCAL = 57836
const LOW_PRIORITY = 57837
const SKIP = 57838
const LOCKED = 57839
const NULLX = 57840
const AUTO_INCREMENT = 57841
const APPROXNUM = 57842
const SIGNED = 57843
const UNSIGNED = 57844
const ZEROFILL = 57845
const SRID = 57846
const COLLATION = 57847
const DATABASES = 57848
const SCHEMAS = 57849
const TABLES = 57850
const FULL = 57851
const PROCESSLIST = 57852
const COLUMNS = 57853
const FIELDS = 57854
const ENGINES = 57855
const PLUGINS = 57856
const NAMES = 57857
const CHARSET = 57858
const GLOBAL = 57859
const SESSION = 57860
const ISOLATION = 57861
const LEVEL = 57862
const READ = 57863
const WRITE = 57864
const ONLY = 57865
const REPEATABLE = 57866
const COMMITTED = 57867
const UNCOMMITTED = 57868
const SERIALIZABLE = 57869
const ENCRYPTION = 57870
const CURRENT_TIMESTAMP = 57871
const NOW = 57872
const DATABASE = 57873
const CURRENT_DATE = 57874
const CURRENT_USER = 57875
const CURRENT_TIME = 57876
const LOCALTIME = 57877
const LOCALTIMESTAMP = 57878
const UTC_DATE = 57879
const UTC_TIME = 57880
const UTC_TIMESTAMP = 57881
const REPLACE = 57882
const CONVERT = 57883
const CAST = 57884
const POSITION = 57885
const SUBSTR = 57886
const SUBSTRING = 57887
const TRIM = 57888
const LEADING = 57889
const TRAILING = 57890
const BOTH = 57891
const GROUP_CONCAT = 57892
const SEPARATOR = 57893
const TIMESTAMPADD = 57894
const TIMESTAMPDIFF = 57895
const EXTRACT = 57896
const GET_FORMAT = 57897
const OVER = 57898
const WINDOW = 57899
const GROUPING = 57900
const CURRENT = 57901
const AVG = 57902
const BIT_AND = 57903
const BIT_OR = 57904
const BIT_XOR = 57905
const COUNT = 57906
const JSON_ARRAYAGG = 57907
const JSON_OBJECTAGG = 57908
const MAX = 57909
const MIN = 57910
const STDDEV_POP = 57911
const STDDEV = 57912
const STD = 57913
const STDDEV_SAMP = 57914
const SUM = 57915
const VAR_POP = 57916
const VARIANCE = 57917
const VAR_SAMP = 57918
const CUME_DIST = 57919
const DENSE_RANK = 57920
const FIRST_VALUE = 57921
const LAG = 57922
const LAST_VALUE = 57923
const LEAD = 57924
const NTH_VALUE = 57925
const NTILE = 57926
const ROW_NUMBER = 57927
const PERCENT_RANK = 57928
const RANK = 57929
const DUAL = 57930
const JSON_TABLE = 57931
const PATH = 57932
const AVG_ROW_LENGTH = 57933
const CHECKSUM = 57934
const COMPACT = 57935
const COMPRESSED = 57936
const COMPRESSION = 57937
const DISK = 57938
const DIRECTORY = 57939
const DELAY_KEY_WRITE = 57940
const DYNAMIC = 57941
const ENGINE_ATTRIBUTE = 57942
const ENCRYPTED = 57943
const ENCRYPTION_KEY_ID = 57944
const HASH = 57945
const INSERT_METHOD = 57946
const ITEF_QUOTES = 57947
const LIST = 57948
const MIN_ROWS = 57949
const MAX_ROWS = 57950
const PACK_KEYS = 57951
const MEMORY = 57952
const PAGE_CHECKSUM = 57953
const PAGE_COMPRESSED = 57954
const PAGE_COMPRESSION_LEVEL = 57955
const PARTITIONS = 57956
const REDUNDANT = 57957
const ROW_FORMAT = 57958
const SECONDARY_ENGINE = 57959
const SECONDARY_ENGINE_ATTRIBUTE = 57960
const STATS_AUTO_RECALC = 57961
const STATS_PERSISTENT = 57962
const STATS_SAMPLE_PAGES = 57963
const STORAGE = 57964
const SUBPARTITION = 57965
const SUBPARTITIONS = 57966
const TABLE_CHECKSUM = 57967
const TRANSACTIONAL = 57968
const VERSIONING = 57969
const YES = 57970
const PREPARE = 57971
const DEALLOCATE = 57972
const MATCH = 57973
const AGAINST = 57974
const BOOLEAN = 57975
const LANGUAGE = 57976
const WITH = 57977
const QUERY = 57978
const EXPANSION = 57979
const MICROSECOND = 57980
const SECOND = 57981
const MINUTE = 57982
const HOUR = 57983
const DAY = 57984
const WEEK = 57985
const MONTH = 57986
const QUARTER = 57987
const YEAR = 57988
const SECOND_MICROSECOND = 57989
const MINUTE_MICROSECOND = 57990
const MINUTE_SECOND = 57991
const HOUR_MICROSECOND = 57992
const HOUR_SECOND = 57993
const HOUR_MINUTE = 57994
const DAY_MICROSECOND = 57995
const DAY_SECOND = 57996
const DAY_MINUTE = 57997
const DAY_HOUR = 57998
const YEAR_MONTH = 57999
const NAME = 58000
const SYSTEM = 58001
const ACCESSIBLE = 58002
const ASENSITIVE = 58003
const CUBE = 58004
const DELAYED = 58005
const DISTINCTROW = 58006
const EMPTY = 58007
const FLOAT4 = 58008
const FLOAT8 = 58009
const GET = 58010
const HIGH_PRIORITY = 58011
const INSENSITIVE = 58012
const IO_AFTER_GTIDS = 58013
const IO_BEFORE_GTIDS = 58014
const LINEAR = 58015
const MASTER_BIND = 58016
const MASTER_SSL_VERIFY_SERVER_CERT = 58017
const MIDDLEINT = 58018
const PURGE = 58019
const READ_WRITE = 58020
const RLIKE = 58021
const SENSITIVE = 58022
const SPECIFIC = 58023
const SQL_BIG_RESULT = 58024
const SQL_SMALL_RESULT = 58025
const UNUSED = 58026
const DESCRIPTION = 58027
const LATERAL = 58028
const MEMBER = 58029
const RECURSIVE = 58030
const BUCKETS = 58031
const CLONE = 58032
const COMPONENT = 58033
const DEFINITION = 58034
const ENFORCED = 58035
const NOT_ENFORCED = 58036
const EXCLUDE = 58037
const GEOMCOLLECTION = 58038
const GET_MASTER_PUBLIC_KEY = 58039
const HISTOGRAM = 58040
const HISTORY = 58041
const INACTIVE = 58042
const INVISIBLE = 58043
const MASTER_COMPRESSION_ALGORITHMS = 58044
const MASTER_PUBLIC_KEY_PATH = 58045
const MASTER_TLS_CIPHERSUITES = 58046
const MASTER_ZSTD_COMPRESSION_LEVEL = 58047
const NESTED = 58048
const NETWORK_NAMESPACE = 58049
const NOWAIT = 58050
const NULLS = 58051
const OJ = 58052
const OLD = 58053
const ORDINALITY = 58054
const ORGANIZATION = 58055
const OTHERS = 58056
const PERSIST = 58057
const PERSIST_ONLY = 58058
const PRIVILEGE_CHECKS_USER = 58059
const PROCESS = 58060
const REFERENCE = 58061
const REQUIRE_ROW_FORMAT = 58062
const RESOURCE = 58063
const RESPECT = 58064
const RESTART = 58065
const RETAIN = 58066
const SECONDARY = 58067
const SECONDARY_LOAD = 58068
const SECONDARY_UNLOAD = 58069
const THREAD_PRIORITY = 58070
const TIES = 58071
const VCPU = 58072
const VISIBLE = 58073
const INFILE = 58074
const ACTIVE = 58075
const AGGREGATE = 58076
const ANY = 58077
const ARRAY = 58078
const ASCII = 58079
const AT = 58080
const AUTOEXTEND_SIZE = 58081
const GENERATED = 58082
const ALWAYS = 58083
const STORED = 58084
const VIRTUAL = 58085
const NVAR = 58086
const PASSWORD_LOCK = 58087

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_LOG_FILE",
	"SOURCE_LOG_POS",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_DB",
	"REPLICATE_IGNORE_DB",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	765, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1798,
	200, 1819,
	-2, 331,
	-1, 62,
	242, 1176,
	243, 1176,
	-2, 1165,
	-1, 90,
	271, 331,
	-2, 1804,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 546,
	1, 2499,
	6, 2499,
	7, 2499,
	28, 2499,
	187, 2499,
	765, 2499,
	-2, 1211,
	-1, 559,
	187, 1829,
	-2, 1823,
	-1, 560,
	187, 1830,
	-2, 1824,
	-1, 665,
	1, 679,
	765, 679,
	-2, 677,
	-1, 674,
	1, 1317,
	8, 1317,
	9, 1317,
	10, 1317,
	17, 1317,
	18, 1317,
	19, 1317,
	20, 1317,
	22, 1317,
	24, 1317,
	34, 1317,
	35, 1317,
	64, 1317,
	65, 1317,
	66, 1317,
	67, 1317,
	68, 1317,
	70, 1317,
	71, 1317,
	74, 1317,
	75, 1317,
	77, 1317,
	78, 1317,
	96, 1317,
	528, 1317,
	576, 1317,
	654, 1317,
	765, 1317,
	-2, 1813,
	-1, 679,
	1, 1424,
	8, 1424,
	9, 1424,
	10, 1424,
	17, 1424,
	18, 1424,
	19, 1424,
	20, 1424,
	22, 1424,
	24, 1424,
	34, 1424,
	35, 1424,
	64, 1424,
	65, 1424,
	66, 1424,
	67, 1424,
	68, 1424,
	70, 1424,
	71, 1424,
	74, 1424,
	75, 1424,
	77, 1424,
	78, 1424,
	96, 1424,
	528, 1424,
	576, 1424,
	654, 1424,
	765, 1424,
	-2, 1813,
	-1, 707,
	187, 2196,
	-2, 1438,
	-1, 740,
	187, 2304,
	-2, 1706,
	-1, 741,
	187, 2385,
	-2, 1440,
	-1, 742,
	187, 2216,
	-2, 1441,
	-1, 811,
	187, 2167,
	-2, 1672,
	-1, 814,
	187, 2182,
	-2, 1590,
	-1, 815,
	187, 2185,
	-2, 1590,
	-1, 816,
	187, 2395,
	-2, 1590,
	-1, 818,
	187, 2183,
	-2, 1590,
	-1, 819,
	187, 2396,
	-2, 1590,
	-1, 820,
	187, 2397,
	-2, 1590,
	-1, 879,
	187, 2184,
	-2, 1590,
	-1, 962,
	187, 2284,
	-2, 1590,
	-1, 963,
	187, 2285,
	-2, 1590,
	-1, 1075,
	109, 2512,
	120, 2512,
	187, 2512,
	-2, 1780,
	-1, 1076,
	109, 2645,
	120, 2645,
	187, 2645,
	-2, 1781,
	-1, 1081,
	109, 2540,
	120, 2540,
	187, 2540,
	-2, 1782,
	-1, 1082,
	109, 2591,
	120, 2591,
	187, 2591,
	-2, 1783,
	-1, 1083,
	109, 2592,
	120, 2592,
	187, 2592,
	-2, 1784,
	-1, 1084,
	109, 2439,
	120, 2439,
	187, 2439,
	-2, 1789,
	-1, 1086,
	109, 2568,
	120, 2568,
	187, 2568,
	-2, 1791,
	-1, 1259,
	455, 1190,
	-2, 1194,
	-1, 1261,
	455, 1190,
	-2, 1194,
	-1, 1387,
	1, 679,
	765, 679,
	-2, 677,
	-1, 1389,
	1, 680,
	765, 680,
	-2, 677,
	-1, 1412,
	1, 1318,
	8, 1318,
	9, 1318,
	10, 1318,
	17, 1318,
	18, 1318,
	19, 1318,
	20, 1318,
	22, 1318,
	24, 1318,
	34, 1318,
	35, 1318,
	64, 1318,
	65, 1318,
	66, 1318,
	67, 1318,
	68, 1318,
	70, 1318,
	71, 1318,
	74, 1318,
	75, 1318,
	77, 1318,
	78, 1318,
	96, 1318,
	528, 1318,
	576, 1318,
	654, 1318,
	765, 1318,
	-2, 1813,
	-1, 1423,
	1, 1424,
	8, 1424,
	9, 1424,
	10, 1424,
	17, 1424,
	18, 1424,
	19, 1424,
	20, 1424,
	22, 1424,
	24, 1424,
	34, 1424,
	35, 1424,
	64, 1424,
	65, 1424,
	66, 1424,
	67, 1424,
	68, 1424,
	70, 1424,
	71, 1424,
	74, 1424,
	75, 1424,
	77, 1424,
	78, 1424,
	96, 1424,
	528, 1424,
	576, 1424,
	654, 1424,
	765, 1424,
	-2, 1813,
	-1, 1716,
	1, 679,
	765, 679,
	-2, 677,
	-1, 1718,
	1, 679,
	765, 679,
	-2, 677,
	-1, 2275,
	187, 1833,
	-2, 1684,
	-1, 2277,
	187, 2733,
	-2, 1686,
	-1, 2278,
	187, 2734,
	-2, 1687,
	-1, 2279,
	187, 1832,
	-2, 1828,
	-1, 2428,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2446,
	187, 2308,
	-2, 1785,
	-1, 2453,
	1, 901,
	765, 901,
	-2, 677,
	-1, 2644,
	49, 921,
	206, 924,
	208, 921,
	209, 921,
	210, 921,
	-2, 1037,
	-1, 2725,
	8, 59,
	9, 59,
	10, 59,
	-2, 1470,
	-1, 2742,
	1, 1363,
	8, 1363,
	9, 1363,
	10, 1363,
	17, 1363,
	18, 1363,
	19, 1363,
	20, 1363,
	22, 1363,
	24, 1363,
	34, 1363,
	35, 1363,
	64, 1363,
	65, 1363,
	66, 1363,
	67, 1363,
	68, 1363,
	70, 1363,
	71, 1363,
	74, 1363,
	75, 1363,
	77, 1363,
	78, 1363,
	96, 1363,
	528, 1363,
	576, 1363,
	654, 1363,
	765, 1363,
	-2, 1813,
	-1, 2919,
	212, 1031,
	216, 1031,
	-2, 789,
	-1, 2920,
	212, 1101,
	216, 1101,
	-2, 790,
	-1, 3185,
	1, 1424,
	8, 1424,
	9, 1424,
	10, 1424,
	17, 1424,
	18, 1424,
	19, 1424,
	20, 1424,
	22, 1424,
	24, 1424,
	34, 1424,
	35, 1424,
	64, 1424,
	65, 1424,
	66, 1424,
	67, 1424,
	68, 1424,
	70, 1424,
	71, 1424,
	74, 1424,
	75, 1424,
	77, 1424,
	78, 1424,
	96, 1424,
	528, 1424,
	576, 1424,
	654, 1424,
	765, 1424,
	-2, 1813,
	-1, 3288,
	1, 1737,
	74, 1737,
	765, 1737,
	-2, 1813,
	-1, 3493,
	49, 921,
	206, 924,
	208, 921,
	209, 921,
	210, 921,
	-2, 1037,
	-1, 3506,
	206, 925,
	212, 1031,
	216, 1031,
	-2, 923,
	-1, 3691,
	77, 2079,
	78, 2079,
	187, 2079,
	-2, 1219,
	-1, 3692,
	76, 1748,
	252, 1748,
	-2, 2128,
	-1, 3693,
	76, 1749,
	252, 1749,
	-2, 2699,
	-1, 3934,
	8, 59,
	9, 59,
	10, 59,
	-2, 1744,
	-1, 4079,
	46, 1844,
	-2, 1842,
	-1, 4342,
	8, 59,
	9, 59,
	10, 59,
	-2, 1745,
	-1, 4367,
	315, 426,
	-2, 1899,
	-1, 4368,
	315, 427,
	-2, 1940,
	-1, 4369,
	315, 428,
	-2, 2116,
	-1, 4598,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4679,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 81976

var yyAct = [...]int{
	753, 44, 4652, 4621, 4553, 4589, 699, 4374, 4590, 4602,
	1191, 2936, 2443, 4555, 4228, 8, 4227, 7, 571, 4226,
	6, 4073, 4334, 2935, 4471, 495, 4218, 3636, 4068, 1415,
	4472, 3296, 3780, 4259, 28, 4361, 4229, 9, 2366, 2367,
	4113, 713, 4192, 4220, 3265, 44, 1422, 1636, 2721, 4075,
	4360, 3454, 659, 4124, 726, 709, 3897, 2304, 3967, 3854,
	3711, 4086, 4332, 4079, 3354, 4074, 3890, 2659, 1539, 3855,
	3606, 2515, 3889, 4035, 107, 4077, 690, 3697, 3689, 1707,
	2917, 3175, 3908, 550, 553, 3467, 3846, 2534, 3432, 598,
	598, 3003, 4373, 1751, 655, 2470, 3809, 676, 643, 3803,
	1470, 3786, 101, 2709, 2250, 4219, 679, 3355, 3113, 3297,
	752, 4225, 3, 3888, 1753, 3498, 2923, 3612, 2989, 1151,
	1417, 3681, 1220, 817, 2947, 3013, 3574, 1567, 3565, 2501,
	3076, 3163, 2175, 3586, 2916, 134, 2183, 3417, 2474, 492,
	2637, 1393, 2607, 1568, 1419, 2460, 105, 1159, 2643, 1382,
	1163, 2642, 2850, 2924, 1209, 712, 108, 3452, 1080, 1269,
	718, 3273, 2873, 3227, 156, 1750, 2476, 2566, 2236, 1756,
	1421, 2238, 1414, 1270, 2641, 548, 700, 2176, 2155, 2590,
	1726, 1246, 695, 2497, 2049, 1451, 2970, 1613, 1617, 2356,
	1459, 1077, 2114, 1454, 2281, 2712, 674, 2625, 2119, 1303,
	1281, 2089, 1388, 2726, 3080, 1154, 1643, 1073, 1616, 2430,
	1478, 2243, 683, 1400, 1074, 671, 1392, 670, 1391, 3698,
	1390, 574, 2048, 658, 573, 1167, 2081, 1152, 1265, 556,
	1280, 2082, 129, 1719, 1204, 1178, 125, 1190, 666, 4679,
	716, 2320, 693, 4673, 2240, 4660, 1155, 1172, 4644, 1188,
	4630, 4598, 4596, 4568, 4565, 4564, 4563, 4548, 4546, 4454,
	4450, 4445, 1205, 100, 4126, 4125, 3370, 3865, 2112, 2519,
	3614, 1182, 3445, 4316, 4008, 2553, 2552, 3860, 3861, 3858,
	3859, 3414, 3415, 3714, 4620, 3712, 1442, 4583, 4581, 4668,
	4006, 4619, 4582, 3353, 3126, 2981, 1729, 3864, 97, 3448,
	86, 4388, 4387, 4009, 566, 4586, 3446, 4330, 663, 657,
	4530, 2671, 689, 4198, 2550, 2041, 148, 144, 145, 4021,
	146, 3001, 94, 668, 3968, 2550, 1356, 3447, 4481, 99,
	4221, 4294, 3883, 3429, 4329, 3255, 505, 680, 4197, 3970,
	3567, 3758, 3554, 4622, 4108, 3755, 3603, 1314, 3951, 42,
	42, 42, 3963, 4183, 3324, 702, 150, 149, 4424, 3323,
	2707, 42, 3136, 3886, 4406, 3135, 3964, 42, 1184, 1192,
	4147, 122, 3287, 71, 3955, 4315, 1174, 3887, 1180, 1181,
	2961, 4082, 47, 2826, 1394, 3673, 2656, 2583, 1171, 153,
	3308, 3309, 2680, 3293, 3293, 88, 1259, 3294, 3294, 4338,
	2943, 2115, 4338, 2589, 545, 2950, 3307, 114, 112, 113,
	2440, 2441, 2160, 2161, 89, 89, 89, 4333, 2118, 1150,
	3057, 2955, 2954, 1618, 2655, 1619, 89, 3395, 1067, 2439,
	2237, 89, 89, 3396, 3397, 4408, 4335, 3160, 4317, 4335,
	1357, 2677, 1244, 1245, 2116, 2117, 2951, 3634, 151, 2864,
	152, 2136, 2863, 1333, 2948, 2865, 565, 3916, 564, 3914,
	3969, 1341, 2957, 3587, 2933, 2959, 1242, 568, 1243, 1244,
	1245, 3208, 2934, 2368, 2380, 2378, 2377, 2376, 2379, 2375,
	2374, 2373, 2369, 2370, 2387, 2371, 2386, 2385, 2372, 2384,
	2383, 2382, 2381, 2380, 2378, 2377, 2376, 2379, 2375, 2374,
	2373, 4339, 2949, 2387, 4339, 2386, 2385, 3909, 2384, 2383,
	2382, 2381, 3317, 2191, 2445, 2937, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 3787, 2472, 2473, 1253, 2750, 652,
	2588, 669, 1300, 2208, 3789, 1406, 1407, 96, 96, 96,
	2487, 2477, 2646, 2645, 2658, 2665, 2644, 2657, 2648, 96,
	2486, 2681, 1224, 1225, 4093, 96, 1228, 2480, 2479, 3525,
	2481, 2491, 2690, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 3099, 2498, 1503, 2953, 2668,
	2666, 2661, 2956, 136, 1166, 1215, 2663, 1162, 4351, 3654,
	2946, 4619, 1226, 1227, 4582, 4580, 3658, 1208, 2679, 2701,
	2652, 2651, 2477, 3656, 1254, 1255, 2622, 2162, 2572, 2571,
	1402, 1405, 1406, 1407, 1403, 543, 1404, 1409, 2647, 540,
	2713, 2714, 563, 647, 3342, 1229, 733, 649, 734, 736,
	737, 738, 739, 1230, 2653, 2654, 735, 2316, 2671, 648,
	2662, 2664, 2667, 2669, 2391, 4667, 1402, 1405, 1406, 1407,
	1403, 3792, 1404, 1409, 646, 4352, 1151, 667, 653, 4007,
	1383, 1359, 1360, 2087, 1386, 3056, 4620, 4447, 147, 1262,
	4448, 1304, 4449, 645, 4618, 3881, 1413, 1418, 4304, 647,
	4617, 4583, 1436, 1437, 1151, 1354, 1151, 1151, 1355, 2168,
	1151, 2697, 3228, 3873, 3790, 3791, 3793, 3794, 3795, 3871,
	1151, 2167, 2156, 2157, 2158, 2159, 4475, 2166, 1512, 1514,
	1216, 1256, 1516, 3186, 3105, 3033, 2705, 2165, 2164, 2163,
	4066, 1410, 1378, 1337, 1338, 3103, 733, 2687, 734, 736,
	737, 738, 739, 1457, 1307, 4287, 735, 2316, 4488, 4487,
	3186, 2996, 2584, 3186, 1531, 3439, 4427, 4039, 1534, 1535,
	1536, 1537, 1538, 3613, 1542, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 3466, 4474, 154, 1316, 4141, 3804,
	3566, 2313, 3038, 2602, 1385, 3231, 1268, 3807, 3106, 1330,
	1348, 4289, 1482, 1349, 1340, 4152, 4151, 3713, 108, 3805,
	3806, 4149, 3104, 4446, 3821, 4028, 4542, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 3272, 1561, 1562, 1564, 1564, 1564, 4025, 1569,
	1569, 1569, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1428, 3714, 3839, 2603, 3316, 2189, 2948,
	4392, 3530, 2948, 3442, 2948, 108, 544, 2148, 3971, 2673,
	3000, 2313, 1412, 1316, 4003, 567, 2998, 665, 4030, 2535,
	1569, 4184, 2962, 3819, 4400, 3953, 3972, 2118, 4386, 4353,
	2952, 3468, 2626, 4336, 1316, 2945, 4336, 4064, 2684, 2393,
	2394, 2392, 2596, 4676, 1223, 3315, 2190, 2949, 142, 3589,
	2949, 2650, 2949, 2116, 2117, 4646, 680, 680, 2192, 4196,
	3098, 4143, 4675, 4645, 1317, 1324, 1325, 1327, 1328, 1329,
	4423, 1331, 1332, 4642, 1334, 1335, 1336, 1460, 1339, 1261,
	1342, 1343, 1344, 1345, 1346, 4561, 3954, 1570, 1571, 1513,
	1484, 1267, 4022, 115, 3002, 4314, 1379, 2964, 1563, 1565,
	1566, 2674, 2675, 1569, 1569, 2678, 1380, 4606, 2683, 3974,
	2688, 2685, 2686, 1445, 2689, 2682, 4442, 2692, 2691, 2693,
	2500, 2694, 2695, 2696, 1444, 1444, 2698, 2699, 2700, 2702,
	2703, 2704, 109, 109, 109, 2676, 2706, 1408, 1540, 3973,
	1379, 3880, 4543, 1218, 109, 2670, 1439, 1603, 1439, 1439,
	87, 2483, 1439, 1438, 1308, 1443, 1443, 4550, 2484, 1450,
	1323, 3105, 3235, 3234, 3236, 3233, 2314, 2315, 3872, 1241,
	3240, 3870, 3232, 3229, 2088, 3103, 3230, 1396, 3238, 143,
	1263, 551, 3592, 3590, 3810, 3811, 3812, 3813, 3588, 4148,
	4473, 3125, 3237, 4027, 4288, 1315, 1560, 4398, 3162, 1217,
	1350, 3170, 3172, 3171, 3591, 4440, 4441, 3164, 1606, 3239,
	3241, 3430, 3518, 3116, 1408, 3177, 4024, 3433, 3434, 3435,
	3436, 3437, 3611, 3894, 1321, 4142, 4309, 3788, 4175, 4094,
	1604, 1605, 2932, 3395, 1067, 3427, 3385, 3386, 3388, 3396,
	3397, 3387, 3389, 3390, 3433, 3434, 3435, 3436, 3437, 2672,
	1408, 554, 2999, 3532, 3533, 1080, 3391, 3392, 3393, 3394,
	1080, 3441, 4004, 1475, 1476, 1474, 2314, 2315, 1397, 1326,
	1714, 2944, 1475, 1476, 1474, 3178, 1176, 1175, 4114, 3177,
	3995, 4000, 1477, 1734, 1735, 1733, 1724, 3999, 1322, 3998,
	1318, 1477, 1151, 3997, 3996, 4559, 3994, 4554, 3072, 555,
	2665, 3071, 1179, 1179, 136, 3531, 4136, 4137, 2171, 1177,
	2529, 2530, 2525, 4557, 4356, 4357, 4418, 1612, 136, 4223,
	664, 107, 1319, 1320, 3607, 3608, 2051, 4132, 2120, 141,
	3021, 3022, 598, 4396, 2668, 2666, 2661, 1238, 1239, 1257,
	1728, 2663, 1240, 1237, 2524, 1699, 1700, 1701, 1702, 1703,
	1236, 1235, 598, 1234, 3242, 4298, 1266, 549, 2172, 3575,
	1752, 1628, 3576, 4216, 3577, 1610, 2083, 2122, 3847, 3848,
	2121, 1166, 1760, 4669, 2041, 2467, 4429, 4428, 3083, 1166,
	3359, 552, 1411, 1704, 1709, 4293, 3504, 3095, 3165, 3073,
	3074, 2536, 3115, 1633, 3083, 2662, 2664, 2667, 2669, 3093,
	3610, 4682, 3092, 108, 4677, 1621, 1151, 552, 4661, 1151,
	1622, 4633, 4656, 1173, 1727, 1193, 669, 1712, 2469, 1732,
	2091, 4166, 2093, 1424, 1426, 2092, 1424, 1426, 4058, 3879,
	2045, 2045, 2045, 2045, 3876, 560, 2469, 1312, 2095, 1612,
	3609, 3464, 1745, 3100, 3032, 3028, 3006, 1607, 1608, 3005,
	2597, 2153, 1739, 1705, 1737, 1264, 2469, 3166, 2518, 3519,
	3520, 3521, 1170, 598, 2469, 2223, 3115, 2222, 123, 2221,
	1169, 4061, 2058, 2059, 2060, 2061, 2062, 3459, 2063, 1395,
	1183, 490, 2052, 1758, 3176, 3862, 2076, 1741, 2469, 2039,
	3091, 1518, 1519, 163, 4566, 493, 504, 2064, 2146, 163,
	2065, 2066, 2067, 4451, 163, 89, 2109, 1629, 3082, 2071,
	697, 2547, 2537, 3633, 640, 640, 2546, 2090, 1630, 2079,
	108, 552, 2054, 163, 3306, 552, 3030, 3029, 2797, 2469,
	4556, 4558, 163, 89, 2870, 2043, 2047, 3358, 4307, 676,
	676, 676, 676, 138, 1715, 163, 1722, 2129, 1713, 2180,
	1517, 1710, 1515, 2767, 1151, 1425, 163, 1165, 1425, 1418,
	1731, 2217, 2068, 1311, 2070, 1723, 2744, 3114, 2468, 1749,
	2633, 1730, 1748, 2177, 3089, 3083, 2050, 2551, 163, 640,
	3086, 1165, 2526, 3085, 3090, 1520, 2468, 2152, 2216, 2794,
	493, 163, 4654, 3083, 2435, 4655, 2107, 4653, 1166, 2211,
	2253, 3084, 2467, 2210, 1520, 1632, 2468, 2055, 1533, 1532,
	2220, 2056, 2057, 3083, 2468, 2218, 1517, 2127, 1166, 1520,
	1483, 3084, 2467, 1612, 1612, 654, 1298, 1206, 2085, 138,
	2194, 4146, 2084, 2445, 2074, 4165, 2094, 4164, 2468, 1258,
	1364, 3114, 2193, 3863, 1503, 3109, 2100, 2101, 2124, 1760,
	2103, 2860, 2195, 3112, 1493, 1151, 96, 1503, 2151, 2306,
	2305, 2198, 3771, 3769, 123, 108, 2106, 2040, 3461, 2078,
	108, 2169, 2170, 2274, 2128, 2125, 4173, 126, 3856, 2468,
	4011, 118, 1540, 1542, 676, 3089, 3083, 2147, 4419, 4420,
	2150, 3086, 4416, 4417, 3085, 3090, 1376, 3490, 3489, 1482,
	1518, 1519, 3503, 140, 139, 2309, 3930, 2311, 4201, 4200,
	1433, 1434, 2216, 3106, 2312, 2317, 3104, 4012, 2741, 2261,
	3091, 2307, 2323, 2325, 3770, 1433, 1434, 2360, 4458, 121,
	2185, 3082, 1427, 2851, 2219, 2342, 2345, 2282, 2738, 1374,
	3376, 3374, 3124, 2358, 2184, 2173, 2188, 1427, 2186, 676,
	2187, 3123, 2388, 2389, 2196, 2197, 3122, 2199, 1435, 3491,
	2279, 1518, 1519, 2209, 3121, 3120, 108, 3119, 3118, 3117,
	120, 1540, 1477, 1435, 1629, 2444, 1424, 1426, 128, 680,
	680, 680, 680, 3065, 3064, 1630, 2735, 2260, 132, 140,
	139, 1424, 1426, 2273, 108, 1247, 689, 1080, 1760, 680,
	2561, 1159, 3375, 2130, 670, 2246, 2133, 2134, 2135, 4459,
	2137, 2138, 1232, 3257, 2139, 2258, 2288, 1474, 2140, 3062,
	3061, 2141, 2450, 2867, 2866, 2142, 2143, 2357, 2144, 2145,
	2270, 2286, 2287, 2285, 1477, 4212, 136, 3050, 1475, 1476,
	1474, 1420, 2788, 1222, 2787, 3066, 137, 141, 1249, 4665,
	2452, 1370, 96, 1383, 2426, 702, 2428, 1477, 3049, 2262,
	2263, 2264, 3048, 3047, 1475, 1476, 1474, 2283, 3046, 3045,
	3069, 3044, 1369, 1365, 1366, 1367, 1368, 1371, 1372, 1373,
	1375, 3063, 3043, 1477, 3042, 2868, 2396, 534, 1475, 1476,
	1474, 2544, 2621, 4362, 2401, 4491, 2403, 4490, 1248, 4612,
	2457, 2620, 4659, 2562, 2429, 4482, 2619, 1477, 1425, 2279,
	130, 2618, 131, 2105, 1274, 1233, 2326, 2327, 2328, 2329,
	2330, 2427, 1186, 1425, 680, 1185, 163, 1540, 4632, 2466,
	2251, 2252, 4544, 2337, 2338, 2507, 2508, 2509, 2510, 2511,
	2354, 493, 2451, 1221, 2494, 2495, 2496, 4492, 1251, 4636,
	4603, 4635, 2482, 2485, 3004, 1717, 2488, 2489, 2490, 3820,
	4362, 2433, 4436, 2437, 4435, 2503, 2504, 2505, 2506, 2442,
	2436, 3814, 2542, 2543, 1476, 1474, 1260, 2538, 2528, 4510,
	2456, 2454, 3186, 2540, 2541, 3072, 3368, 2665, 3071, 680,
	2548, 2478, 1477, 506, 2357, 2512, 2810, 1475, 1476, 1474,
	163, 3882, 2517, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 2449, 3026, 1503, 1477, 2499, 2244, 2259,
	3891, 2668, 2666, 2661, 1377, 1475, 1476, 1474, 2663, 1496,
	1497, 1498, 1499, 1500, 1493, 2514, 2976, 1503, 2244, 1471,
	509, 1475, 1476, 1474, 1477, 2266, 2268, 2269, 4362, 520,
	532, 533, 4670, 2267, 4650, 1475, 1476, 1474, 4285, 2520,
	1477, 2522, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1477, 4391, 3073, 3074, 2764, 2765,
	2766, 4524, 2662, 2664, 2667, 2669, 4348, 2310, 515, 4521,
	522, 518, 163, 2513, 527, 528, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3752, 4286,
	1503, 4671, 163, 4291, 4284, 2333, 2334, 2335, 1475, 1476,
	1474, 2339, 529, 2341, 2344, 2347, 4663, 2352, 2353, 89,
	127, 4213, 4681, 2363, 1475, 1476, 1474, 1477, 493, 3750,
	4523, 2284, 4494, 4144, 3747, 3745, 697, 2395, 4520, 2397,
	2398, 3666, 2423, 1477, 2402, 3746, 2404, 2405, 4109, 3170,
	3172, 3171, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 524, 4019, 1503, 3595, 3593,
	3170, 3172, 3171, 4018, 4145, 2567, 3170, 3172, 3171, 3594,
	4017, 4016, 4010, 3830, 525, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 517, 1564, 1503,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 3778, 3777, 1503, 1151, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3543, 2091,
	1503, 2093, 3482, 3481, 2092, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 697, 3480, 1503,
	1475, 1476, 1474, 2365, 3479, 516, 530, 2801, 4439, 2789,
	3198, 3600, 531, 1475, 1476, 1474, 3477, 3419, 2554, 1477,
	3371, 3259, 2975, 2229, 103, 3195, 2973, 2960, 1306, 1305,
	4680, 2579, 1477, 2231, 3598, 2098, 3444, 3443, 2587, 4664,
	4647, 3192, 4641, 4570, 4562, 1413, 2564, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 1386, 4452, 1503, 4433, 2230,
	4480, 2563, 3170, 3172, 3171, 2225, 4432, 507, 4379, 697,
	110, 2233, 116, 4479, 2255, 2227, 2090, 2097, 1475, 1476,
	1474, 2235, 4378, 676, 4372, 3170, 3172, 3171, 2559, 4476,
	1304, 2569, 2730, 2731, 2732, 1394, 4371, 1477, 4150, 2256,
	2565, 2226, 2257, 4041, 523, 510, 511, 2234, 537, 2228,
	3680, 3522, 512, 514, 3016, 508, 536, 535, 3015, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 4375, 2573, 1503, 2723, 2558, 1068, 1069, 1070, 2557,
	2308, 2099, 2086, 2729, 1387, 2768, 1747, 1746, 1168, 1760,
	1718, 2224, 2708, 1716, 1301, 1278, 697, 2232, 562, 1457,
	1457, 4409, 4405, 526, 4389, 2634, 2574, 4324, 4318, 4215,
	4214, 4140, 4139, 2274, 2594, 2578, 4120, 1277, 4065, 4029,
	4026, 3993, 3962, 2586, 3961, 3926, 3885, 3884, 3829, 3828,
	3827, 3826, 2593, 3817, 3816, 3815, 3905, 2601, 3776, 3773,
	2604, 3748, 3743, 2724, 3734, 2649, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3904, 3730,
	1503, 3725, 570, 3724, 3723, 3596, 3585, 3573, 3569, 3562,
	2762, 2763, 3561, 3560, 3487, 3478, 163, 3476, 2627, 3475,
	3474, 2630, 3402, 3207, 3206, 1165, 3204, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2728,
	2279, 1503, 3067, 2971, 2717, 2869, 2282, 1530, 1529, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 1528, 2628, 1503, 2585, 680, 2556, 2102, 2791, 1740,
	2743, 697, 697, 2451, 4180, 697, 3617, 4534, 3760, 4464,
	4040, 676, 642, 1347, 676, 3617, 697, 4048, 697, 3986,
	2754, 2752, 2753, 3760, 4395, 3760, 4295, 3760, 4129, 3617,
	4128, 3617, 4123, 680, 4062, 697, 3985, 2773, 493, 3617,
	4033, 1760, 3186, 697, 3421, 1165, 163, 2632, 697, 3617,
	3901, 2041, 3844, 2041, 3843, 2431, 640, 640, 2431, 1080,
	2769, 640, 2041, 3842, 2600, 2041, 3841, 3682, 163, 2777,
	3701, 163, 3760, 3759, 1460, 3405, 640, 640, 3617, 3616,
	3412, 3411, 163, 3408, 3409, 3014, 493, 493, 493, 493,
	3408, 3407, 2743, 697, 2599, 2598, 2331, 2581, 2331, 697,
	3014, 163, 163, 163, 163, 163, 2283, 163, 2212, 697,
	1635, 1634, 2852, 3404, 2432, 3403, 2434, 2432, 3293, 2041,
	102, 2853, 3294, 163, 163, 2809, 2533, 2855, 640, 2041,
	2248, 1312, 1352, 1351, 163, 2364, 1310, 4614, 3701, 89,
	1309, 2825, 2827, 1310, 2331, 2212, 4325, 4194, 2833, 2834,
	2835, 2836, 1758, 2550, 3939, 3186, 2783, 3617, 2212, 598,
	3701, 2854, 3422, 3410, 2212, 3205, 3041, 3020, 2438, 2820,
	2532, 2818, 2817, 2743, 1165, 2879, 2617, 2743, 2104, 2555,
	2927, 2930, 2811, 2856, 2247, 2918, 2857, 640, 640, 640,
	1705, 2549, 1165, 1312, 2249, 1381, 2922, 2149, 2925, 2926,
	2113, 2041, 2858, 1738, 1736, 2980, 1727, 2861, 1615, 1621,
	1384, 89, 4426, 2722, 4296, 2045, 4160, 4044, 2871, 3779,
	3768, 3765, 2475, 640, 3008, 2963, 2965, 2502, 640, 640,
	2966, 2967, 2477, 2968, 2969, 3180, 3007, 3055, 2180, 3054,
	3053, 3052, 696, 698, 2498, 2915, 2713, 2714, 3903, 1316,
	2527, 680, 163, 163, 680, 2493, 2492, 163, 1708, 1165,
	2972, 1297, 2177, 3059, 2974, 2516, 3831, 2568, 3018, 1213,
	1212, 163, 640, 4649, 163, 163, 163, 163, 4648, 4627,
	4625, 4616, 4615, 4591, 4584, 4578, 163, 4576, 4526, 4525,
	3896, 3892, 3682, 2997, 163, 3420, 3011, 3010, 163, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 2994, 2977, 1503, 2716, 2710, 3193, 2123, 1743, 3196,
	3012, 2636, 3199, 1353, 1313, 2207, 3017, 2204, 2202, 2720,
	2206, 3254, 2205, 2203, 539, 2719, 2718, 2778, 2779, 2780,
	2781, 2782, 676, 3034, 1464, 1465, 2201, 2200, 163, 3081,
	1760, 3040, 3184, 3031, 3182, 493, 3087, 3094, 3161, 3097,
	3027, 4414, 3188, 3189, 3190, 2807, 4328, 3209, 3108, 3200,
	3075, 2751, 4381, 4099, 2274, 1467, 3051, 4162, 3077, 3088,
	1469, 1468, 2759, 1466, 1464, 1465, 2758, 3877, 3853, 3763,
	3058, 1165, 3110, 1165, 3512, 3070, 1165, 3216, 3511, 3401,
	3400, 541, 542, 1165, 3399, 2931, 4189, 3266, 1165, 1165,
	2921, 4186, 4323, 4322, 4382, 1467, 1462, 163, 4, 163,
	1469, 1468, 3169, 1466, 1416, 43, 3243, 4080, 4078, 3245,
	4135, 3290, 3295, 4134, 4032, 561, 676, 2577, 2576, 2096,
	4013, 4014, 3210, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 3102, 3101, 1503, 3488, 3300,
	3289, 2279, 1452, 106, 4457, 3869, 3211, 3719, 3523, 43,
	3373, 2635, 4607, 1453, 1631, 3298, 1295, 1279, 1276, 1275,
	3187, 1219, 4051, 163, 163, 163, 4050, 1394, 2251, 2252,
	3256, 3931, 3676, 3449, 3203, 3201, 3824, 3822, 1272, 1273,
	3216, 2521, 1742, 3825, 3823, 1411, 4326, 4290, 4036, 3291,
	3781, 1165, 3767, 2979, 3213, 2321, 2322, 3217, 3218, 3214,
	1271, 2174, 2098, 2097, 3369, 1448, 1449, 1446, 1447, 1440,
	1441, 3382, 1362, 3244, 4498, 4497, 4496, 3990, 3179, 2624,
	1252, 3181, 108, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 691, 4411, 1503, 2757, 4410,
	3302, 1383, 3304, 3305, 3350, 4320, 2756, 4207, 4190, 4153,
	3267, 3268, 3269, 3270, 3271, 3357, 4098, 3912, 3311, 692,
	102, 3911, 680, 3639, 3014, 3381, 3377, 702, 4453, 598,
	4629, 4628, 3367, 2983, 2984, 2985, 2879, 3438, 3471, 3039,
	3675, 3292, 3037, 3036, 2819, 2798, 163, 2795, 3303, 2761,
	2605, 2069, 163, 163, 640, 640, 640, 3310, 3423, 163,
	1472, 1211, 1210, 4628, 4629, 4203, 3398, 2245, 3169, 684,
	688, 687, 4514, 3372, 104, 3258, 3361, 3362, 3363, 68,
	3364, 3365, 4380, 3360, 4242, 65, 4244, 23, 2512, 4243,
	22, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 3505, 3416, 1503, 4245, 24, 3440, 4246,
	25, 4240, 18, 4239, 17, 1, 680, 4238, 16, 4313,
	3451, 4241, 19, 4237, 15, 1487, 3380, 1490, 4231, 11,
	678, 3379, 3450, 50, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 2595, 1488, 1489, 1486, 4266, 39, 4264, 37, 2131,
	3418, 3406, 3665, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 4263, 36, 1503, 4267, 40,
	4262, 32, 4261, 31, 4260, 30, 3500, 4257, 27, 1612,
	1612, 1612, 1612, 4256, 26, 597, 3507, 3508, 3509, 3455,
	4236, 14, 3802, 3514, 3515, 3605, 3517, 3457, 3458, 4233,
	13, 4232, 12, 3801, 3473, 4230, 10, 3808, 3500, 3428,
	3535, 3431, 2995, 3540, 3460, 4308, 4174, 3818, 3465, 1725,
	4002, 1189, 3469, 3470, 2531, 3472, 1302, 3483, 3484, 3485,
	3486, 2649, 3501, 4321, 3502, 3572, 4185, 4187, 3537, 3075,
	3785, 3492, 3784, 2988, 3534, 2987, 1296, 2582, 2111, 3078,
	2918, 3637, 3615, 3079, 2545, 1705, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3068, 4205,
	1503, 2623, 2154, 3632, 2606, 1363, 3671, 2453, 2458, 3456,
	3950, 3710, 3558, 3559, 4107, 3709, 3708, 2872, 1153, 3570,
	3568, 117, 2560, 3571, 1231, 513, 2455, 2941, 4188, 3169,
	3581, 3582, 3583, 3584, 1299, 2940, 2958, 2471, 3597, 3599,
	3601, 3690, 1389, 3958, 2939, 3513, 2938, 4292, 2942, 1640,
	1638, 1639, 1637, 1642, 1641, 3604, 519, 1623, 3526, 4366,
	3528, 3679, 1473, 3300, 745, 3640, 2180, 135, 3111, 3684,
	3686, 3541, 650, 3544, 651, 3546, 3548, 3550, 3552, 3298,
	3618, 124, 133, 521, 1511, 3685, 2755, 163, 2862, 1078,
	2177, 1079, 1071, 4456, 2746, 4199, 4081, 4191, 4355, 3349,
	1458, 4083, 3910, 3757, 3638, 2808, 1559, 2355, 715, 1428,
	662, 3696, 3929, 3653, 4085, 163, 2265, 3649, 3650, 3651,
	729, 3652, 728, 3556, 727, 724, 725, 3655, 2390, 3657,
	4337, 2254, 3286, 3285, 3288, 1485, 1564, 1564, 1564, 1569,
	1569, 1569, 1572, 1573, 1574, 1575, 1569, 1569, 1569, 3413,
	1361, 1165, 108, 3733, 704, 3706, 1432, 1431, 3683, 163,
	1430, 163, 1429, 1423, 673, 1165, 2424, 3025, 1401, 1399,
	1165, 1398, 3700, 3688, 1744, 1611, 2715, 2711, 672, 3707,
	677, 46, 2760, 1250, 3772, 1463, 3672, 4092, 111, 3702,
	3703, 3704, 3705, 1165, 686, 685, 1165, 694, 3366, 29,
	3721, 3722, 21, 20, 3728, 1207, 2640, 3731, 3729, 3735,
	2660, 3732, 1187, 48, 54, 53, 51, 3169, 3739, 3740,
	3741, 3742, 3797, 3798, 3799, 3744, 3764, 3749, 3751, 3753,
	52, 2982, 3637, 3756, 2523, 4365, 3834, 4552, 1282, 4569,
	4601, 1358, 38, 35, 34, 3761, 3762, 33, 4258, 3699,
	4252, 4251, 4254, 4253, 3674, 3832, 4250, 163, 163, 4255,
	4249, 3782, 4248, 1165, 4247, 4265, 163, 1570, 1571, 4235,
	4234, 4536, 3775, 1603, 1604, 1605, 4535, 3783, 5, 1563,
	1565, 1566, 98, 95, 41, 119, 1149, 2, 0, 0,
	1165, 3796, 0, 0, 0, 3800, 3836, 3849, 3850, 0,
	0, 3838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3555, 3835, 3557, 0, 0,
	0, 0, 0, 3851, 0, 0, 0, 3500, 0, 0,
	3833, 0, 3868, 3578, 3579, 3580, 0, 0, 0, 0,
	0, 0, 0, 3857, 0, 0, 0, 3602, 0, 0,
	0, 0, 3500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3845, 0, 0, 0, 0, 3081, 3852,
	3878, 3874, 0, 0, 0, 3087, 0, 0, 0, 0,
	3837, 0, 0, 0, 0, 3907, 0, 3840, 3866, 0,
	0, 0, 0, 0, 3875, 0, 0, 3077, 3088, 0,
	0, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282,
	3283, 3284, 0, 0, 0, 0, 0, 0, 3899, 3898,
	3900, 0, 0, 0, 3637, 3637, 0, 0, 3913, 3915,
	0, 0, 0, 3216, 0, 0, 0, 0, 3936, 0,
	0, 3690, 0, 0, 0, 0, 676, 0, 0, 3941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3952, 0, 0, 0, 0, 3895, 0, 0, 0,
	107, 163, 0, 0, 3893, 0, 163, 3300, 0, 163,
	163, 163, 0, 0, 0, 0, 0, 0, 3933, 0,
	0, 0, 3169, 3298, 0, 0, 0, 0, 0, 0,
	3715, 3716, 3717, 0, 0, 2920, 0, 0, 0, 0,
	0, 2929, 2929, 0, 0, 0, 3935, 0, 3982, 0,
	0, 3736, 3737, 3738, 0, 0, 3956, 0, 0, 0,
	0, 1151, 0, 3949, 0, 0, 3754, 0, 0, 0,
	0, 0, 0, 3959, 0, 0, 0, 706, 0, 0,
	0, 0, 108, 3943, 0, 0, 3932, 0, 0, 3940,
	3988, 3944, 1165, 0, 163, 0, 670, 3980, 0, 0,
	3983, 0, 1165, 1165, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3357, 0, 0, 0, 3987, 163, 640, 1165, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 3169, 0, 3357,
	0, 0, 0, 0, 640, 3966, 3976, 3977, 3975, 0,
	0, 3965, 0, 0, 0, 0, 0, 3253, 0, 0,
	0, 0, 0, 4060, 0, 3991, 0, 3992, 0, 1165,
	0, 0, 108, 640, 3169, 1165, 0, 0, 3978, 3979,
	0, 640, 4005, 4020, 4001, 4015, 0, 0, 4023, 0,
	0, 0, 4038, 0, 0, 0, 0, 4034, 0, 3989,
	0, 0, 4031, 4037, 0, 4053, 0, 4054, 1165, 1165,
	0, 0, 0, 0, 0, 0, 680, 3936, 4103, 0,
	4069, 0, 0, 0, 0, 4042, 4043, 3945, 3946, 3947,
	3948, 0, 0, 4052, 4111, 4112, 4055, 0, 4057, 0,
	4059, 0, 0, 0, 0, 0, 0, 4102, 0, 3664,
	2213, 2214, 2215, 0, 0, 0, 0, 4067, 0, 0,
	0, 0, 4100, 0, 0, 0, 0, 4045, 4046, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 3168, 0, 1503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4115, 4101, 4104, 1165, 0,
	4106, 0, 4131, 0, 4133, 4117, 1165, 1165, 1165, 0,
	0, 0, 4097, 0, 0, 3643, 3644, 3645, 3646, 3647,
	0, 4118, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 163, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 4138, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0,
	0, 0, 0, 0, 0, 2332, 0, 0, 0, 0,
	0, 0, 0, 2336, 3690, 3169, 0, 0, 4206, 4158,
	4155, 4157, 0, 0, 4211, 0, 0, 4159, 4161, 0,
	4168, 0, 1165, 4181, 3357, 0, 4130, 0, 0, 0,
	4156, 0, 1151, 4204, 1151, 4170, 2399, 2400, 4172, 4167,
	0, 4224, 0, 2406, 2407, 2408, 2409, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 4084, 4087, 3219, 0,
	0, 4222, 2422, 4209, 0, 0, 1165, 4202, 4169, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 0, 4305,
	0, 0, 0, 0, 0, 0, 1540, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 3169,
	0, 1503, 4171, 0, 0, 4283, 0, 3168, 0, 0,
	0, 493, 0, 0, 0, 108, 0, 2929, 2929, 2929,
	0, 2929, 2929, 4300, 0, 4297, 0, 493, 0, 3300,
	3899, 3898, 4310, 0, 0, 4341, 0, 4303, 0, 4306,
	3357, 0, 163, 108, 0, 3298, 4312, 4301, 0, 4319,
	0, 0, 0, 0, 0, 0, 4327, 0, 0, 0,
	0, 0, 0, 4347, 4340, 0, 4343, 0, 4344, 0,
	0, 4350, 0, 163, 0, 1151, 0, 1151, 4117, 0,
	0, 0, 0, 1151, 0, 0, 0, 1165, 1165, 1165,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 163, 640, 0, 0, 0, 1165, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4407, 0,
	0, 4370, 4393, 4349, 640, 0, 1165, 3266, 640, 0,
	0, 0, 640, 640, 0, 640, 0, 0, 0, 4403,
	0, 4390, 0, 1540, 0, 0, 0, 0, 163, 163,
	163, 163, 0, 0, 0, 0, 4415, 4397, 4404, 0,
	4354, 4394, 4358, 4401, 3899, 3898, 4402, 0, 4412, 4376,
	0, 4413, 493, 2929, 0, 4385, 3357, 0, 0, 0,
	493, 493, 493, 493, 1165, 0, 0, 1165, 493, 493,
	1165, 493, 0, 0, 0, 4421, 4437, 4466, 4430, 0,
	1165, 0, 1165, 598, 493, 493, 1165, 163, 493, 4478,
	4434, 4463, 0, 1165, 4443, 1165, 1165, 1165, 1165, 1165,
	1165, 0, 4465, 0, 4484, 0, 0, 0, 0, 4477,
	0, 4469, 0, 0, 0, 0, 0, 1151, 3168, 4087,
	1151, 4468, 0, 4399, 0, 0, 1151, 1151, 1151, 1151,
	0, 1151, 1151, 4502, 0, 1151, 1151, 4470, 4502, 0,
	4483, 0, 4502, 4512, 4489, 4485, 0, 3637, 1151, 0,
	4437, 4499, 0, 0, 0, 4518, 1165, 0, 4486, 0,
	0, 0, 1165, 3300, 0, 0, 4533, 0, 0, 4513,
	0, 4515, 1151, 4431, 4500, 1151, 163, 4522, 1151, 3298,
	4529, 1165, 4519, 0, 4541, 4531, 4540, 0, 0, 4539,
	4549, 2444, 4560, 4359, 4363, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 4377, 4538, 4455, 598, 4537, 4551, 0, 4493,
	0, 4527, 4495, 4572, 0, 0, 1461, 0, 4467, 4504,
	4505, 4506, 0, 1151, 4509, 0, 0, 1151, 0, 1151,
	4595, 0, 0, 1151, 4502, 0, 4502, 0, 0, 0,
	4604, 0, 0, 0, 1151, 1151, 1151, 1151, 0, 1151,
	0, 4502, 4502, 4502, 0, 0, 4502, 4577, 0, 0,
	4579, 0, 0, 0, 4545, 0, 1165, 4547, 0, 0,
	0, 1165, 3663, 0, 157, 0, 4626, 1151, 4624, 1151,
	538, 1151, 0, 0, 4502, 157, 4502, 4438, 558, 108,
	4639, 4637, 0, 0, 0, 0, 0, 0, 0, 0,
	3252, 0, 0, 0, 660, 0, 3168, 4651, 0, 0,
	0, 1151, 4657, 157, 2570, 4593, 0, 1151, 4502, 0,
	0, 0, 0, 0, 0, 1151, 660, 703, 0, 0,
	4571, 0, 4502, 1088, 0, 0, 4575, 157, 0, 4611,
	0, 1151, 0, 0, 1151, 0, 0, 0, 4502, 0,
	0, 0, 0, 4592, 1151, 0, 0, 0, 0, 157,
	1151, 4502, 0, 0, 0, 0, 0, 4502, 0, 0,
	0, 0, 157, 4634, 4507, 0, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0,
	1503, 0, 0, 0, 0, 0, 163, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4662,
	0, 2631, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 3197, 0, 1503, 0, 0, 1165,
	0, 0, 0, 4567, 0, 163, 4674, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 3194, 640, 0, 0,
	0, 0, 2725, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0,
	3191, 0, 2742, 493, 0, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 2774, 493, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 0, 0, 1503, 0, 493, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 4638, 0,
	1503, 0, 0, 0, 0, 4643, 0, 0, 2792, 0,
	0, 0, 0, 0, 2775, 0, 2776, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0,
	0, 1503, 0, 0, 2745, 0, 0, 0, 0, 2784,
	2785, 2786, 0, 0, 0, 2790, 0, 2793, 0, 0,
	2796, 3168, 0, 2799, 2800, 0, 0, 0, 2805, 2806,
	0, 0, 0, 1165, 2812, 2813, 2814, 0, 0, 2815,
	0, 2816, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 2638, 2639, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0, 1503,
	0, 2821, 2822, 2823, 2824, 0, 0, 2828, 2829, 2830,
	2831, 2832, 0, 0, 0, 0, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 0, 2849,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 163, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 3168, 0, 0, 493, 0, 0, 2929,
	2929, 1165, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 0, 584, 595, 577, 0, 0, 0, 2929, 2929,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 493, 1165, 493, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 2242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3185, 2280, 0, 0, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	575, 578, 0, 0, 0, 0, 0, 0, 0, 583,
	0, 0, 640, 3221, 3222, 3223, 3224, 3225, 3226, 0,
	493, 0, 0, 0, 0, 0, 0, 587, 0, 2340,
	0, 0, 591, 2348, 493, 0, 0, 163, 3168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 3060, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3096,
	0, 0, 0, 0, 0, 0, 0, 0, 3107, 0,
	579, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 3127, 3128, 3129, 3130, 3131, 3132,
	3133, 3134, 0, 0, 3137, 3138, 3139, 3140, 3141, 3142,
	3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 0, 3173, 3174,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 493, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 581, 588,
	2126, 592, 593, 596, 0, 0, 0, 1165, 0, 0,
	0, 0, 163, 0, 0, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	1088, 0, 0, 0, 0, 1088, 0, 0, 3312, 3313,
	3314, 1165, 3318, 3319, 3320, 3321, 3322, 0, 0, 3325,
	3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335,
	3336, 3337, 3338, 3339, 3340, 3341, 0, 3343, 3344, 3345,
	3346, 3347, 3348, 0, 3351, 3352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 1165, 0, 0, 0, 157, 0, 0,
	0, 0, 1721, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 157, 0, 0, 1721, 558, 0, 0, 1755,
	1165, 0, 0, 1757, 3620, 3621, 3622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 157, 157, 157, 157, 0, 157, 0,
	0, 0, 0, 3641, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 3648, 2072, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 3659,
	3660, 3661, 3662, 0, 0, 0, 0, 3667, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 3677, 3678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 3524, 0, 0, 0, 0, 3687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3563, 3564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 157, 0, 0, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 1755, 157, 157, 157, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2629, 0, 0, 2241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 0, 2733, 2734, 0, 0, 2736, 2737, 0, 0,
	2739, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 0, 0, 0, 3718, 0, 3720,
	0, 0, 0, 0, 0, 3726, 3727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	157, 2241, 2241, 2241, 2770, 2771, 2772, 2241, 0, 2241,
	2241, 2241, 0, 2241, 2241, 0, 0, 0, 1088, 2241,
	0, 0, 0, 0, 0, 0, 0, 2053, 0, 0,
	0, 0, 0, 2241, 2241, 2241, 2241, 0, 0, 2241,
	2241, 2241, 2241, 2241, 0, 0, 0, 0, 2241, 2241,
	2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241,
	0, 0, 0, 0, 157, 157, 157, 2802, 2803, 2804,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3921, 3922, 3923, 0, 3925, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3934, 0, 3937, 3938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3942, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 3867, 0, 157, 0, 0,
	0, 0, 0, 157, 157, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3981, 0, 0, 0, 0, 0, 0, 0,
	3984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3019, 0, 0, 0, 42,
	45, 0, 0, 0, 3023, 3024, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 75, 76, 0, 0, 0, 0, 0,
	72, 0, 0, 158, 0, 496, 0, 0, 0, 0,
	4047, 0, 0, 88, 158, 0, 0, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	63, 0, 0, 661, 89, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 4063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 3957, 1089, 0, 0, 0, 158, 1157, 0, 0,
	0, 0, 0, 4088, 4089, 4090, 4091, 0, 0, 0,
	0, 0, 0, 4095, 4096, 0, 0, 0, 158, 557,
	0, 0, 0, 0, 0, 0, 0, 4105, 0, 0,
	496, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 80, 0, 96, 0, 0,
	0, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 3220, 0, 0, 0, 0, 0, 157, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	3246, 0, 3247, 3248, 0, 3249, 3250, 0, 0, 3251,
	0, 0, 0, 0, 77, 0, 157, 0, 0, 0,
	0, 746, 0, 0, 0, 3260, 3261, 3262, 3263, 0,
	0, 0, 0, 0, 0, 0, 4176, 4177, 4178, 4179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 4195, 0,
	157, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 4208, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 4217, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 159, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 160, 159,
	2707, 4119, 0, 4121, 4122, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 4302, 0, 60, 0, 0, 0,
	0, 0, 160, 1161, 1394, 4311, 2656, 159, 0, 0,
	0, 0, 2680, 0, 0, 0, 0, 0, 660, 157,
	0, 0, 0, 0, 160, 4331, 0, 660, 0, 0,
	4342, 159, 1158, 0, 0, 4345, 4346, 160, 0, 0,
	0, 0, 0, 0, 2655, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 1088, 1088, 82, 83, 0, 0,
	1757, 2677, 0, 0, 0, 494, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 81, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 2241, 2241, 2241, 2241, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2241, 2646, 3494, 2658, 0, 3493, 2657, 2648, 4422,
	0, 2681, 0, 4425, 0, 0, 4299, 0, 0, 0,
	158, 0, 2690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2679, 2701,
	2652, 2651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 157, 2647, 0,
	157, 2859, 1757, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3495, 3496, 0, 0, 2671, 3623,
	3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 0, 0,
	0, 0, 661, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 3642, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4528, 0, 0, 0, 1089, 0, 0,
	0, 2697, 0, 0, 2913, 0, 0, 0, 496, 0,
	3668, 3669, 3670, 0, 85, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 1394, 0,
	0, 0, 4573, 4574, 0, 0, 2885, 2687, 0, 0,
	0, 0, 0, 0, 0, 4585, 157, 0, 4587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 1087,
	0, 0, 2874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2882, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4623, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3766, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	3774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2895, 0, 2684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 1757, 2884, 2907, 0, 0, 0, 0, 160, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 157, 703,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	0, 2674, 2675, 0, 0, 2678, 0, 159, 2683, 0,
	2688, 2685, 2686, 0, 2689, 2682, 0, 2692, 2691, 2693,
	0, 2694, 2695, 2696, 0, 0, 2698, 2699, 2700, 2702,
	2703, 2704, 0, 494, 0, 2676, 2706, 0, 0, 0,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	2911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2892, 0, 0, 0, 0, 158, 0, 0, 1089,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2672,
	0, 3917, 3918, 3919, 3920, 0, 0, 0, 0, 3924,
	0, 0, 0, 3927, 3928, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 2904, 0, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 1087, 1624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 157, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 158, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2913, 2877, 0, 0, 496, 496, 496, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 158, 158, 158, 1394, 158, 0, 0,
	0, 0, 2889, 0, 2885, 0, 0, 1711, 0, 157,
	157, 157, 157, 1720, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 557, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2878, 2880, 0, 157, 2883,
	0, 0, 2888, 0, 2893, 2890, 2891, 0, 2894, 2887,
	0, 2897, 2896, 2898, 0, 2899, 2900, 2901, 0, 0,
	2903, 2905, 2906, 2908, 2909, 2910, 0, 0, 0, 2881,
	2912, 0, 160, 0, 0, 0, 0, 0, 0, 2914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4070, 4071, 4072, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 2110, 0, 0, 0,
	0, 0, 158, 158, 0, 0, 0, 661, 0, 2178,
	0, 0, 0, 0, 2132, 0, 0, 660, 0, 0,
	0, 158, 0, 2886, 158, 158, 158, 158, 0, 0,
	4110, 0, 0, 0, 2895, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4127, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	2884, 2907, 0, 2876, 0, 0, 0, 0, 0, 0,
	0, 2182, 0, 494, 160, 0, 0, 160, 0, 0,
	0, 159, 0, 0, 0, 1754, 0, 0, 158, 0,
	0, 0, 0, 0, 1088, 496, 0, 0, 0, 2276,
	4154, 0, 0, 159, 0, 0, 159, 160, 160, 160,
	160, 160, 0, 160, 0, 0, 0, 1759, 4163, 0,
	0, 494, 494, 494, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 159, 159, 159,
	159, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2902, 0, 0, 0, 661, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 2359, 2911, 0,
	4210, 0, 0, 0, 0, 0, 0, 0, 0, 2892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2182, 0, 2182, 0, 0, 2318, 0,
	0, 0, 0, 0, 0, 2319, 0, 0, 0, 0,
	2182, 2182, 0, 158, 158, 158, 0, 157, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2276, 1087,
	0, 1157, 0, 0, 0, 0, 0, 0, 160, 160,
	0, 0, 2904, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 160, 160, 160, 0, 0, 0, 159, 159, 0,
	0, 0, 0, 0, 2179, 0, 0, 0, 0, 0,
	160, 0, 0, 1087, 0, 0, 159, 0, 0, 159,
	159, 159, 159, 0, 0, 0, 0, 0, 0, 0,
	2182, 0, 0, 1156, 0, 0, 0, 0, 0, 159,
	0, 2877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 4383,
	0, 0, 158, 158, 160, 0, 0, 0, 0, 158,
	2889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 2878, 2880, 160, 0, 2883, 0, 0,
	2888, 0, 2893, 2890, 2891, 0, 2894, 2887, 0, 2897,
	2896, 2898, 0, 2899, 2900, 2901, 0, 0, 2903, 2905,
	2906, 2908, 2909, 2910, 159, 0, 0, 2881, 2912, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	160, 160, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 157, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 159, 159,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4516, 0, 0, 0, 0, 0,
	0, 0, 0, 2275, 0, 0, 1158, 0, 0, 0,
	0, 0, 4532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 2876, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 160, 160,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4275, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 159, 159, 0,
	0, 0, 0, 0, 159, 0, 4268, 158, 0, 4600,
	4603, 4599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2592, 0, 0,
	0, 0, 2592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 158, 0,
	0, 0, 0, 0, 0, 2592, 661, 0, 2592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4271, 1089, 1089, 0, 0, 0, 157, 2276,
	0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 0,
	4277, 0, 4281, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2727, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 2749, 0, 0, 1087, 1087, 0, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 160, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 4282, 4270, 0, 66, 67, 73, 0, 74, 0,
	1088, 0, 89, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 0, 157, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4268,
	0, 158, 0, 0, 4678, 0, 158, 0, 0, 158,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 1087, 49, 90, 56, 55,
	58, 0, 0, 0, 158, 96, 0, 0, 0, 0,
	0, 4269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 2275, 158, 57, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 2978, 0, 0, 87, 0, 0,
	0, 660, 0, 0, 2986, 2990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3009,
	0, 0, 69, 70, 0, 4271, 0, 0, 2178, 85,
	0, 0, 0, 0, 0, 4280, 4272, 4273, 4274, 4278,
	4279, 4276, 0, 4277, 1088, 4281, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 2592, 0, 0, 0, 0, 0, 3035, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 160, 0, 0,
	0, 0, 160, 0, 0, 160, 0, 0, 0, 0,
	2182, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 1759, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 158, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 4282, 4270, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3183, 0, 0, 0, 0, 0, 0, 0, 3183, 3183,
	3183, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 160, 2182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2182, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 494, 0, 0, 3299,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 2179, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 158, 158,
	158, 158, 159, 0, 0, 0, 0, 0, 0, 3424,
	3425, 3426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 3183, 3183,
	496, 496, 496, 496, 0, 0, 0, 0, 496, 496,
	0, 496, 0, 0, 0, 0, 0, 0, 3463, 0,
	0, 0, 0, 0, 496, 496, 0, 158, 496, 0,
	42, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3510, 0, 0, 2727,
	0, 0, 3516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2727, 0, 2727, 89, 0, 0, 3536, 0,
	0, 4275, 0, 0, 0, 2727, 0, 2727, 3545, 2727,
	2727, 2727, 2727, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 4268, 0, 0, 0, 494, 4672, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 3183, 0,
	0, 0, 0, 0, 3619, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 160, 159, 0,
	0, 0, 0, 3635, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 3299, 0, 47, 2178, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 159, 0, 96, 0,
	0, 0, 0, 0, 4269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 160, 160, 160, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 89, 0, 57,
	0, 0, 0, 4275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 159, 159, 159, 0, 0, 0,
	0, 0, 0, 0, 4268, 1087, 0, 0, 2182, 4666,
	0, 0, 0, 2727, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 160, 0, 494, 494, 494, 494, 0,
	0, 0, 0, 494, 494, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	494, 0, 159, 494, 0, 69, 70, 0, 4271, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 4280, 4272,
	4273, 4274, 4278, 4279, 4276, 0, 4277, 0, 4281, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 158, 4269, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	2990, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 3183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4282, 4270, 0,
	66, 67, 73, 0, 74, 0, 0, 69, 70, 0,
	4271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4280, 4272, 4273, 4274, 4278, 4279, 4276, 0, 4277, 0,
	4281, 2179, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 661, 160, 71, 0, 3902, 0, 0, 0, 93,
	661, 158, 47, 0, 0, 0, 0, 3299, 0, 4282,
	4270, 2182, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4275, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	159, 0, 0, 87, 0, 0, 496, 0, 0, 0,
	0, 4268, 0, 0, 0, 0, 4658, 0, 0, 1087,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	494, 0, 0, 3183, 0, 0, 3183, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4269, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 496, 0, 496, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 89,
	0, 0, 0, 0, 0, 4275, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4268, 0, 0, 0,
	0, 4631, 0, 0, 4049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4056, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4271, 0, 0,
	0, 0, 0, 0, 0, 2182, 0, 4280, 4272, 4273,
	4274, 4278, 4279, 4276, 0, 4277, 159, 4281, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 84, 4269, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	496, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 496, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4282, 4270, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 69,
	70, 0, 4271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 0,
	4277, 0, 4281, 0, 0, 0, 0, 78, 0, 79,
	4193, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 494, 0, 494, 0,
	494, 0, 84, 0, 0, 0, 0, 0, 0, 3183,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4282, 4270, 0, 66, 67, 73, 0, 74, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 3183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 2182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 159, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4193, 0, 0, 0, 0, 0, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 3299, 0, 0, 0, 494, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 2182, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 85,
	0, 0, 2182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 0, 0, 0, 903, 1045, 2182, 0, 451, 804,
	1049, 890, 913, 1059, 919, 921, 986, 865, 961, 357,
	910, 866, 0, 0, 857, 708, 858, 891, 259, 707,
	1019, 964, 1047, 947, 979, 989, 258, 244, 954, 953,
	1036, 902, 901, 984, 1032, 1046, 0, 494, 172, 480,
	190, 812, 314, 0, 0, 478, 425, 339, 0, 0,
	945, 0, 796, 797, 930, 988, 877, 975, 1051, 911,
	980, 1052, 89, 0, 0, 0, 0, 733, 559, 734,
	736, 737, 738, 739, 0, 0, 171, 735, 740, 741,
	742, 0, 940, 985, 1064, 856, 705, 722, 861, 811,
	4362, 1037, 898, 899, 263, 0, 0, 0, 0, 0,
	0, 0, 943, 960, 1004, 927, 0, 471, 991, 1000,
	1014, 920, 376, 283, 0, 0, 0, 0, 719, 720,
	0, 0, 0, 0, 827, 0, 721, 0, 871, 717,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 723, 0, 0, 0, 876, 854, 896, 1006,
	855, 853, 340, 868, 799, 1035, 928, 301, 191, 1041,
	926, 825, 994, 872, 1023, 1057, 914, 311, 870, 195,
	867, 873, 912, 353, 1003, 1009, 809, 198, 313, 1020,
	892, 905, 730, 0, 392, 981, 470, 711, 278, 0,
	967, 391, 315, 463, 995, 1043, 469, 915, 445, 479,
	484, 271, 948, 234, 422, 261, 254, 897, 1013, 860,
	284, 375, 249, 306, 931, 987, 893, 241, 998, 974,
	1025, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 1021, 1008, 1027, 888, 874, 880, 875, 904,
	1044, 293, 285, 1028, 1026, 906, 361, 224, 958, 951,
	944, 813, 473, 1060, 257, 1010, 475, 180, 408, 407,
	918, 292, 1011, 181, 170, 385, 182, 302, 204, 1031,
	488, 220, 309, 453, 710, 277, 352, 983, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1007, 382,
	410, 458, 222, 428, 173, 176, 185, 400, 186, 187,
	1050, 322, 266, 270, 286, 297, 982, 389, 429, 476,
	976, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 1005, 216, 237, 430, 210, 1039, 1022, 969, 933,
	939, 862, 0, 209, 934, 935, 936, 937, 938, 1001,
	895, 907, 887, 977, 886, 281, 993, 731, 732, 246,
	802, 1054, 211, 869, 1053, 349, 356, 348, 1056, 1055,
	462, 1040, 970, 957, 955, 863, 1038, 968, 956, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	959, 427, 320, 0, 206, 0, 426, 1048, 1066, 442,
	226, 881, 1015, 457, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 997, 1063, 360, 393,
	233, 472, 423, 262, 879, 1067, 826, 814, 815, 818,
	962, 963, 816, 819, 820, 828, 800, 801, 803, 805,
	806, 807, 950, 1042, 864, 810, 1018, 821, 822, 823,
	824, 990, 1061, 798, 242, 747, 840, 841, 842, 748,
	843, 844, 749, 750, 845, 846, 847, 848, 751, 849,
	850, 851, 829, 830, 831, 832, 833, 834, 835, 836,
	839, 837, 838, 0, 946, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 808, 199, 212, 312,
	1062, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 1016, 973, 0, 923, 925, 924, 883, 885,
	884, 882, 1065, 346, 1034, 852, 859, 878, 889, 894,
	900, 908, 909, 917, 922, 932, 941, 942, 952, 965,
	966, 972, 996, 999, 1012, 1017, 1024, 1029, 1030, 474,
	252, 949, 971, 1002, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 929, 196, 0,
	0, 202, 0, 203, 205, 916, 201, 1033, 1058, 978,
	992, 903, 1045, 0, 0, 451, 804, 1049, 890, 913,
	1059, 919, 921, 986, 865, 961, 357, 910, 866, 0,
	0, 857, 708, 858, 891, 259, 707, 1019, 964, 1047,
	947, 979, 989, 258, 244, 954, 953, 1036, 902, 901,
	984, 1032, 1046, 0, 0, 172, 480, 190, 812, 314,
	0, 0, 478, 425, 339, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1051, 911, 980, 1052, 89,
	0, 697, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 171, 735, 740, 741, 742, 0, 940,
	985, 1064, 856, 705, 722, 861, 811, 0, 1037, 898,
	899, 263, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 471, 991, 1000, 1014, 920, 376,
	283, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 340,
	868, 799, 1035, 928, 301, 191, 1041, 926, 825, 994,
	872, 1023, 1057, 914, 311, 870, 195, 867, 873, 912,
	353, 1003, 1009, 809, 198, 313, 1020, 892, 905, 730,
	0, 392, 981, 470, 711, 278, 0, 967, 391, 315,
	463, 995, 1043, 469, 915, 445, 479, 484, 271, 948,
	234, 422, 261, 254, 897, 1013, 860, 284, 375, 249,
	306, 931, 987, 893, 241, 998, 974, 1025, 421, 460,
	200, 334, 461, 483, 166, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 1021,
	1008, 1027, 888, 874, 880, 875, 904, 1044, 293, 285,
	1028, 1026, 906, 361, 224, 958, 951, 944, 813, 473,
	1060, 257, 1010, 475, 180, 408, 407, 918, 292, 1011,
	181, 170, 385, 182, 302, 204, 1031, 488, 220, 309,
	453, 710, 277, 352, 983, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1007, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 1050, 322, 266,
	270, 286, 297, 982, 389, 429, 476, 976, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 1005, 216,
	237, 430, 210, 1039, 1022, 969, 933, 939, 862, 0,
	209, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 281, 993, 731, 732, 246, 802, 1054, 211,
	869, 1053, 349, 356, 348, 1056, 1055, 462, 1040, 970,
	957, 955, 863, 1038, 968, 956, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 959, 427, 320,
	0, 206, 0, 426, 1048, 1066, 442, 226, 881, 1015,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 997, 1063, 360, 393, 233, 472, 423,
	262, 879, 1067, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1042, 864, 810, 1018, 821, 822, 823, 824, 990, 1061,
	798, 242, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 808, 199, 212, 312, 1062, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 1016,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1065,
	346, 1034, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1012, 1017, 1024, 1029, 1030, 474, 252, 949, 971,
	1002, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 929, 196, 0, 0, 202, 0,
	203, 205, 916, 201, 1033, 1058, 978, 992, 903, 1045,
	0, 0, 451, 804, 1049, 890, 913, 1059, 919, 921,
	986, 865, 961, 357, 910, 866, 0, 0, 857, 708,
	858, 891, 259, 707, 1019, 964, 1047, 947, 979, 989,
	258, 244, 954, 953, 1036, 902, 901, 984, 1032, 1046,
	0, 0, 172, 480, 190, 812, 314, 0, 0, 478,
	425, 339, 0, 0, 945, 0, 796, 797, 930, 988,
	877, 975, 1051, 911, 980, 1052, 89, 0, 0, 0,
	0, 733, 559, 734, 736, 737, 738, 739, 0, 0,
	171, 735, 740, 741, 742, 0, 940, 985, 1064, 856,
	705, 722, 861, 811, 0, 1037, 898, 899, 263, 0,
	0, 0, 0, 0, 0, 0, 943, 960, 1004, 927,
	0, 471, 991, 1000, 1014, 920, 376, 283, 0, 0,
	0, 0, 719, 720, 2239, 0, 0, 0, 827, 0,
	721, 0, 871, 717, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 723, 0, 0, 0,
	876, 854, 896, 1006, 855, 853, 340, 868, 799, 1035,
	928, 301, 191, 1041, 926, 825, 994, 872, 1023, 1057,
	914, 311, 870, 195, 867, 873, 912, 353, 1003, 1009,
	809, 198, 313, 1020, 892, 905, 730, 0, 392, 981,
	470, 711, 278, 0, 967, 391, 315, 463, 995, 1043,
	469, 915, 445, 479, 484, 271, 948, 234, 422, 261,
	254, 897, 1013, 860, 284, 375, 249, 306, 931, 987,
	893, 241, 998, 974, 1025, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 1021, 1008, 1027, 888,
	874, 880, 875, 904, 1044, 293, 285, 1028, 1026, 906,
	361, 224, 958, 951, 944, 813, 473, 1060, 257, 1010,
	475, 180, 408, 407, 918, 292, 1011, 181, 170, 385,
	182, 302, 204, 1031, 488, 220, 309, 453, 710, 277,
	352, 983, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1007, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 1050, 322, 266, 270, 286, 297,
	982, 389, 429, 476, 976, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 1005, 216, 237, 430, 210,
	1039, 1022, 969, 933, 939, 862, 0, 209, 934, 935,
	936, 937, 938, 1001, 895, 907, 887, 977, 886, 281,
	993, 731, 732, 246, 802, 1054, 211, 869, 1053, 349,
	356, 348, 1056, 1055, 462, 1040, 970, 957, 955, 863,
	1038, 968, 956, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 959, 427, 320, 0, 206, 0,
	426, 1048, 1066, 442, 226, 881, 1015, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	997, 1063, 360, 393, 233, 472, 423, 262, 879, 1067,
	826, 814, 815, 818, 962, 963, 816, 819, 820, 828,
	800, 801, 803, 805, 806, 807, 950, 1042, 864, 810,
	1018, 821, 822, 823, 824, 990, 1061, 798, 242, 747,
	840, 841, 842, 748, 843, 844, 749, 750, 845, 846,
	847, 848, 751, 849, 850, 851, 829, 830, 831, 832,
	833, 834, 835, 836, 839, 837, 838, 0, 946, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	808, 199, 212, 312, 1062, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 1016, 973, 0, 923,
	925, 924, 883, 885, 884, 882, 1065, 346, 1034, 852,
	859, 878, 889, 894, 900, 908, 909, 917, 922, 932,
	941, 942, 952, 965, 966, 972, 996, 999, 1012, 1017,
	1024, 1029, 1030, 474, 252, 949, 971, 1002, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 929, 196, 0, 0, 202, 0, 203, 205, 916,
	201, 1033, 1058, 978, 992, 903, 1045, 0, 0, 451,
	804, 1049, 890, 913, 1059, 919, 921, 986, 865, 961,
	357, 910, 866, 0, 0, 857, 708, 858, 891, 259,
	707, 1019, 964, 1047, 947, 979, 989, 258, 244, 954,
	953, 1036, 902, 901, 984, 1032, 1046, 0, 0, 172,
	480, 190, 812, 314, 0, 0, 478, 425, 339, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1051,
	911, 980, 1052, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 171, 735, 740,
	741, 742, 0, 940, 985, 1064, 856, 705, 722, 861,
	811, 0, 1037, 898, 899, 263, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 471, 991,
	1000, 1014, 920, 376, 283, 0, 0, 0, 0, 719,
	720, 701, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 340, 868, 799, 1035, 928, 301, 191,
	1041, 926, 825, 994, 872, 1023, 1057, 914, 311, 870,
	195, 867, 873, 912, 353, 1003, 1009, 809, 198, 313,
	1020, 892, 905, 730, 0, 392, 981, 470, 711, 278,
	0, 967, 391, 315, 463, 995, 1043, 469, 915, 445,
	479, 484, 271, 948, 234, 422, 261, 254, 897, 1013,
	860, 284, 375, 249, 306, 931, 987, 893, 241, 998,
	974, 1025, 421, 460, 200, 334, 461, 483, 166, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 1021, 1008, 1027, 888, 874, 880, 875,
	904, 1044, 293, 285, 1028, 1026, 906, 361, 224, 958,
	951, 944, 813, 473, 1060, 257, 1010, 475, 180, 408,
	407, 918, 292, 1011, 181, 170, 385, 182, 302, 204,
	1031, 488, 220, 309, 453, 710, 277, 352, 983, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1007,
	382, 410, 458, 222, 428, 173, 176, 185, 400, 186,
	187, 1050, 322, 266, 270, 286, 297, 982, 389, 429,
	476, 976, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 1005, 216, 237, 430, 210, 1039, 1022, 969,
	933, 939, 862, 0, 209, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 281, 993, 731, 732,
	246, 802, 1054, 211, 869, 1053, 349, 356, 348, 1056,
	1055, 462, 1040, 970, 957, 955, 863, 1038, 968, 956,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 959, 427, 320, 0, 206, 0, 426, 1048, 1066,
	442, 226, 881, 1015, 457, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 997, 1063, 360,
	393, 233, 472, 423, 262, 879, 1067, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1042, 864, 810, 1018, 821, 822,
	823, 824, 990, 1061, 798, 242, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 808, 199, 212,
	312, 1062, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 1016, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1065, 346, 1034, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1012, 1017, 1024, 1029, 1030,
	474, 252, 949, 971, 1002, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 929, 196,
	0, 0, 202, 0, 203, 205, 916, 201, 1033, 1058,
	978, 992, 903, 1045, 0, 0, 451, 804, 1049, 890,
	913, 1059, 919, 921, 986, 865, 961, 357, 910, 866,
	0, 0, 857, 708, 858, 891, 259, 707, 1019, 964,
	1047, 947, 979, 989, 258, 244, 954, 953, 1036, 902,
	901, 984, 1032, 1046, 0, 0, 172, 480, 190, 812,
	314, 0, 0, 478, 425, 339, 0, 0, 945, 0,
	796, 797, 930, 988, 877, 975, 1051, 911, 2446, 1052,
	89, 0, 0, 0, 0, 2448, 559, 734, 736, 737,
	738, 739, 0, 0, 171, 735, 740, 741, 742, 2447,
	940, 985, 1064, 856, 705, 722, 861, 811, 0, 1037,
	898, 899, 263, 0, 0, 0, 0, 0, 0, 0,
	943, 960, 1004, 927, 0, 471, 991, 1000, 1014, 920,
	376, 283, 0, 0, 0, 0, 719, 720, 0, 0,
	0, 0, 827, 0, 721, 0, 871, 717, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	723, 0, 0, 0, 876, 854, 896, 1006, 855, 853,
	340, 868, 799, 1035, 928, 301, 191, 1041, 926, 825,
	994, 872, 1023, 1057, 914, 311, 870, 195, 867, 873,
	912, 353, 1003, 1009, 809, 198, 313, 1020, 892, 905,
	730, 0, 392, 981, 470, 711, 278, 0, 967, 391,
	315, 463, 995, 1043, 469, 915, 445, 479, 484, 271,
	948, 234, 422, 261, 254, 897, 1013, 860, 284, 375,
	249, 306, 931, 987, 893, 241, 998, 974, 1025, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	1021, 1008, 1027, 888, 874, 880, 875, 904, 1044, 293,
	285, 1028, 1026, 906, 361, 224, 958, 951, 944, 813,
	473, 1060, 257, 1010, 475, 180, 408, 407, 918, 292,
	1011, 181, 170, 385, 182, 302, 204, 1031, 488, 220,
	309, 453, 710, 277, 352, 983, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1007, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 1050, 322,
	266, 270, 286, 297, 982, 389, 429, 476, 976, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 1005,
	216, 237, 430, 210, 1039, 1022, 969, 933, 939, 862,
	0, 209, 934, 935, 936, 937, 938, 1001, 895, 907,
	887, 977, 886, 281, 993, 731, 732, 246, 802, 1054,
	211, 869, 1053, 349, 356, 348, 1056, 1055, 462, 1040,
	970, 957, 955, 863, 1038, 968, 956, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 959, 427,
	320, 0, 206, 0, 426, 1048, 1066, 442, 226, 881,
	1015, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 997, 1063, 360, 393, 233, 472,
	423, 262, 879, 1067, 826, 814, 815, 818, 962, 963,
	816, 819, 820, 828, 800, 801, 803, 805, 806, 807,
	950, 1042, 864, 810, 1018, 821, 822, 823, 824, 990,
	1061, 798, 242, 747, 840, 841, 842, 748, 843, 844,
	749, 750, 845, 846, 847, 848, 751, 849, 850, 851,
	829, 830, 831, 832, 833, 834, 835, 836, 839, 837,
	838, 0, 946, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 808, 199, 212, 312, 1062, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	1016, 973, 0, 923, 925, 924, 883, 885, 884, 882,
	1065, 346, 1034, 852, 859, 878, 889, 894, 900, 908,
	909, 917, 922, 932, 941, 942, 952, 965, 966, 972,
	996, 999, 1012, 1017, 1024, 1029, 1030, 474, 252, 949,
	971, 1002, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 929, 196, 0, 0, 202,
	0, 203, 205, 916, 201, 1033, 1058, 978, 992, 903,
	1045, 0, 0, 451, 804, 1049, 890, 913, 1059, 919,
	921, 986, 865, 961, 357, 910, 866, 0, 0, 857,
	708, 858, 891, 259, 707, 1019, 964, 1047, 947, 979,
	989, 258, 244, 954, 953, 1036, 902, 901, 984, 1032,
	1046, 0, 0, 172, 480, 190, 812, 314, 0, 0,
	478, 425, 339, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1051, 911, 980, 1052, 89, 0, 0,
	0, 0, 2346, 559, 734, 736, 737, 738, 739, 0,
	0, 171, 735, 740, 741, 742, 0, 940, 985, 1064,
	856, 705, 722, 861, 811, 0, 1037, 898, 899, 263,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 471, 991, 1000, 1014, 920, 376, 283, 0,
	0, 0, 0, 719, 720, 2239, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 340, 868, 799,
	1035, 928, 301, 191, 1041, 926, 825, 994, 872, 1023,
	1057, 914, 311, 870, 195, 867, 873, 912, 353, 1003,
	1009, 809, 198, 313, 1020, 892, 905, 730, 0, 392,
	981, 470, 711, 278, 0, 967, 391, 315, 463, 995,
	1043, 469, 915, 445, 479, 484, 271, 948, 234, 422,
	261, 254, 897, 1013, 860, 284, 375, 249, 306, 931,
	987, 893, 241, 998, 974, 1025, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 1021, 1008, 1027,
	888, 874, 880, 875, 904, 1044, 293, 285, 1028, 1026,
	906, 361, 224, 958, 951, 944, 813, 473, 1060, 257,
	1010, 475, 180, 408, 407, 918, 292, 1011, 181, 170,
	385, 182, 302, 204, 1031, 488, 220, 309, 453, 710,
	277, 352, 983, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1007, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 1050, 322, 266, 270, 286,
	297, 982, 389, 429, 476, 976, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 1005, 216, 237, 430,
	210, 1039, 1022, 969, 933, 939, 862, 0, 209, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	281, 993, 731, 732, 246, 802, 1054, 211, 869, 1053,
	349, 356, 348, 1056, 1055, 462, 1040, 970, 957, 955,
	863, 1038, 968, 956, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 959, 427, 320, 0, 206,
	0, 426, 1048, 1066, 442, 226, 881, 1015, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 997, 1063, 360, 393, 233, 472, 423, 262, 879,
	1067, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1042, 864,
	810, 1018, 821, 822, 823, 824, 990, 1061, 798, 242,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 808, 199, 212, 312, 1062, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 1016, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1065, 346, 1034,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1012,
	1017, 1024, 1029, 1030, 474, 252, 949, 971, 1002, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 929, 196, 0, 0, 202, 0, 203, 205,
	916, 201, 1033, 1058, 978, 992, 903, 1045, 0, 0,
	451, 804, 1049, 890, 913, 1059, 919, 921, 986, 865,
	961, 357, 910, 866, 0, 0, 857, 708, 858, 891,
	259, 707, 1019, 964, 1047, 947, 979, 989, 258, 244,
	954, 953, 1036, 902, 901, 984, 1032, 1046, 0, 0,
	172, 480, 190, 812, 314, 0, 0, 478, 425, 339,
	0, 0, 945, 0, 796, 797, 930, 988, 877, 975,
	1051, 911, 980, 1052, 89, 0, 0, 0, 0, 2343,
	559, 734, 736, 737, 738, 739, 0, 0, 171, 735,
	740, 741, 742, 0, 940, 985, 1064, 856, 705, 722,
	861, 811, 0, 1037, 898, 899, 263, 0, 0, 0,
	0, 0, 0, 0, 943, 960, 1004, 927, 0, 471,
	991, 1000, 1014, 920, 376, 283, 0, 0, 0, 0,
	719, 720, 2239, 0, 0, 0, 827, 0, 721, 0,
	871, 717, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 723, 0, 0, 0, 876, 854,
	896, 1006, 855, 853, 340, 868, 799, 1035, 928, 301,
	191, 1041, 926, 825, 994, 872, 1023, 1057, 914, 311,
	870, 195, 867, 873, 912, 353, 1003, 1009, 809, 198,
	313, 1020, 892, 905, 730, 0, 392, 981, 470, 711,
	278, 0, 967, 391, 315, 463, 995, 1043, 469, 915,
	445, 479, 484, 271, 948, 234, 422, 261, 254, 897,
	1013, 860, 284, 375, 249, 306, 931, 987, 893, 241,
	998, 974, 1025, 421, 460, 200, 334, 461, 483, 166,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 1021, 1008, 1027, 888, 874, 880,
	875, 904, 1044, 293, 285, 1028, 1026, 906, 361, 224,
	958, 951, 944, 813, 473, 1060, 257, 1010, 475, 180,
	408, 407, 918, 292, 1011, 181, 170, 385, 182, 302,
	204, 1031, 488, 220, 309, 453, 710, 277, 352, 983,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1007, 382, 410, 458, 222, 428, 173, 176, 185, 400,
	186, 187, 1050, 322, 266, 270, 286, 297, 982, 389,
	429, 476, 976, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 1005, 216, 237, 430, 210, 1039, 1022,
	969, 933, 939, 862, 0, 209, 934, 935, 936, 937,
	938, 1001, 895, 907, 887, 977, 886, 281, 993, 731,
	732, 246, 802, 1054, 211, 869, 1053, 349, 356, 348,
	1056, 1055, 462, 1040, 970, 957, 955, 863, 1038, 968,
	956, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 959, 427, 320, 0, 206, 0, 426, 1048,
	1066, 442, 226, 881, 1015, 457, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 997, 1063,
	360, 393, 233, 472, 423, 262, 879, 1067, 826, 814,
	815, 818, 962, 963, 816, 819, 820, 828, 800, 801,
	803, 805, 806, 807, 950, 1042, 864, 810, 1018, 821,
	822, 823, 824, 990, 1061, 798, 242, 747, 840, 841,
	842, 748, 843, 844, 749, 750, 845, 846, 847, 848,
	751, 849, 850, 851, 829, 830, 831, 832, 833, 834,
	835, 836, 839, 837, 838, 0, 946, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 808, 199,
	212, 312, 1062, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 1016, 973, 0, 923, 925, 924,
	883, 885, 884, 882, 1065, 346, 1034, 852, 859, 878,
	889, 894, 900, 908, 909, 917, 922, 932, 941, 942,
	952, 965, 966, 972, 996, 999, 1012, 1017, 1024, 1029,
	1030, 474, 252, 949, 971, 1002, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 929,
	196, 0, 0, 202, 0, 203, 205, 916, 201, 1033,
	1058, 978, 992, 903, 1045, 0, 42, 451, 804, 1049,
	890, 913, 1059, 919, 921, 986, 865, 961, 357, 910,
	866, 0, 0, 857, 708, 858, 891, 259, 707, 1019,
	964, 1047, 947, 979, 989, 258, 244, 954, 953, 1036,
	902, 901, 984, 1032, 1046, 0, 0, 172, 480, 190,
	812, 314, 0, 0, 478, 425, 339, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1051, 911, 980,
	1052, 89, 0, 0, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 171, 735, 740, 741, 742,
	0, 940, 985, 1064, 856, 705, 722, 861, 811, 0,
	1037, 898, 899, 263, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 471, 991, 1000, 1014,
	920, 376, 283, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 340, 868, 799, 1543, 928, 301, 191, 1041, 926,
	825, 994, 872, 1023, 1057, 914, 311, 870, 195, 867,
	873, 912, 353, 1003, 1009, 809, 198, 313, 1020, 892,
	905, 730, 0, 392, 981, 470, 711, 278, 0, 967,
	391, 315, 463, 995, 1043, 469, 915, 445, 479, 484,
	271, 948, 234, 422, 261, 254, 897, 1013, 860, 284,
	375, 249, 306, 931, 987, 893, 241, 998, 974, 1025,
	421, 460, 200, 334, 461, 483, 166, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 1021, 1008, 1027, 888, 874, 880, 875, 904, 1044,
	293, 285, 1028, 1026, 906, 361, 224, 958, 951, 944,
	813, 473, 1060, 257, 1010, 475, 180, 408, 407, 918,
	292, 1011, 181, 170, 385, 182, 302, 204, 1031, 488,
	220, 309, 453, 710, 277, 352, 983, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1007, 382, 410,
	458, 222, 428, 173, 176, 185, 400, 186, 187, 1050,
	322, 266, 270, 286, 297, 982, 389, 429, 476, 976,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	1005, 216, 237, 430, 210, 1039, 1022, 969, 933, 939,
	862, 0, 209, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 281, 993, 731, 732, 246, 802,
	1054, 211, 869, 1053, 349, 356, 348, 1056, 1055, 462,
	1040, 970, 957, 955, 863, 1038, 968, 956, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 959,
	427, 320, 0, 206, 0, 426, 1048, 1066, 442, 226,
	881, 1015, 457, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 997, 1063, 360, 393, 233,
	472, 423, 262, 879, 1067, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1042, 864, 810, 1018, 821, 822, 823, 824,
	990, 1061, 798, 242, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 808, 199, 212, 312, 1541,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 1016, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1065, 346, 1034, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1012, 1017, 1024, 1029, 1030, 474, 252,
	949, 971, 1002, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 929, 196, 0, 0,
	202, 0, 203, 205, 916, 201, 1033, 1058, 978, 992,
	903, 1045, 0, 0, 451, 804, 1049, 890, 913, 1059,
	919, 921, 986, 865, 961, 357, 910, 866, 0, 0,
	857, 708, 858, 891, 259, 707, 1019, 964, 1047, 947,
	979, 989, 258, 244, 954, 953, 1036, 902, 901, 984,
	1032, 1046, 0, 0, 172, 480, 190, 812, 314, 0,
	0, 478, 425, 339, 0, 0, 945, 0, 796, 797,
	930, 988, 877, 975, 1051, 911, 980, 1052, 89, 0,
	2108, 0, 0, 733, 559, 734, 736, 737, 738, 739,
	0, 0, 171, 735, 740, 741, 742, 0, 940, 985,
	1064, 856, 705, 722, 861, 811, 0, 1037, 898, 899,
	263, 0, 0, 0, 0, 0, 0, 0, 943, 960,
	1004, 927, 0, 471, 991, 1000, 1014, 920, 376, 283,
	0, 0, 0, 0, 719, 720, 0, 0, 0, 0,
	827, 0, 721, 0, 871, 717, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 723, 0,
	0, 0, 876, 854, 896, 1006, 855, 853, 340, 868,
	799, 1035, 928, 301, 191, 1041, 926, 825, 994, 872,
	1023, 1057, 914, 311, 870, 195, 867, 873, 912, 353,
	1003, 1009, 809, 198, 313, 1020, 892, 905, 730, 0,
	392, 981, 470, 711, 278, 0, 967, 391, 315, 463,
	995, 1043, 469, 915, 445, 479, 484, 271, 948, 234,
	422, 261, 254, 897, 1013, 860, 284, 375, 249, 306,
	931, 987, 893, 241, 998, 974, 1025, 421, 460, 200,
	334, 461, 483, 166, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 1021, 1008,
	1027, 888, 874, 880, 875, 904, 1044, 293, 285, 1028,
	1026, 906, 361, 224, 958, 951, 944, 813, 473, 1060,
	257, 1010, 475, 180, 408, 407, 918, 292, 1011, 181,
	170, 385, 182, 302, 204, 1031, 488, 220, 309, 453,
	710, 277, 352, 983, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1007, 382, 410, 458, 222, 428,
	173, 176, 185, 400, 186, 187, 1050, 322, 266, 270,
	286, 297, 982, 389, 429, 476, 976, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 1005, 216, 237,
	430, 210, 1039, 1022, 969, 933, 939, 862, 0, 209,
	934, 935, 936, 937, 938, 1001, 895, 907, 887, 977,
	886, 281, 993, 731, 732, 246, 802, 1054, 211, 869,
	1053, 349, 356, 348, 1056, 1055, 462, 1040, 970, 957,
	955, 863, 1038, 968, 956, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 959, 427, 320, 0,
	206, 0, 426, 1048, 1066, 442, 226, 881, 1015, 457,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 997, 1063, 360, 393, 233, 472, 423, 262,
	879, 1067, 826, 814, 815, 818, 962, 963, 816, 819,
	820, 828, 800, 801, 803, 805, 806, 807, 950, 1042,
	864, 810, 1018, 821, 822, 823, 824, 990, 1061, 798,
	242, 747, 840, 841, 842, 748, 843, 844, 749, 750,
	845, 846, 847, 848, 751, 849, 850, 851, 829, 830,
	831, 832, 833, 834, 835, 836, 839, 837, 838, 0,
	946, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 808, 199, 212, 312, 1062, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 1016, 973,
	0, 923, 925, 924, 883, 885, 884, 882, 1065, 346,
	1034, 852, 859, 878, 889, 894, 900, 908, 909, 917,
	922, 932, 941, 942, 952, 965, 966, 972, 996, 999,
	1012, 1017, 1024, 1029, 1030, 474, 252, 949, 971, 1002,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 929, 196, 0, 0, 202, 0, 203,
	205, 916, 201, 1033, 1058, 978, 992, 903, 1045, 0,
	0, 451, 804, 1049, 890, 913, 1059, 919, 921, 986,
	865, 961, 357, 910, 866, 0, 0, 857, 708, 858,
	891, 259, 707, 1019, 964, 1047, 947, 979, 989, 258,
	244, 954, 953, 1036, 902, 901, 984, 1032, 1046, 0,
	0, 172, 480, 190, 812, 314, 0, 0, 478, 425,
	339, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1051, 911, 980, 1052, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 171,
	735, 740, 741, 742, 0, 940, 985, 1064, 856, 705,
	722, 861, 811, 0, 1037, 898, 899, 263, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	471, 991, 1000, 1014, 920, 376, 283, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 340, 868, 799, 1035, 928,
	301, 191, 1041, 926, 825, 994, 872, 1023, 1057, 914,
	311, 870, 195, 867, 873, 912, 353, 1003, 1009, 809,
	198, 313, 1020, 892, 905, 730, 0, 392, 981, 470,
	711, 278, 0, 967, 391, 315, 463, 995, 1043, 469,
	915, 445, 479, 484, 271, 948, 234, 422, 261, 254,
	897, 1013, 860, 284, 375, 249, 306, 931, 987, 893,
	241, 998, 974, 1025, 421, 460, 200, 334, 461, 483,
	166, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 1021, 1008, 1027, 888, 874,
	880, 875, 904, 1044, 293, 285, 1028, 1026, 906, 361,
	224, 958, 951, 944, 813, 473, 1060, 257, 1010, 475,
	180, 408, 407, 918, 292, 1011, 181, 170, 385, 182,
	302, 204, 1031, 488, 220, 309, 453, 710, 277, 352,
	983, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1007, 382, 410, 458, 222, 428, 173, 176, 185,
	400, 186, 187, 1050, 322, 266, 270, 286, 297, 982,
	389, 429, 476, 976, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 1005, 216, 237, 430, 210, 1039,
	1022, 969, 933, 939, 862, 0, 209, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 281, 993,
	731, 732, 246, 802, 1054, 211, 869, 1053, 349, 356,
	348, 1056, 1055, 462, 1040, 970, 957, 955, 863, 1038,
	968, 956, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 959, 427, 320, 0, 206, 0, 426,
	1048, 1066, 442, 226, 881, 1015, 457, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 997,
	1063, 360, 393, 233, 472, 423, 262, 879, 1067, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1042, 864, 810, 1018,
	821, 822, 823, 824, 990, 1061, 798, 242, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 808,
	199, 212, 312, 1062, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 1016, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1065, 346, 1034, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1012, 1017, 1024,
	1029, 1030, 474, 252, 949, 971, 1002, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	929, 196, 0, 0, 202, 0, 203, 205, 916, 201,
	1033, 1058, 978, 992, 903, 1045, 0, 0, 451, 804,
	1049, 890, 913, 1059, 919, 921, 986, 865, 961, 357,
	910, 866, 0, 0, 857, 1107, 858, 891, 259, 1105,
	1019, 964, 1047, 947, 979, 989, 258, 244, 954, 953,
	1036, 902, 901, 984, 1032, 1046, 0, 0, 172, 480,
	190, 812, 314, 0, 0, 478, 425, 339, 0, 0,
	945, 0, 796, 797, 930, 988, 877, 975, 1051, 911,
	980, 1052, 89, 0, 0, 0, 0, 733, 559, 734,
	736, 737, 738, 739, 0, 0, 171, 735, 740, 741,
	742, 0, 940, 985, 1064, 856, 1124, 722, 861, 811,
	0, 1037, 898, 899, 263, 0, 0, 0, 0, 0,
	0, 0, 943, 960, 1004, 927, 0, 471, 991, 1000,
	1014, 920, 376, 283, 0, 0, 0, 0, 719, 720,
	0, 0, 0, 0, 827, 0, 721, 0, 871, 717,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 723, 0, 0, 0, 876, 854, 896, 1006,
	855, 853, 340, 868, 799, 1035, 928, 301, 191, 1041,
	926, 825, 994, 872, 1023, 1057, 914, 311, 870, 195,
	867, 873, 912, 353, 1003, 1009, 809, 198, 313, 1020,
	892, 905, 730, 0, 392, 981, 470, 711, 278, 0,
	967, 391, 315, 463, 995, 1043, 469, 915, 445, 479,
	484, 271, 948, 234, 422, 261, 254, 897, 1013, 860,
	284, 375, 249, 306, 931, 987, 893, 241, 998, 974,
	1025, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 1021, 1008, 1027, 888, 874, 880, 875, 904,
	1044, 293, 285, 1028, 1026, 906, 361, 224, 958, 951,
	944, 813, 473, 1060, 257, 1010, 475, 180, 408, 407,
	918, 292, 1011, 181, 170, 385, 182, 302, 204, 1031,
	488, 220, 309, 453, 710, 277, 352, 983, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1007, 382,
	410, 458, 222, 428, 173, 176, 185, 400, 186, 187,
	1050, 322, 266, 270, 286, 297, 982, 389, 429, 476,
	976, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 1005, 216, 237, 430, 210, 1039, 1022, 969, 933,
	939, 862, 0, 209, 934, 935, 936, 937, 938, 1001,
	895, 907, 887, 977, 886, 281, 993, 731, 732, 246,
	802, 1054, 211, 869, 1053, 349, 356, 348, 1056, 1055,
	462, 1040, 970, 957, 955, 863, 1038, 968, 956, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	959, 427, 320, 0, 206, 0, 426, 1048, 1066, 442,
	226, 881, 1015, 457, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 997, 1063, 360, 393,
	233, 472, 423, 262, 879, 1067, 826, 814, 815, 818,
	962, 963, 816, 819, 820, 828, 800, 801, 803, 805,
	806, 807, 950, 1042, 864, 810, 1018, 821, 822, 823,
	824, 990, 1061, 798, 242, 747, 840, 841, 842, 748,
	843, 844, 749, 750, 845, 846, 847, 848, 751, 849,
	850, 851, 829, 830, 831, 832, 833, 834, 835, 836,
	839, 837, 838, 0, 946, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 808, 199, 212, 312,
	1062, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 1016, 973, 0, 923, 925, 924, 883, 885,
	884, 882, 1065, 346, 1034, 852, 859, 878, 889, 894,
	900, 908, 909, 917, 922, 932, 941, 942, 952, 965,
	966, 972, 996, 999, 1012, 1017, 1024, 1029, 1030, 474,
	252, 949, 971, 1002, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 929, 196, 0,
	0, 202, 0, 203, 205, 916, 201, 1033, 1058, 978,
	992, 903, 1045, 0, 0, 451, 804, 1049, 890, 913,
	1059, 919, 921, 986, 865, 961, 357, 910, 866, 0,
	0, 857, 1107, 858, 891, 259, 1105, 1019, 964, 1047,
	947, 979, 989, 258, 244, 954, 953, 1036, 902, 901,
	984, 1032, 1046, 0, 0, 172, 480, 190, 812, 314,
	0, 0, 478, 425, 339, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1051, 911, 980, 1052, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 171, 735, 740, 741, 742, 0, 940,
	985, 1064, 856, 1124, 722, 861, 811, 0, 1037, 898,
	899, 263, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 471, 991, 1000, 1014, 920, 376,
	283, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 340,
	868, 799, 1035, 928, 301, 191, 1041, 926, 825, 994,
	872, 1023, 1057, 914, 311, 870, 195, 867, 873, 912,
	353, 1003, 1009, 809, 198, 313, 1020, 892, 905, 730,
	0, 392, 981, 470, 711, 278, 0, 4517, 391, 315,
	463, 995, 1043, 469, 915, 445, 479, 484, 271, 948,
	234, 422, 261, 254, 897, 1013, 860, 284, 375, 249,
	306, 931, 987, 893, 241, 998, 974, 1025, 421, 460,
	200, 334, 461, 483, 166, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 1021,
	1008, 1027, 888, 874, 880, 875, 904, 1044, 293, 285,
	1028, 1026, 906, 361, 224, 958, 951, 944, 813, 473,
	1060, 257, 1010, 475, 180, 408, 407, 918, 292, 1011,
	181, 170, 385, 182, 302, 204, 1031, 488, 220, 309,
	453, 710, 277, 352, 983, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1007, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 1050, 322, 266,
	270, 286, 297, 982, 389, 429, 476, 976, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 1005, 216,
	237, 430, 210, 1039, 1022, 969, 933, 939, 862, 0,
	209, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 281, 993, 731, 732, 246, 802, 1054, 211,
	869, 1053, 349, 356, 348, 1056, 1055, 462, 1040, 970,
	957, 955, 863, 1038, 968, 956, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 959, 427, 320,
	0, 206, 0, 426, 1048, 1066, 442, 226, 881, 1015,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 997, 1063, 360, 393, 233, 472, 423,
	262, 879, 1067, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1042, 864, 810, 1018, 821, 822, 823, 824, 990, 1061,
	798, 242, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 808, 199, 212, 312, 1062, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 1016,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1065,
	346, 1034, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1012, 1017, 1024, 1029, 1030, 474, 252, 949, 971,
	1002, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 929, 196, 0, 0, 202, 0,
	203, 205, 916, 201, 1033, 1058, 978, 992, 903, 1045,
	0, 0, 451, 804, 1049, 890, 913, 1059, 919, 921,
	986, 865, 961, 357, 910, 866, 0, 0, 857, 1107,
	858, 891, 259, 1105, 1019, 964, 1047, 947, 979, 989,
	258, 244, 954, 953, 1036, 902, 901, 984, 1032, 1046,
	0, 0, 172, 480, 190, 812, 314, 0, 0, 478,
	425, 339, 0, 0, 945, 0, 796, 797, 930, 988,
	877, 975, 1051, 911, 980, 1052, 89, 0, 0, 0,
	0, 733, 559, 734, 736, 737, 738, 739, 0, 0,
	171, 735, 740, 741, 742, 0, 940, 985, 1064, 856,
	1124, 722, 861, 811, 0, 1037, 898, 899, 263, 0,
	0, 0, 0, 0, 0, 0, 943, 960, 1004, 927,
	0, 471, 991, 1000, 1014, 920, 376, 283, 0, 0,
	0, 0, 719, 720, 0, 0, 0, 0, 827, 0,
	721, 0, 871, 717, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 723, 0, 0, 0,
	876, 854, 896, 1006, 855, 853, 340, 868, 799, 1035,
	928, 301, 191, 1041, 926, 825, 994, 872, 1023, 1057,
	914, 311, 870, 195, 867, 873, 912, 353, 1003, 1009,
	809, 198, 313, 1020, 892, 905, 730, 0, 392, 981,
	470, 711, 278, 0, 967, 391, 315, 463, 995, 1043,
	469, 915, 445, 479, 484, 271, 948, 234, 422, 261,
	254, 897, 1013, 860, 284, 375, 249, 306, 931, 987,
	893, 241, 998, 974, 1025, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 1021, 1008, 1027, 888,
	874, 880, 875, 904, 1044, 293, 285, 1028, 1026, 906,
	361, 224, 958, 951, 944, 813, 473, 1060, 257, 1010,
	475, 180, 408, 407, 918, 292, 1011, 181, 170, 385,
	182, 302, 204, 1031, 488, 220, 309, 453, 710, 277,
	352, 983, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1007, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 1050, 322, 266, 270, 286, 297,
	982, 389, 429, 476, 976, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 1005, 216, 237, 430, 210,
	1039, 1022, 969, 933, 939, 862, 0, 209, 934, 935,
	936, 937, 938, 1001, 895, 907, 887, 977, 886, 281,
	993, 731, 732, 246, 802, 1054, 211, 869, 1053, 349,
	356, 348, 1056, 1055, 462, 1040, 970, 957, 955, 863,
	1038, 968, 956, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 959, 427, 320, 0, 206, 0,
	426, 1048, 1066, 442, 226, 881, 1015, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	997, 1063, 360, 393, 233, 472, 423, 262, 879, 1067,
	826, 814, 815, 818, 962, 963, 816, 819, 820, 828,
	800, 801, 803, 805, 806, 807, 2349, 2350, 2351, 810,
	1018, 821, 822, 823, 824, 990, 1061, 798, 242, 747,
	840, 841, 842, 748, 843, 844, 749, 750, 845, 846,
	847, 848, 751, 849, 850, 851, 829, 830, 831, 832,
	833, 834, 835, 836, 839, 837, 838, 0, 946, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	808, 199, 212, 312, 1062, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 1016, 973, 0, 923,
	925, 924, 883, 885, 884, 882, 1065, 346, 1034, 852,
	859, 878, 889, 894, 900, 908, 909, 917, 922, 932,
	941, 942, 952, 965, 966, 972, 996, 999, 1012, 1017,
	1024, 1029, 1030, 474, 252, 949, 971, 1002, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 929, 196, 0, 0, 202, 0, 203, 205, 916,
	201, 1033, 1058, 978, 992, 1830, 2009, 0, 3691, 451,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 172,
	480, 190, 3692, 314, 1985, 499, 3693, 425, 339, 502,
	501, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 89, 0, 697, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1923,
	2007, 1834, 500, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 471, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 3695, 1860, 301, 191,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 177, 198, 313,
	1975, 1816, 1833, 245, 2181, 392, 1928, 470, 498, 278,
	0, 1909, 391, 315, 463, 1943, 2006, 469, 1845, 445,
	479, 484, 271, 1885, 234, 422, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 421, 460, 200, 334, 461, 483, 166, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 473, 2032, 257, 1961, 475, 180, 408,
	407, 1848, 292, 1962, 181, 170, 385, 182, 302, 204,
	1987, 488, 220, 309, 453, 497, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1958,
	382, 410, 458, 222, 428, 173, 176, 185, 400, 186,
	187, 2014, 322, 266, 270, 286, 297, 1929, 389, 429,
	476, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 1954, 216, 237, 430, 210, 2002, 1977, 1911,
	1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871,
	1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 466, 467,
	246, 1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025,
	2023, 462, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1899, 427, 320, 0, 206, 0, 426, 2012, 2038,
	442, 226, 1803, 1969, 457, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 1945, 2035, 360,
	393, 233, 472, 423, 262, 1799, 0, 1802, 1797, 1800,
	1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0,
	1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 188, 189,
	174, 179, 1937, 2033, 1850, 242, 164, 1774, 1775, 1776,
	165, 1880, 1881, 167, 168, 1991, 1990, 1989, 1992, 169,
	2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921,
	1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 1908, 199, 212,
	312, 3694, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 1970, 1915, 0, 1854, 1856, 1855, 1805,
	1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812,
	1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892,
	1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986,
	474, 252, 1888, 1913, 1951, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 1861, 196,
	0, 0, 202, 0, 203, 205, 1846, 201, 1993, 2029,
	1925, 1939, 1830, 2009, 0, 1971, 451, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 172, 480, 190, 2020,
	314, 1985, 499, 478, 425, 339, 502, 501, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1923, 2007, 1834, 500,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 471, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 3202, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 470, 2278, 278, 0, 1909, 391,
	315, 463, 1943, 2006, 469, 1845, 445, 479, 484, 271,
	1885, 234, 422, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	473, 2032, 257, 1961, 475, 180, 408, 407, 1848, 292,
	1962, 181, 170, 385, 182, 302, 204, 1987, 488, 220,
	309, 453, 2277, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1958, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 2014, 322,
	266, 270, 286, 297, 1929, 389, 429, 476, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 1954,
	216, 237, 430, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 466, 467, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 462, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 427,
	320, 0, 206, 0, 426, 2012, 2038, 442, 226, 1803,
	1969, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 1945, 2035, 360, 393, 233, 472,
	423, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 188, 189, 174, 179, 1937,
	2033, 1850, 242, 164, 1774, 1775, 1776, 165, 1880, 1881,
	167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 474, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 451, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 172, 480, 190, 2020, 314, 1985, 499,
	478, 425, 339, 502, 501, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1923, 2007, 1834, 500, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 471, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 191, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 177, 198, 313, 1975, 1816, 1833, 245, 2181, 392,
	1928, 470, 498, 278, 0, 1909, 391, 315, 463, 1943,
	2006, 469, 1845, 445, 479, 484, 271, 1885, 234, 422,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 473, 2032, 257,
	1961, 475, 180, 408, 407, 1848, 292, 1962, 181, 170,
	385, 182, 302, 204, 1987, 488, 220, 309, 453, 497,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1958, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 2014, 322, 266, 270, 286,
	297, 1929, 389, 429, 476, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 1954, 216, 237, 430,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 466, 467, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 462, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 427, 320, 0, 206,
	0, 426, 2012, 2038, 442, 226, 1803, 1969, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 1945, 2035, 360, 393, 233, 472, 423, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778,
	0, 1973, 188, 189, 174, 179, 1937, 2033, 1850, 242,
	164, 1774, 1775, 1776, 165, 1880, 1881, 167, 168, 1991,
	1990, 1989, 1992, 169, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 474, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971,
	451, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779,
	1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815,
	259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244,
	1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0,
	172, 480, 190, 2020, 314, 1985, 499, 478, 425, 339,
	502, 501, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918,
	2015, 1841, 1927, 2016, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1923, 2007, 1834, 500, 1874, 1932, 2036, 1766, 1919, 0,
	1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0,
	0, 0, 0, 0, 1877, 1901, 1953, 1859, 0, 471,
	1938, 1948, 1966, 1851, 376, 283, 0, 0, 0, 0,
	0, 0, 2272, 0, 1820, 0, 1916, 0, 0, 0,
	1787, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1794, 1764,
	1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301,
	191, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311,
	1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 177, 198,
	313, 1975, 1816, 1833, 245, 0, 392, 1928, 470, 2278,
	278, 0, 1909, 391, 315, 463, 1943, 2006, 469, 1845,
	445, 479, 484, 271, 1885, 234, 422, 261, 254, 1824,
	1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817, 241,
	1946, 1917, 1980, 421, 460, 200, 334, 461, 483, 166,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801,
	1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224,
	1898, 1891, 1878, 1956, 473, 2032, 257, 1961, 475, 180,
	408, 407, 1848, 292, 1962, 181, 170, 385, 182, 302,
	204, 1987, 488, 220, 309, 453, 2277, 277, 352, 1930,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1958, 382, 410, 458, 222, 428, 173, 176, 185, 400,
	186, 187, 2014, 322, 266, 270, 286, 297, 1929, 389,
	429, 476, 1920, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 1954, 216, 237, 430, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 466,
	467, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 462, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 427, 320, 0, 206, 0, 426, 2012,
	2038, 442, 226, 1803, 1969, 457, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 1945, 2035,
	360, 393, 233, 472, 423, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0,
	0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 188,
	189, 174, 179, 1937, 2033, 1850, 242, 164, 1774, 1775,
	1776, 165, 1880, 1881, 167, 168, 1991, 1990, 1989, 1992,
	169, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 2034, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 474, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 451, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 480, 190,
	2020, 314, 1985, 499, 478, 425, 339, 502, 501, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1923, 2007, 1834,
	500, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 471, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 470, 2278, 278, 0, 1909,
	391, 315, 463, 1943, 2006, 469, 1845, 445, 479, 484,
	271, 1885, 234, 422, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	421, 460, 200, 334, 461, 483, 166, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 473, 2032, 257, 1961, 475, 180, 408, 407, 1848,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 488,
	220, 309, 453, 2277, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1958, 382, 410,
	458, 222, 428, 173, 176, 185, 400, 186, 187, 2014,
	322, 266, 270, 286, 297, 1929, 389, 429, 476, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	1954, 216, 237, 430, 210, 2002, 1977, 1911, 1866, 1872,
	1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821,
	1837, 1809, 1924, 1808, 281, 1941, 466, 467, 246, 1784,
	2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023, 462,
	2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1899,
	427, 320, 0, 206, 0, 426, 2012, 2038, 442, 226,
	1803, 1969, 457, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 1945, 2035, 360, 393, 233,
	472, 423, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903,
	1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996,
	0, 1890, 2005, 1778, 0, 1973, 188, 189, 174, 179,
	1937, 2033, 1850, 242, 164, 1774, 1775, 1776, 165, 1880,
	1881, 167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024,
	2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967,
	1940, 1949, 1823, 1882, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 1908, 199, 212, 312, 2034,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806,
	1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827,
	1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907,
	1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 474, 252,
	1888, 1913, 1951, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 1861, 196, 0, 0,
	202, 0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939,
	903, 1045, 0, 0, 451, 1112, 1049, 890, 913, 1059,
	919, 921, 986, 865, 961, 357, 910, 866, 0, 0,
	857, 1107, 858, 891, 259, 1105, 1019, 964, 1047, 947,
	979, 989, 258, 244, 954, 953, 1036, 902, 901, 984,
	1032, 1046, 0, 0, 172, 480, 190, 1145, 314, 0,
	499, 478, 425, 339, 502, 501, 945, 0, 1119, 1132,
	930, 988, 877, 975, 1051, 911, 980, 1052, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1127, 1141, 1108, 500, 940, 985,
	1064, 856, 1124, 0, 861, 1096, 0, 1037, 898, 899,
	263, 0, 0, 0, 0, 0, 0, 0, 943, 960,
	1004, 927, 0, 471, 991, 1000, 1014, 920, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1123, 0, 0, 0, 871, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1113, 0,
	0, 0, 876, 854, 896, 1006, 855, 853, 340, 868,
	1134, 1035, 928, 301, 191, 1041, 926, 1111, 994, 872,
	1023, 1057, 914, 311, 870, 195, 867, 873, 912, 353,
	1003, 1009, 177, 198, 313, 1020, 892, 905, 245, 3301,
	392, 981, 470, 2362, 278, 0, 967, 391, 315, 463,
	995, 1043, 469, 915, 445, 479, 484, 271, 948, 234,
	422, 261, 254, 897, 1013, 860, 284, 375, 249, 306,
	931, 987, 893, 241, 998, 974, 1025, 421, 460, 200,
	334, 461, 483, 166, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 1021, 1008,
	1027, 888, 874, 880, 875, 904, 1044, 293, 285, 1028,
	1026, 906, 361, 224, 958, 951, 944, 1130, 473, 1060,
	257, 1010, 475, 180, 408, 407, 918, 292, 1011, 181,
	170, 385, 182, 302, 204, 1031, 488, 220, 309, 453,
	2361, 277, 352, 983, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1007, 382, 410, 458, 222, 428,
	173, 176, 185, 400, 186, 187, 1050, 322, 266, 270,
	286, 297, 982, 389, 429, 476, 976, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 1005, 216, 237,
	430, 210, 1039, 1022, 969, 933, 939, 862, 0, 209,
	934, 935, 936, 937, 938, 1001, 895, 907, 887, 977,
	886, 281, 993, 466, 467, 246, 1097, 1054, 211, 869,
	1053, 349, 356, 348, 1056, 1055, 462, 1040, 970, 957,
	955, 863, 1038, 968, 956, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 959, 427, 320, 0,
	206, 0, 426, 1048, 1066, 442, 226, 881, 1015, 457,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 997, 1063, 360, 393, 233, 472, 423, 262,
	1102, 0, 1104, 1100, 1103, 1101, 1120, 1121, 1142, 1143,
	1144, 1131, 1098, 192, 193, 1139, 1140, 194, 950, 1042,
	864, 0, 1018, 188, 189, 174, 179, 990, 1061, 1110,
	242, 164, 1093, 1094, 1095, 165, 1114, 1115, 167, 168,
	1137, 1136, 1135, 1138, 169, 1147, 1146, 1148, 1099, 1106,
	1109, 1116, 1117, 1118, 1125, 1126, 1133, 1128, 1129, 0,
	946, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 1122, 199, 212, 312, 1062, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 1016, 973,
	0, 923, 925, 924, 883, 885, 884, 882, 1065, 346,
	1034, 852, 859, 878, 889, 894, 900, 908, 909, 917,
	922, 932, 941, 942, 952, 965, 966, 972, 996, 999,
	1012, 1017, 1024, 1029, 1030, 474, 252, 949, 971, 1002,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 929, 196, 0, 0, 202, 0, 203,
	205, 916, 201, 1033, 1058, 978, 992, 1830, 2009, 0,
	1971, 451, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 172, 480, 190, 2020, 314, 1985, 499, 478, 425,
	339, 502, 501, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1923, 2007, 1834, 500, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	471, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 2860, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 191, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 177,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 470,
	498, 278, 0, 1909, 391, 315, 463, 1943, 2006, 469,
	1845, 445, 479, 484, 271, 1885, 234, 422, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 421, 460, 200, 334, 461, 483,
	0, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 473, 2032, 257, 1961, 475,
	180, 408, 407, 1848, 292, 1962, 181, 170, 385, 182,
	302, 204, 1987, 488, 220, 309, 453, 497, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1958, 382, 410, 458, 222, 428, 173, 176, 185,
	400, 186, 187, 2014, 322, 266, 270, 286, 297, 1929,
	389, 429, 476, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 1954, 216, 237, 430, 210, 2002,
	1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869,
	1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941,
	466, 467, 246, 1784, 2022, 211, 1785, 2021, 349, 356,
	348, 2025, 2023, 462, 2003, 1912, 1897, 1895, 1777, 2001,
	1910, 1896, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1899, 427, 320, 0, 206, 0, 426,
	2012, 2038, 442, 226, 1803, 1969, 457, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 1945,
	2035, 360, 393, 233, 472, 423, 262, 1799, 0, 1802,
	1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792,
	0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973,
	188, 189, 174, 179, 1937, 2033, 1850, 242, 0, 1774,
	1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989,
	1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887,
	1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 1908,
	199, 212, 312, 2034, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 1970, 1915, 0, 1854, 1856,
	1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769,
	1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875,
	1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979,
	1984, 1986, 474, 252, 1888, 1913, 1951, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	1861, 196, 0, 0, 202, 0, 203, 205, 1846, 201,
	1993, 2029, 1925, 1939, 903, 1045, 0, 0, 451, 1112,
	1049, 890, 913, 1059, 919, 921, 986, 865, 961, 357,
	910, 866, 0, 0, 857, 1107, 858, 891, 259, 1105,
	1019, 964, 1047, 947, 979, 989, 258, 244, 954, 953,
	1036, 902, 901, 984, 1032, 1046, 0, 0, 172, 480,
	190, 1145, 314, 0, 499, 478, 425, 339, 502, 501,
	945, 0, 1119, 1132, 930, 988, 877, 975, 1051, 911,
	980, 1052, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1127, 1141,
	1108, 500, 940, 985, 1064, 856, 1124, 0, 861, 1096,
	0, 1037, 898, 899, 263, 0, 0, 0, 0, 0,
	0, 0, 943, 960, 1004, 927, 0, 471, 991, 1000,
	1014, 920, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1123, 0, 0, 0, 871, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1113, 0, 0, 0, 876, 854, 896, 1006,
	855, 853, 340, 868, 1134, 1035, 928, 301, 191, 1041,
	926, 1111, 994, 872, 1023, 1057, 914, 311, 870, 195,
	867, 873, 912, 353, 1003, 1009, 177, 198, 313, 1020,
	892, 905, 245, 0, 392, 981, 470, 2362, 278, 0,
	967, 391, 315, 463, 995, 1043, 469, 915, 445, 479,
	484, 271, 948, 234, 422, 261, 254, 897, 1013, 860,
	284, 375, 249, 306, 931, 987, 893, 241, 998, 974,
	1025, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 1021, 1008, 1027, 888, 874, 880, 875, 904,
	1044, 293, 285, 1028, 1026, 906, 361, 224, 958, 951,
	944, 1130, 473, 1060, 257, 1010, 475, 180, 408, 407,
	918, 292, 1011, 181, 170, 385, 182, 302, 204, 1031,
	488, 220, 309, 453, 2361, 277, 352, 983, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1007, 382,
	410, 458, 222, 428, 173, 176, 185, 400, 186, 187,
	1050, 322, 266, 270, 286, 297, 982, 389, 429, 476,
	976, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 1005, 216, 237, 430, 210, 1039, 1022, 969, 933,
	939, 862, 0, 209, 934, 935, 936, 937, 938, 1001,
	895, 907, 887, 977, 886, 281, 993, 466, 467, 246,
	1097, 1054, 211, 869, 1053, 349, 356, 348, 1056, 1055,
	462, 1040, 970, 957, 955, 863, 1038, 968, 956, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	959, 427, 320, 0, 206, 0, 426, 1048, 1066, 442,
	226, 881, 1015, 457, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 997, 1063, 360, 393,
	233, 472, 423, 262, 1102, 0, 1104, 1100, 1103, 1101,
	1120, 1121, 1142, 1143, 1144, 1131, 1098, 192, 193, 1139,
	1140, 194, 950, 1042, 864, 0, 1018, 188, 189, 174,
	179, 990, 1061, 1110, 242, 164, 1093, 1094, 1095, 165,
	1114, 1115, 167, 168, 1137, 1136, 1135, 1138, 169, 1147,
	1146, 1148, 1099, 1106, 1109, 1116, 1117, 1118, 1125, 1126,
	1133, 1128, 1129, 0, 946, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 1122, 199, 212, 312,
	1062, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 1016, 973, 0, 923, 925, 924, 883, 885,
	884, 882, 1065, 346, 1034, 852, 859, 878, 889, 894,
	900, 908, 909, 917, 922, 932, 941, 942, 952, 965,
	966, 972, 996, 999, 1012, 1017, 1024, 1029, 1030, 474,
	252, 949, 971, 1002, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 929, 196, 0,
	0, 202, 0, 203, 205, 916, 201, 1033, 1058, 978,
	992, 1830, 2009, 0, 1971, 451, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 172, 480, 190, 2020, 314,
	1985, 499, 478, 425, 339, 502, 501, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1923, 2007, 1834, 500, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 471, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 470, 498, 278, 0, 1909, 391, 315,
	463, 1943, 2006, 469, 1845, 445, 479, 484, 271, 1885,
	234, 422, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 421, 460,
	200, 334, 461, 483, 0, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 473,
	2032, 257, 1961, 475, 180, 408, 407, 1848, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 488, 220, 309,
	453, 497, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1958, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 2014, 322, 266,
	270, 286, 297, 1929, 389, 429, 476, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 1954, 216,
	237, 430, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0,
	209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809,
	1924, 1808, 281, 1941, 466, 467, 246, 1784, 2022, 211,
	1785, 2021, 349, 356, 348, 2025, 2023, 462, 2003, 1912,
	1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1899, 427, 320,
	0, 206, 0, 426, 2012, 2038, 442, 226, 1803, 1969,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 1945, 2035, 360, 393, 233, 472, 423,
	262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017,
	2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890,
	2005, 1778, 0, 1973, 188, 189, 174, 179, 1937, 2033,
	1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0,
	0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793,
	1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949,
	1823, 1882, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 1908, 199, 212, 312, 2034, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 1970,
	1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037,
	346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839,
	1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944,
	1947, 1964, 1972, 1979, 1984, 1986, 474, 252, 1888, 1913,
	1951, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 1861, 196, 0, 0, 202, 0,
	203, 205, 1846, 201, 1993, 2029, 1925, 1939, 903, 1045,
	0, 0, 451, 1112, 1049, 890, 913, 1059, 919, 921,
	986, 865, 961, 357, 910, 866, 0, 0, 857, 1107,
	858, 891, 259, 1105, 1019, 964, 1047, 947, 979, 989,
	258, 244, 954, 953, 1036, 902, 901, 984, 1032, 1046,
	0, 0, 172, 480, 190, 1145, 314, 0, 0, 478,
	425, 339, 0, 0, 945, 0, 1119, 1132, 930, 988,
	877, 975, 1051, 911, 980, 1052, 0, 0, 0, 0,
	0, 0, 559, 0, 1455, 0, 0, 1456, 0, 0,
	171, 0, 1127, 1141, 1108, 0, 940, 985, 1064, 856,
	1124, 0, 861, 1096, 0, 1037, 898, 899, 263, 0,
	0, 0, 0, 0, 0, 0, 943, 960, 1004, 927,
	0, 471, 991, 1000, 1014, 920, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 0,
	0, 0, 871, 1092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1113, 0, 0, 0,
	876, 854, 896, 1006, 855, 853, 340, 868, 1134, 1035,
	928, 301, 191, 1041, 926, 1111, 994, 872, 1023, 1057,
	914, 311, 870, 195, 867, 873, 912, 353, 1003, 1009,
	177, 198, 313, 1020, 892, 905, 245, 0, 392, 981,
	470, 1091, 278, 0, 967, 391, 315, 463, 995, 1043,
	469, 915, 445, 479, 484, 271, 948, 234, 422, 261,
	254, 897, 1013, 860, 284, 375, 249, 306, 931, 987,
	893, 241, 998, 974, 1025, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 1021, 1008, 1027, 888,
	874, 880, 875, 904, 1044, 293, 285, 1028, 1026, 906,
	361, 224, 958, 951, 944, 1130, 473, 1060, 257, 1010,
	475, 180, 408, 407, 918, 292, 1011, 181, 170, 385,
	182, 302, 204, 1031, 488, 220, 309, 453, 1090, 277,
	352, 983, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1007, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 1050, 322, 266, 270, 286, 297,
	982, 389, 429, 476, 976, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 1005, 216, 237, 430, 210,
	1039, 1022, 969, 933, 939, 862, 0, 209, 934, 935,
	936, 937, 938, 1001, 895, 907, 887, 977, 886, 281,
	993, 466, 467, 246, 1097, 1054, 211, 869, 1053, 349,
	356, 348, 1056, 1055, 462, 1040, 970, 957, 955, 863,
	1038, 968, 956, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 959, 427, 320, 0, 206, 0,
	426, 1048, 1066, 442, 226, 881, 1015, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	997, 1063, 360, 393, 233, 472, 423, 262, 1102, 0,
	1104, 1100, 1103, 1101, 1120, 1121, 1142, 1143, 1144, 1131,
	1098, 192, 193, 1139, 1140, 194, 950, 1042, 864, 0,
	1018, 188, 189, 174, 179, 990, 1061, 1110, 242, 164,
	1093, 1094, 1095, 165, 1114, 1115, 167, 168, 1137, 1136,
	1135, 1138, 169, 1147, 1146, 1148, 1099, 1106, 1109, 1116,
	1117, 1118, 1125, 1126, 1133, 1128, 1129, 0, 946, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	1122, 199, 212, 312, 1062, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 1016, 973, 0, 923,
	925, 924, 883, 885, 884, 882, 1065, 346, 1034, 852,
	859, 878, 889, 894, 900, 908, 909, 917, 922, 932,
	941, 942, 952, 965, 966, 972, 996, 999, 1012, 1017,
	1024, 1029, 1030, 474, 252, 949, 971, 1002, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 929, 196, 0, 0, 202, 0, 203, 205, 916,
	201, 1033, 1058, 978, 992, 903, 1045, 0, 0, 451,
	1112, 1049, 890, 913, 1059, 919, 921, 986, 865, 961,
	357, 910, 866, 0, 0, 857, 1107, 858, 891, 259,
	1105, 1019, 964, 1047, 947, 979, 989, 258, 244, 954,
	953, 1036, 902, 901, 984, 1032, 1046, 0, 0, 172,
	480, 190, 1145, 314, 0, 0, 478, 425, 339, 0,
	0, 945, 0, 1119, 1132, 930, 988, 877, 975, 1051,
	911, 980, 1052, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1127,
	1141, 1108, 0, 940, 985, 1064, 856, 1124, 0, 861,
	1096, 0, 1037, 898, 899, 263, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 471, 991,
	1000, 1014, 920, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 871,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1113, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 340, 868, 1134, 1035, 928, 301, 191,
	1041, 926, 1111, 994, 872, 1023, 1057, 914, 311, 870,
	195, 867, 873, 912, 353, 1003, 1009, 177, 198, 313,
	1020, 892, 905, 245, 0, 392, 981, 470, 1091, 278,
	0, 967, 391, 315, 463, 995, 1043, 469, 915, 445,
	479, 484, 271, 948, 234, 422, 261, 254, 897, 1013,
	860, 284, 375, 249, 306, 931, 987, 893, 241, 998,
	974, 1025, 421, 460, 200, 334, 461, 483, 166, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 1021, 1008, 1027, 888, 874, 880, 875,
	904, 1044, 293, 285, 1028, 1026, 906, 361, 224, 958,
	951, 944, 1130, 473, 1060, 257, 1010, 475, 180, 408,
	407, 918, 292, 1011, 181, 170, 385, 182, 302, 204,
	1031, 488, 220, 309, 453, 1090, 277, 352, 983, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1007,
	382, 410, 458, 222, 428, 173, 176, 185, 400, 186,
	187, 1050, 322, 266, 270, 286, 297, 982, 389, 429,
	476, 976, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 1005, 216, 237, 430, 210, 1039, 1022, 969,
	933, 939, 862, 0, 209, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 281, 993, 466, 467,
	246, 1097, 1054, 211, 869, 1053, 349, 356, 348, 1056,
	1055, 462, 1040, 970, 957, 955, 863, 1038, 968, 956,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 959, 427, 320, 0, 206, 0, 426, 1048, 1066,
	442, 226, 881, 1015, 457, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 997, 1063, 360,
	393, 233, 472, 423, 262, 1102, 0, 1104, 1100, 1103,
	1101, 1120, 1121, 1142, 1143, 1144, 1131, 1098, 192, 193,
	1139, 1140, 194, 950, 1042, 864, 0, 1018, 188, 189,
	174, 179, 990, 1061, 1110, 242, 164, 1093, 1094, 1095,
	165, 1114, 1115, 167, 168, 1137, 1136, 1135, 1138, 169,
	1147, 1146, 1148, 1099, 1106, 1109, 1116, 1117, 1118, 1125,
	1126, 1133, 1128, 1129, 0, 946, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 1122, 199, 212,
	312, 1062, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 1016, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1065, 346, 1034, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1012, 1017, 1024, 1029, 1030,
	474, 252, 949, 971, 1002, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 929, 196,
	0, 0, 202, 0, 203, 205, 916, 201, 1033, 1058,
	978, 992, 903, 1045, 0, 0, 451, 1112, 1049, 890,
	913, 1059, 919, 921, 986, 865, 961, 357, 910, 866,
	0, 0, 857, 1107, 858, 891, 259, 1105, 1019, 964,
	1047, 947, 979, 989, 258, 244, 954, 953, 1036, 902,
	901, 984, 1032, 1046, 0, 0, 172, 480, 190, 1145,
	314, 0, 0, 478, 425, 339, 0, 0, 945, 0,
	1119, 1132, 930, 988, 877, 975, 1051, 911, 980, 1052,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1127, 1141, 1108, 0,
	940, 985, 1064, 856, 1124, 0, 861, 1096, 0, 1037,
	898, 899, 263, 0, 0, 0, 0, 0, 0, 0,
	943, 960, 1004, 927, 0, 471, 991, 1000, 1014, 920,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 871, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1113, 0, 0, 0, 876, 854, 896, 1006, 855, 853,
	340, 868, 1134, 1035, 928, 301, 191, 1041, 926, 1111,
	994, 872, 1023, 1057, 914, 311, 870, 195, 867, 873,
	912, 353, 1003, 1009, 177, 198, 313, 1020, 892, 905,
	245, 0, 392, 981, 470, 1091, 278, 0, 967, 391,
	315, 463, 995, 1043, 469, 915, 445, 479, 484, 271,
	948, 234, 422, 261, 254, 897, 1013, 860, 284, 375,
	249, 306, 931, 987, 893, 241, 998, 974, 1025, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	1021, 1008, 1027, 888, 874, 880, 875, 904, 1044, 293,
	285, 1028, 1026, 906, 361, 224, 958, 951, 944, 1130,
	473, 1060, 257, 1010, 475, 180, 408, 407, 918, 292,
	1011, 181, 170, 385, 182, 302, 204, 1031, 488, 220,
	309, 453, 1090, 277, 352, 983, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1007, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 1050, 322,
	266, 270, 286, 297, 982, 389, 429, 476, 976, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 1005,
	216, 237, 430, 210, 1039, 1022, 969, 933, 939, 862,
	0, 209, 934, 935, 936, 937, 938, 1001, 895, 907,
	887, 977, 886, 281, 993, 466, 467, 246, 1097, 1054,
	211, 1085, 1053, 349, 356, 348, 1056, 1055, 462, 1040,
	970, 957, 955, 863, 1038, 968, 956, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 1081, 959, 427,
	320, 0, 206, 0, 426, 1048, 1066, 442, 226, 881,
	1015, 457, 178, 381, 227, 279, 267, 372, 1086, 1084,
	1075, 1076, 308, 316, 997, 1063, 360, 393, 233, 472,
	423, 262, 1102, 0, 1104, 1100, 1103, 1101, 1120, 1121,
	1142, 1143, 1144, 1131, 1098, 192, 193, 1139, 1140, 194,
	950, 1042, 864, 0, 1018, 188, 189, 174, 179, 990,
	1061, 1110, 242, 164, 1093, 1094, 1095, 165, 1114, 1115,
	167, 168, 1137, 1136, 1135, 1138, 169, 1147, 1146, 1148,
	1099, 1106, 1109, 1116, 1117, 1118, 1125, 1126, 1133, 1128,
	1129, 0, 946, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 1122, 199, 212, 312, 1062, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	1016, 973, 0, 923, 925, 924, 883, 885, 884, 882,
	1065, 346, 1034, 852, 859, 878, 889, 894, 900, 908,
	909, 917, 922, 932, 941, 942, 952, 965, 966, 972,
	996, 999, 1012, 1017, 1024, 1029, 1030, 474, 252, 949,
	971, 1002, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 1082, 1083,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 929, 196, 0, 0, 202,
	0, 203, 205, 916, 201, 1033, 1058, 978, 992, 903,
	1045, 0, 0, 451, 1112, 1049, 890, 913, 1059, 919,
	921, 986, 865, 961, 357, 910, 866, 0, 0, 857,
	1107, 858, 891, 259, 1105, 1019, 964, 1047, 947, 979,
	989, 258, 244, 954, 953, 1036, 902, 901, 984, 1032,
	1046, 0, 0, 172, 480, 190, 1145, 314, 0, 0,
	478, 425, 339, 0, 0, 945, 0, 1119, 1132, 930,
	988, 877, 975, 1051, 911, 980, 1052, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1127, 1141, 1108, 0, 940, 985, 1064,
	856, 1124, 0, 861, 1096, 0, 1037, 898, 899, 263,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 471, 991, 1000, 1014, 920, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 871, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1113, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 340, 868, 1134,
	1035, 928, 301, 191, 1041, 926, 1111, 994, 872, 1023,
	1057, 914, 311, 870, 195, 867, 873, 912, 353, 1003,
	1009, 177, 198, 313, 1020, 892, 905, 245, 0, 392,
	981, 470, 1091, 278, 0, 967, 391, 315, 463, 995,
	1043, 469, 915, 445, 479, 484, 271, 948, 234, 422,
	261, 254, 897, 1013, 860, 284, 375, 249, 306, 931,
	987, 893, 241, 998, 974, 1025, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 1021, 1008, 1027,
	888, 874, 880, 875, 904, 1044, 293, 285, 1028, 1026,
	906, 361, 224, 958, 951, 944, 1130, 473, 1060, 257,
	1010, 475, 180, 408, 407, 918, 292, 1011, 181, 170,
	385, 182, 302, 204, 1031, 488, 220, 309, 453, 1090,
	277, 352, 983, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1007, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 1050, 322, 266, 270, 286,
	297, 982, 389, 429, 476, 976, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 1620, 229, 409, 412, 487, 1005, 216, 237, 430,
	210, 1039, 1022, 969, 933, 939, 862, 0, 209, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	281, 993, 466, 467, 246, 1097, 1054, 211, 869, 1053,
	349, 356, 348, 1056, 1055, 462, 1040, 970, 957, 955,
	863, 1038, 968, 956, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 959, 427, 320, 0, 206,
	0, 426, 1048, 1066, 442, 226, 881, 1015, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 997, 1063, 360, 393, 233, 472, 423, 262, 1102,
	0, 1104, 1100, 1103, 1101, 1120, 1121, 1142, 1143, 1144,
	1131, 1098, 192, 193, 1139, 1140, 194, 950, 1042, 864,
	0, 1018, 188, 189, 174, 179, 990, 1061, 1110, 242,
	164, 1093, 1094, 1095, 165, 1114, 1115, 167, 168, 1137,
	1136, 1135, 1138, 169, 1147, 1146, 1148, 1099, 1106, 1109,
	1116, 1117, 1118, 1125, 1126, 1133, 1128, 1129, 0, 946,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 1122, 199, 212, 312, 1062, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 1016, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1065, 346, 1034,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1012,
	1017, 1024, 1029, 1030, 474, 252, 949, 971, 1002, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 929, 196, 0, 0, 202, 0, 203, 205,
	916, 201, 1033, 1058, 978, 992, 903, 1045, 0, 0,
	451, 1112, 1049, 890, 913, 1059, 919, 921, 986, 865,
	961, 357, 910, 866, 0, 0, 857, 1107, 858, 891,
	259, 1105, 1019, 964, 1047, 947, 979, 989, 258, 244,
	954, 953, 1036, 902, 901, 984, 1032, 1046, 0, 0,
	172, 480, 190, 1145, 314, 0, 0, 478, 425, 339,
	0, 0, 945, 0, 1119, 1132, 930, 988, 877, 975,
	1051, 911, 980, 1052, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1127, 1141, 1108, 0, 940, 985, 1064, 856, 1124, 0,
	861, 1096, 0, 1037, 898, 899, 263, 0, 0, 0,
	0, 0, 0, 0, 943, 960, 1004, 927, 0, 471,
	991, 1000, 1014, 920, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	871, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 876, 854,
	896, 1006, 855, 853, 340, 868, 1134, 1035, 928, 301,
	191, 1041, 926, 1111, 994, 872, 1023, 1057, 914, 311,
	870, 195, 867, 873, 912, 353, 1003, 1009, 177, 198,
	313, 1020, 892, 905, 245, 0, 392, 981, 470, 1091,
	278, 0, 967, 391, 315, 463, 995, 1043, 469, 915,
	445, 479, 484, 271, 948, 234, 422, 261, 254, 897,
	1013, 860, 284, 375, 249, 306, 931, 987, 893, 241,
	998, 974, 1025, 421, 460, 200, 334, 461, 483, 166,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 1021, 1008, 1027, 888, 874, 880,
	875, 904, 1044, 293, 285, 1028, 1026, 906, 361, 224,
	958, 951, 944, 1130, 473, 1060, 257, 1010, 475, 180,
	408, 407, 918, 292, 1011, 181, 170, 385, 182, 302,
	204, 1031, 488, 220, 309, 453, 1090, 277, 352, 983,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1007, 382, 410, 458, 222, 428, 173, 176, 185, 400,
	186, 187, 1050, 322, 266, 270, 286, 297, 982, 389,
	429, 476, 976, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 1072, 229,
	409, 412, 487, 1005, 216, 237, 430, 210, 1039, 1022,
	969, 933, 939, 862, 0, 209, 934, 935, 936, 937,
	938, 1001, 895, 907, 887, 977, 886, 281, 993, 466,
	467, 246, 1097, 1054, 211, 1085, 1053, 349, 356, 348,
	1056, 1055, 462, 1040, 970, 957, 955, 863, 1038, 968,
	956, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 1081, 959, 427, 320, 0, 206, 0, 426, 1048,
	1066, 442, 226, 881, 1015, 457, 178, 381, 227, 279,
	267, 372, 1086, 1084, 1075, 1076, 308, 316, 997, 1063,
	360, 393, 233, 472, 423, 262, 1102, 0, 1104, 1100,
	1103, 1101, 1120, 1121, 1142, 1143, 1144, 1131, 1098, 192,
	193, 1139, 1140, 194, 950, 1042, 864, 0, 1018, 188,
	189, 174, 179, 990, 1061, 1110, 242, 164, 1093, 1094,
	1095, 165, 1114, 1115, 167, 168, 1137, 1136, 1135, 1138,
	169, 1147, 1146, 1148, 1099, 1106, 1109, 1116, 1117, 1118,
	1125, 1126, 1133, 1128, 1129, 0, 946, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 1122, 199,
	212, 312, 1062, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 1016, 973, 0, 923, 925, 924,
	883, 885, 884, 882, 1065, 346, 1034, 852, 859, 878,
	889, 894, 900, 908, 909, 917, 922, 932, 941, 942,
	952, 965, 966, 972, 996, 999, 1012, 1017, 1024, 1029,
	1030, 474, 252, 949, 971, 1002, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 1082, 1083, 379, 184, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 929,
	196, 0, 0, 202, 0, 203, 205, 916, 201, 1033,
	1058, 978, 992, 1830, 2009, 0, 1971, 451, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 480, 0,
	2020, 314, 1985, 0, 478, 425, 339, 0, 0, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 3162, 3167, 0, 3170,
	3172, 3171, 0, 0, 0, 3164, 0, 1923, 2007, 1834,
	0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 471, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 470, 0, 278, 0, 1909,
	391, 315, 463, 1943, 2006, 469, 1845, 445, 479, 484,
	271, 1885, 234, 422, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	421, 460, 200, 334, 461, 483, 3165, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 473, 2032, 257, 1961, 475, 0, 408, 407, 1848,
	292, 1962, 0, 0, 385, 3166, 302, 204, 1987, 488,
	220, 309, 453, 0, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1958, 382, 410,
	458, 222, 428, 0, 0, 0, 400, 0, 0, 2014,
	322, 266, 270, 286, 297, 1929, 389, 429, 476, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	1954, 216, 237, 430, 210, 2002, 1977, 1911, 1866, 1872,
	1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821,
	1837, 1809, 1924, 1808, 281, 1941, 466, 467, 246, 1784,
	2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023, 462,
	2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1899,
	427, 320, 0, 206, 0, 426, 2012, 2038, 442, 226,
	1803, 1969, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 1945, 2035, 360, 393, 233,
	472, 423, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903,
	1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996,
	0, 1890, 2005, 1778, 0, 1973, 0, 0, 0, 0,
	1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880,
	1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024,
	2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967,
	1940, 1949, 1823, 1882, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 1908, 199, 212, 312, 2034,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806,
	1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827,
	1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907,
	1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 474, 252,
	1888, 1913, 1951, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 1861, 196, 0, 0,
	202, 0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939,
	1830, 2009, 0, 1971, 451, 1864, 2013, 1813, 1843, 2031,
	1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818,
	1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884,
	1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931,
	1988, 2010, 1883, 0, 0, 480, 0, 2020, 314, 1985,
	0, 478, 425, 339, 0, 0, 1879, 1994, 1900, 1963,
	1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0,
	0, 0, 0, 3960, 3167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932,
	2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826,
	263, 0, 0, 0, 0, 0, 0, 0, 1877, 1901,
	1953, 1859, 0, 471, 1938, 1948, 1966, 1851, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1916, 0, 0, 0, 1787, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783,
	1968, 1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788,
	1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353,
	1952, 1960, 0, 198, 313, 1975, 1816, 1833, 245, 0,
	392, 1928, 470, 0, 278, 0, 1909, 391, 315, 463,
	1943, 2006, 469, 1845, 445, 479, 484, 271, 1885, 234,
	422, 261, 254, 1824, 1965, 1770, 284, 375, 249, 306,
	1863, 1934, 1817, 241, 1946, 1917, 1980, 421, 460, 200,
	334, 461, 483, 0, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 1976, 1959,
	1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983,
	1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 473, 2032,
	257, 1961, 475, 0, 408, 407, 1848, 292, 1962, 0,
	0, 385, 0, 302, 204, 1987, 488, 220, 309, 453,
	0, 277, 352, 1930, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1958, 382, 410, 458, 222, 428,
	0, 0, 0, 400, 0, 0, 2014, 322, 266, 270,
	286, 297, 1929, 389, 429, 476, 1920, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 1954, 216, 237,
	430, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 466, 467, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 462, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 427, 320, 0,
	206, 0, 426, 2012, 2038, 442, 226, 1803, 1969, 457,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 1945, 2035, 360, 393, 233, 472, 423, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 0, 0, 0, 0, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 474, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 451, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 0, 480, 0, 2020, 314, 1985, 0, 478, 425,
	339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	471, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 3906, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 470,
	0, 278, 0, 1909, 391, 315, 463, 1943, 2006, 469,
	1845, 445, 479, 484, 271, 1885, 234, 422, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 421, 460, 200, 334, 461, 483,
	0, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 473, 2032, 257, 1961, 475,
	0, 408, 407, 1848, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 488, 220, 309, 453, 0, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1958, 382, 410, 458, 222, 428, 0, 0, 0,
	400, 0, 0, 2014, 322, 266, 270, 286, 297, 1929,
	389, 429, 476, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 1954, 216, 237, 430, 210, 2002,
	1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869,
	1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941,
	466, 467, 246, 1784, 2022, 211, 1785, 2021, 349, 356,
	348, 2025, 2023, 462, 2003, 1912, 1897, 1895, 1777, 2001,
	1910, 1896, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1899, 427, 320, 0, 206, 0, 426,
	2012, 2038, 442, 226, 1803, 1969, 457, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 1945,
	2035, 360, 393, 233, 472, 423, 262, 1799, 0, 1802,
	1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792,
	0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973,
	0, 0, 0, 0, 1937, 2033, 1850, 242, 0, 1774,
	1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989,
	1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887,
	1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 1908,
	199, 212, 312, 2034, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 1970, 1915, 0, 1854, 1856,
	1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769,
	1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875,
	1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979,
	1984, 1986, 474, 252, 1888, 1913, 1951, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	1861, 196, 0, 0, 202, 0, 203, 205, 1846, 201,
	1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 451, 1864,
	2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357,
	1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811,
	1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893,
	1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 480,
	0, 2020, 314, 1985, 0, 478, 425, 339, 0, 0,
	1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841,
	1927, 2016, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 2007,
	1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782,
	2030, 2000, 1825, 1826, 263, 0, 0, 0, 0, 0,
	0, 0, 1877, 1901, 1953, 1859, 0, 471, 1938, 1948,
	1966, 1851, 376, 283, 0, 0, 0, 0, 0, 0,
	3215, 0, 1820, 0, 1916, 0, 0, 0, 1787, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955,
	1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004,
	1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195,
	1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975,
	1816, 1833, 245, 0, 392, 1928, 470, 0, 278, 0,
	1909, 391, 315, 463, 1943, 2006, 469, 1845, 445, 479,
	484, 271, 1885, 234, 422, 261, 254, 1824, 1965, 1770,
	284, 375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917,
	1980, 421, 460, 200, 334, 461, 483, 0, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832,
	2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891,
	1878, 1956, 473, 2032, 257, 1961, 475, 0, 408, 407,
	1848, 292, 1962, 0, 0, 385, 0, 302, 204, 1987,
	488, 220, 309, 453, 0, 277, 352, 1930, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1958, 382,
	410, 458, 222, 428, 0, 0, 0, 400, 0, 0,
	2014, 322, 266, 270, 286, 297, 1929, 389, 429, 476,
	1920, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 1954, 216, 237, 430, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 466, 467, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	462, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 427, 320, 0, 206, 0, 426, 2012, 2038, 442,
	226, 1803, 1969, 457, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 1945, 2035, 360, 393,
	233, 472, 423, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995,
	1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0, 0,
	0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0,
	1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 474,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 1830, 2009, 0, 1971, 451, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 0, 480, 0, 2020, 314,
	1985, 0, 478, 425, 339, 0, 0, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 2007, 1834, 0, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 471, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 470, 0, 278, 0, 1909, 391, 315,
	463, 1943, 2006, 469, 1845, 445, 479, 484, 271, 1885,
	234, 422, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 421, 460,
	200, 334, 461, 483, 0, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 473,
	2032, 257, 1961, 475, 0, 408, 407, 1848, 292, 1962,
	0, 0, 385, 0, 302, 204, 1987, 488, 220, 309,
	453, 0, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1958, 382, 410, 458, 222,
	428, 0, 0, 0, 400, 0, 0, 2014, 322, 266,
	270, 286, 297, 1929, 389, 429, 476, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 1954, 216,
	237, 430, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0,
	209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809,
	1924, 1808, 281, 1941, 466, 467, 246, 1784, 2022, 211,
	1785, 2021, 349, 356, 348, 2025, 2023, 462, 2003, 1912,
	1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1899, 427, 320,
	0, 206, 0, 426, 2012, 2038, 442, 226, 1803, 1969,
	457, 2324, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 1945, 2035, 360, 393, 233, 472, 423,
	262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017,
	2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890,
	2005, 1778, 0, 1973, 0, 0, 0, 0, 1937, 2033,
	1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0,
	0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793,
	1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949,
	1823, 1882, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 1908, 199, 212, 312, 2034, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 1970,
	1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037,
	346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839,
	1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944,
	1947, 1964, 1972, 1979, 1984, 1986, 474, 252, 1888, 1913,
	1951, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 1861, 196, 0, 0, 202, 0,
	203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009,
	0, 1971, 451, 1864, 2013, 1813, 1843, 2031, 1849, 1852,
	1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831,
	1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936,
	258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010,
	1883, 0, 0, 480, 0, 2020, 314, 1985, 0, 478,
	425, 339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935,
	1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766,
	1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0,
	0, 0, 0, 0, 0, 0, 1877, 1901, 1953, 1859,
	0, 471, 1938, 1948, 1966, 1851, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1916, 0,
	0, 0, 1787, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998,
	1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028,
	1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960,
	0, 198, 313, 1975, 1816, 1833, 245, 0, 392, 1928,
	470, 0, 278, 0, 1909, 391, 315, 463, 1943, 2006,
	469, 1845, 445, 479, 484, 271, 1885, 234, 422, 261,
	254, 1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934,
	1817, 241, 1946, 1917, 1980, 421, 460, 200, 334, 461,
	483, 0, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 1976, 1959, 1982, 1810,
	1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835,
	361, 224, 1898, 1891, 1878, 1956, 473, 2032, 257, 1961,
	475, 0, 408, 407, 1848, 292, 1962, 0, 0, 385,
	0, 302, 204, 1987, 488, 220, 309, 453, 0, 277,
	352, 1930, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1958, 382, 410, 458, 222, 428, 0, 0,
	0, 400, 0, 0, 2014, 322, 266, 270, 286, 297,
	1929, 389, 429, 476, 1920, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 1954, 216, 237, 430, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 466, 467, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 462, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 427, 320, 0, 206, 0,
	426, 2012, 2038, 442, 226, 1803, 1969, 457, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	1945, 2035, 360, 393, 233, 472, 423, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0,
	1973, 0, 0, 0, 0, 1937, 2033, 1850, 242, 0,
	1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 474, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 4076, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 451,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0,
	480, 0, 2020, 314, 1985, 0, 478, 425, 339, 0,
	0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 471, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 470, 0, 278,
	0, 1909, 391, 315, 463, 1943, 2006, 469, 1845, 445,
	479, 484, 271, 1885, 234, 422, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 421, 460, 200, 334, 461, 483, 0, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 473, 2032, 257, 1961, 475, 0, 408,
	407, 1848, 292, 1962, 0, 0, 385, 0, 302, 204,
	1987, 488, 220, 309, 453, 0, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1958,
	382, 410, 458, 222, 428, 0, 0, 0, 400, 0,
	0, 2014, 322, 266, 270, 286, 297, 1929, 389, 429,
	476, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 1954, 216, 237, 430, 210, 2002, 1977, 1911,
	1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871,
	1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 466, 467,
	246, 1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025,
	2023, 462, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1899, 427, 320, 0, 206, 0, 426, 2012, 2038,
	442, 226, 1803, 1969, 457, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 1945, 2035, 360,
	393, 233, 472, 423, 262, 1799, 0, 1802, 1797, 1800,
	1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0,
	1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0,
	0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776,
	0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0,
	2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921,
	1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 1908, 199, 212,
	312, 2034, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 1970, 1915, 0, 1854, 1856, 1855, 1805,
	1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812,
	1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892,
	1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986,
	474, 252, 1888, 1913, 1951, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 1861, 196,
	0, 0, 202, 0, 203, 205, 1846, 201, 1993, 2029,
	1925, 1939, 1830, 2009, 0, 1971, 451, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 0, 480, 0, 2020,
	314, 1985, 0, 478, 425, 339, 0, 0, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 4364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 2007, 1834, 0,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 471, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 470, 0, 278, 0, 1909, 391,
	315, 463, 1943, 2006, 469, 1845, 445, 479, 484, 271,
	1885, 234, 422, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 421,
	460, 200, 334, 461, 483, 0, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 4367, 4368, 4369, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	473, 2032, 257, 1961, 475, 0, 408, 407, 1848, 292,
	1962, 0, 0, 385, 0, 302, 204, 1987, 488, 220,
	309, 453, 0, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1958, 382, 410, 458,
	222, 428, 0, 0, 0, 400, 0, 0, 2014, 322,
	266, 270, 286, 297, 1929, 389, 429, 476, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 1954,
	216, 237, 430, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 466, 467, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 462, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 427,
	320, 0, 206, 0, 426, 2012, 2038, 442, 226, 1803,
	1969, 457, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 1945, 2035, 360, 393, 233, 472,
	423, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 0, 0, 0, 0, 1937,
	2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 474, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 451, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 0, 480, 0, 2020, 314, 1985, 0,
	478, 425, 339, 0, 0, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 0, 3167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 471, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 0, 198, 313, 1975, 1816, 1833, 245, 0, 392,
	1928, 470, 0, 278, 0, 1909, 391, 315, 463, 1943,
	2006, 469, 1845, 445, 479, 484, 271, 1885, 234, 422,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 421, 460, 200, 334,
	461, 483, 0, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 473, 2032, 257,
	1961, 475, 0, 408, 407, 1848, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 488, 220, 309, 453, 0,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1958, 382, 410, 458, 222, 428, 0,
	0, 0, 400, 0, 0, 2014, 322, 266, 270, 286,
	297, 1929, 389, 429, 476, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 1954, 216, 237, 430,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 466, 467, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 462, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 427, 320, 0, 206,
	0, 426, 2012, 2038, 442, 226, 1803, 1969, 457, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 1945, 2035, 360, 393, 233, 472, 423, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778,
	0, 1973, 0, 0, 0, 0, 1937, 2033, 1850, 242,
	0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 474, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 590, 451, 584, 595,
	577, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 641, 0, 0, 0, 0, 0, 259, 0, 0,
	585, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 638, 639, 0, 733,
	0, 734, 736, 737, 738, 739, 0, 0, 0, 735,
	2316, 3383, 3384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 3378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 0, 576, 575, 578, 0, 0,
	0, 340, 0, 0, 0, 583, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 587, 0, 0, 198, 313, 591, 0,
	0, 245, 0, 392, 2313, 470, 0, 278, 0, 0,
	391, 315, 463, 0, 594, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 579, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 0, 408, 407, 582,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 488,
	220, 309, 453, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 644, 410,
	458, 222, 428, 580, 581, 588, 589, 592, 593, 596,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	1663, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 2314,
	2315, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 4444, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 3395, 1067, 0, 3385,
	3386, 3388, 3396, 3397, 3387, 3389, 3390, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3391,
	3392, 3393, 3394, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 1664, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 586, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 0, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 590, 451, 584, 595,
	577, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 569, 0, 0, 0, 0, 0, 259, 0, 0,
	585, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 1677, 1680, 1681, 1682, 1683,
	1684, 1685, 0, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 0, 1665, 1666, 1667,
	1647, 1646, 1678, 1648, 1651, 1645, 1649, 1644, 0, 0,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 0,
	0, 0, 0, 0, 0, 576, 575, 578, 0, 0,
	0, 340, 0, 0, 0, 583, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 587, 0, 0, 198, 313, 591, 0,
	0, 245, 0, 392, 0, 470, 0, 278, 0, 0,
	391, 315, 463, 0, 594, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 579, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 1679, 0,
	0, 473, 0, 257, 0, 475, 0, 408, 407, 582,
	292, 1668, 0, 0, 385, 0, 302, 204, 0, 488,
	220, 309, 453, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 572, 410,
	458, 222, 428, 580, 581, 588, 589, 592, 593, 596,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 586, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 2465, 2469, 0, 172, 480, 190, 0,
	314, 0, 499, 478, 425, 339, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 2468, 301, 191, 0, 0, 0,
	2461, 0, 2462, 2464, 2463, 311, 1166, 195, 0, 2459,
	2467, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 1160, 392, 0, 470, 498, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 180, 408, 407, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 488, 220,
	309, 453, 497, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 1479, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 480, 190, 0, 314,
	0, 499, 478, 425, 339, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 1480, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 500, 0,
	1475, 1476, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 498, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 166, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 180, 408, 407, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 488, 220, 309,
	453, 497, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 480, 190, 0, 314, 0,
	499, 478, 425, 339, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1166, 195, 0, 1162, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 1160,
	392, 0, 470, 498, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 166, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 180, 408, 407, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 488, 220, 309, 453,
	497, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 410, 458, 222, 428,
	173, 176, 185, 400, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 0, 196, 42, 451, 202, 0, 203,
	205, 0, 201, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 480, 190, 88,
	314, 0, 0, 478, 425, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 681, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 96, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 0, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 180, 408, 407, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 488, 220,
	309, 453, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 682, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 109, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 675,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 480, 190, 0, 314,
	0, 499, 478, 425, 339, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 3539, 195, 0, 0, 3538,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 498, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 166, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 180, 408, 407, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 488, 220, 309,
	453, 497, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 480, 190, 0, 314, 0,
	499, 478, 425, 339, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3506, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1166, 195, 0, 0, 2467, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 470, 498, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 166, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 180, 408, 407, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 488, 220, 309, 453,
	497, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 410, 458, 222, 428,
	173, 176, 185, 400, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 451, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 480, 190, 0, 314, 0, 0,
	478, 425, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 681, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 470, 0, 278, 0, 0, 391, 315, 463, 0,
	0, 469, 0, 445, 479, 484, 271, 0, 234, 422,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 473, 0, 257,
	0, 475, 180, 408, 407, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 488, 220, 309, 453, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 429, 476, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 0, 216, 237, 430,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 466, 467, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 427, 320, 0, 206,
	0, 426, 0, 0, 442, 226, 0, 0, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 0, 0, 360, 393, 233, 472, 423, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3212, 682,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 252, 675, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 451, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 480, 190, 0, 314, 0, 499, 478,
	425, 339, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2919, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 1166, 195, 0, 0, 2467, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	470, 498, 278, 0, 0, 391, 315, 463, 0, 0,
	469, 0, 445, 479, 484, 271, 0, 234, 422, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 473, 0, 257, 0,
	475, 180, 408, 407, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 488, 220, 309, 453, 497, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 429, 476, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 0, 216, 237, 430, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 466, 467, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 427, 320, 0, 206, 0,
	426, 0, 0, 442, 226, 0, 0, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	0, 0, 360, 393, 233, 472, 423, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 451, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 480, 190, 0, 314, 0, 499, 478, 425,
	339, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 1480, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 2271, 392, 0, 470,
	498, 278, 0, 0, 391, 315, 463, 0, 0, 469,
	0, 445, 479, 484, 271, 0, 234, 422, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 421, 460, 200, 334, 461, 483,
	166, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 473, 0, 257, 0, 475,
	180, 408, 407, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 488, 220, 309, 453, 497, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 410, 458, 222, 428, 173, 176, 185,
	400, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 429, 476, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 0, 216, 237, 430, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	466, 467, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 427, 320, 0, 206, 0, 426,
	0, 0, 442, 226, 0, 0, 457, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 0,
	0, 360, 393, 233, 472, 423, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	451, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 480, 190, 0, 314, 0, 0, 478, 425, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 470, 0,
	278, 0, 0, 391, 315, 463, 0, 0, 469, 0,
	445, 479, 484, 271, 0, 234, 422, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 421, 460, 200, 334, 461, 483, 166,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 473, 0, 257, 0, 475, 180,
	408, 407, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 488, 220, 309, 453, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 410, 458, 222, 428, 173, 176, 185, 400,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	429, 476, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 0, 216, 237, 430, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 466,
	467, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 427, 320, 0, 206, 0, 426, 0,
	0, 442, 226, 0, 0, 457, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 0, 0,
	360, 393, 233, 472, 423, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 682, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 252, 675, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 451,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	480, 190, 0, 314, 0, 499, 478, 425, 339, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3497, 0, 0, 0, 0, 0, 3499,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 470, 498, 278,
	0, 0, 391, 315, 463, 0, 0, 469, 0, 445,
	479, 484, 271, 0, 234, 422, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 421, 460, 200, 334, 461, 483, 166, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 473, 0, 257, 0, 475, 180, 408,
	407, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 488, 220, 309, 453, 497, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 410, 458, 222, 428, 173, 176, 185, 400, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 429,
	476, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 0, 216, 237, 430, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 466, 467,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 427, 320, 0, 206, 0, 426, 0, 0,
	442, 226, 0, 0, 457, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 0, 0, 360,
	393, 233, 472, 423, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 451, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 480,
	190, 0, 314, 0, 499, 478, 425, 339, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2046, 2044, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 470, 498, 278, 0,
	0, 391, 315, 463, 0, 0, 469, 0, 445, 479,
	484, 271, 0, 234, 422, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 473, 0, 257, 0, 475, 180, 408, 407,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	488, 220, 309, 453, 497, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	410, 458, 222, 428, 173, 176, 185, 400, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 429, 476,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 0, 216, 237, 430, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 466, 467, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 427, 320, 0, 206, 0, 426, 0, 0, 442,
	226, 0, 0, 457, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 0, 0, 360, 393,
	233, 472, 423, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 451, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 480, 190,
	0, 314, 0, 499, 478, 425, 339, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 2044, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 470, 498, 278, 0, 0,
	391, 315, 463, 0, 0, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 166, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 180, 408, 407, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 488,
	220, 309, 453, 497, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 410,
	458, 222, 428, 173, 176, 185, 400, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 480, 190, 0,
	314, 0, 499, 478, 425, 339, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1166, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 498, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 180, 408, 407, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 488, 220,
	309, 453, 497, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 480, 190, 0, 314,
	0, 499, 478, 425, 339, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3356, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 498, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 166, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 180, 408, 407, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 488, 220, 309,
	453, 497, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 410, 458, 222,
	428, 173, 176, 185, 400, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 480, 190, 0, 314, 0,
	499, 478, 425, 339, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 470, 498, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 166, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 180, 408, 407, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 488, 220, 309, 453,
	497, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 410, 458, 222, 428,
	173, 176, 185, 400, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 451, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 480, 190, 0, 314, 0, 499,
	478, 425, 339, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3499, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 470, 498, 278, 0, 0, 391, 315, 463, 0,
	0, 469, 0, 445, 479, 484, 271, 0, 234, 422,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 473, 0, 257,
	0, 475, 180, 408, 407, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 488, 220, 309, 453, 497,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 429, 476, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 0, 216, 237, 430,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 466, 467, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 427, 320, 0, 206,
	0, 426, 0, 0, 442, 226, 0, 0, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 0, 0, 360, 393, 233, 472, 423, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 451, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 480, 190, 0, 314, 0, 499, 478,
	425, 339, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	470, 498, 278, 0, 0, 391, 315, 463, 0, 0,
	469, 0, 445, 479, 484, 271, 0, 234, 422, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 473, 0, 257, 0,
	475, 180, 408, 407, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 488, 220, 309, 453, 497, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 429, 476, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 0, 216, 237, 430, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 466, 467, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 427, 320, 0, 206, 0,
	426, 0, 0, 442, 226, 0, 0, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	0, 0, 360, 393, 233, 472, 423, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 451, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 480, 190, 0, 314, 0, 499, 478, 425,
	339, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 470,
	498, 278, 0, 0, 391, 315, 463, 0, 0, 469,
	0, 445, 479, 484, 271, 0, 234, 422, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 421, 460, 200, 334, 461, 483,
	166, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 473, 0, 257, 0, 475,
	180, 408, 407, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 488, 220, 309, 453, 497, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 410, 458, 222, 428, 173, 176, 185,
	400, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 429, 476, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 0, 216, 237, 430, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	466, 467, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 427, 320, 0, 206, 0, 426,
	0, 0, 442, 226, 0, 0, 457, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 0,
	0, 360, 393, 233, 472, 423, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	451, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 480, 190, 0, 314, 0, 499, 478, 425, 339,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 470, 498,
	278, 0, 0, 391, 315, 463, 0, 0, 469, 0,
	445, 479, 484, 271, 0, 234, 422, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 421, 460, 200, 334, 461, 483, 166,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 473, 0, 257, 0, 475, 180,
	408, 407, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 488, 220, 309, 453, 497, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 410, 458, 222, 428, 173, 176, 185, 400,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	429, 476, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 0, 216, 237, 430, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 466,
	467, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 427, 320, 0, 206, 0, 426, 0,
	0, 442, 226, 0, 0, 457, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 0, 0,
	360, 393, 233, 472, 423, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 451,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	480, 190, 0, 314, 0, 0, 478, 425, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 470, 549, 546,
	0, 0, 391, 315, 463, 0, 0, 469, 0, 445,
	479, 484, 271, 0, 234, 422, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 421, 460, 200, 334, 461, 483, 166, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 473, 0, 257, 0, 475, 180, 408,
	407, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 488, 220, 309, 453, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 410, 458, 222, 428, 173, 176, 185, 400, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 429,
	476, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 0, 216, 237, 430, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 466, 467,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 427, 320, 0, 206, 0, 426, 0, 0,
	442, 226, 0, 0, 457, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 0, 0, 360,
	393, 233, 472, 423, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 451, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 480,
	190, 0, 314, 0, 499, 478, 425, 339, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 470, 498, 278, 0,
	0, 391, 315, 463, 0, 0, 469, 0, 445, 479,
	484, 271, 0, 234, 422, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 473, 0, 257, 0, 475, 180, 408, 407,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	488, 220, 309, 453, 497, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	410, 458, 222, 428, 173, 176, 185, 400, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 429, 476,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 0, 216, 237, 430, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 466, 467, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 427, 320, 0, 206, 0, 426, 0, 0, 442,
	226, 0, 0, 457, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 0, 0, 360, 393,
	233, 472, 423, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 451, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 480, 190,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 470, 2539, 278, 0, 0,
	391, 315, 463, 0, 0, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 166, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 180, 408, 407, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 488,
	220, 309, 453, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 410,
	458, 222, 428, 173, 176, 185, 400, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 480, 190, 0,
	314, 0, 0, 478, 425, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	2425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 0, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 166, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 180, 408, 407, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 488, 220,
	309, 453, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 410, 458,
	222, 428, 173, 176, 185, 400, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 0, 196, 0, 0, 202,
	0, 203, 205, 451, 201, 0, 0, 1609, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 480, 190, 0, 314, 0, 0,
	478, 425, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 470, 0, 278, 0, 0, 391, 315, 463, 0,
	0, 469, 0, 445, 479, 484, 271, 0, 234, 422,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 421, 460, 200, 334,
	461, 483, 166, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 473, 0, 257,
	0, 475, 180, 408, 407, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 488, 220, 309, 453, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 410, 458, 222, 428, 173,
	176, 185, 400, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 429, 476, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 0, 216, 237, 430,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 466, 467, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 427, 320, 0, 206,
	0, 426, 0, 0, 442, 226, 0, 0, 457, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 0, 0, 360, 393, 233, 472, 423, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 451, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 480, 190, 0, 314, 0, 0, 478,
	425, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 155,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	470, 0, 278, 0, 0, 391, 315, 463, 0, 0,
	469, 0, 445, 479, 484, 271, 0, 234, 422, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 421, 460, 200, 334, 461,
	483, 166, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 473, 0, 257, 0,
	475, 180, 408, 407, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 488, 220, 309, 453, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 410, 458, 222, 428, 173, 176,
	185, 400, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 429, 476, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 0, 216, 237, 430, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 466, 467, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 427, 320, 0, 206, 0,
	426, 0, 0, 442, 226, 0, 0, 457, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	0, 0, 360, 393, 233, 472, 423, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 451, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 480, 190, 0, 314, 0, 0, 478, 425,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 470,
	0, 278, 0, 0, 391, 315, 463, 0, 0, 469,
	0, 445, 479, 484, 271, 0, 234, 422, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 421, 460, 200, 334, 461, 483,
	166, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 473, 0, 257, 0, 475,
	180, 408, 407, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 488, 220, 309, 453, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 410, 458, 222, 428, 173, 176, 185,
	400, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 429, 476, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 0, 216, 237, 430, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	466, 467, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 427, 320, 0, 206, 0, 426,
	0, 0, 442, 226, 0, 0, 457, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 0,
	0, 360, 393, 233, 472, 423, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	451, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 0, 314, 0, 0, 478, 425, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 376, 283, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 470, 0,
	278, 0, 0, 391, 315, 463, 0, 0, 469, 0,
	445, 479, 484, 271, 0, 234, 422, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 421, 460, 200, 334, 461, 483, 0,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 473, 0, 257, 0, 475, 0,
	408, 407, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 488, 220, 309, 453, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 410, 458, 222, 428, 0, 0, 0, 400,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	429, 476, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 0, 216, 237, 430, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 466,
	467, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 427, 320, 0, 206, 0, 426, 0,
	0, 442, 226, 0, 0, 457, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 0, 0,
	360, 393, 233, 472, 423, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 451,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 314, 0, 0, 478, 425, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 1164,
	734, 736, 737, 738, 739, 0, 0, 0, 735, 2316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 730, 0, 392, 0, 470, 0, 278,
	0, 0, 391, 315, 463, 0, 0, 469, 0, 445,
	479, 484, 271, 0, 234, 422, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 421, 460, 200, 334, 461, 483, 0, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 473, 0, 257, 0, 475, 0, 408,
	407, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 488, 220, 309, 453, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 410, 458, 222, 428, 0, 0, 0, 400, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 429,
	476, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 0, 216, 237, 430, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 731, 732,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 427, 320, 0, 206, 0, 426, 0, 0,
	442, 226, 0, 0, 457, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 0, 0, 360,
	393, 233, 472, 423, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 451, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 314, 0, 0, 478, 425, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 470, 0, 278, 0,
	0, 391, 315, 463, 0, 0, 469, 0, 445, 479,
	484, 271, 0, 234, 422, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 421, 460, 200, 334, 461, 483, 166, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 473, 0, 257, 0, 475, 0, 408, 407,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	488, 220, 309, 453, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	410, 458, 222, 428, 0, 0, 0, 400, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 429, 476,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 0, 216, 237, 430, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 466, 467, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 427, 320, 0, 206, 0, 426, 0, 0, 442,
	226, 0, 0, 457, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 0, 0, 360, 393,
	233, 472, 423, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	252, 0, 0, 656, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 451, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 470, 0, 278, 0, 0,
	391, 315, 463, 0, 0, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 166, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 0, 408, 407, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 488,
	220, 309, 453, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 410,
	458, 222, 428, 0, 0, 0, 400, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	4462, 0, 0, 0, 0, 0, 259, 4460, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 0, 0,
	314, 0, 0, 478, 425, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 0, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 0, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 0, 408, 407, 0, 292,
	0, 4461, 0, 385, 0, 302, 204, 0, 488, 220,
	309, 453, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 410, 458,
	222, 428, 0, 0, 0, 400, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 314,
	0, 0, 478, 425, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2991, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 0, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 2992, 2993, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 0, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 0, 408, 407, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 488, 220, 309,
	453, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 410, 458, 222,
	428, 0, 0, 0, 400, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1626, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 314, 0,
	0, 478, 425, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 470, 0, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 0, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 0, 408, 407, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 488, 220, 309, 453,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 410, 458, 222, 428,
	0, 0, 0, 400, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 451, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 2469, 0, 0, 480, 0, 0, 314, 0, 0,
	478, 425, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 2468, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 470, 0, 278, 0, 0, 391, 315, 463, 0,
	0, 469, 0, 445, 479, 484, 271, 0, 234, 422,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 421, 460, 200, 334,
	461, 483, 0, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 473, 0, 257,
	0, 475, 0, 408, 407, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 488, 220, 309, 453, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 410, 458, 222, 428, 0,
	0, 0, 400, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 429, 476, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 0, 216, 237, 430,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 466, 467, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 427, 320, 0, 206,
	0, 426, 0, 0, 442, 226, 0, 0, 457, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 0, 0, 360, 393, 233, 472, 423, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 451, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 314, 0, 0, 478,
	425, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	470, 0, 278, 0, 0, 391, 315, 463, 0, 0,
	469, 0, 445, 479, 484, 271, 0, 234, 422, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 421, 460, 200, 334, 461,
	483, 0, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 473, 0, 257, 0,
	475, 0, 408, 407, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 488, 220, 309, 453, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 410, 458, 222, 428, 0, 0,
	0, 400, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 429, 476, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 0, 216, 237, 430, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 466, 467, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 427, 320, 0, 206, 0,
	426, 0, 0, 442, 226, 0, 0, 457, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	0, 0, 360, 393, 233, 472, 423, 262, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 451, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 314, 0, 0, 478, 425,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 470,
	0, 278, 0, 0, 391, 315, 463, 0, 0, 469,
	0, 445, 479, 484, 271, 0, 234, 422, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 421, 460, 200, 334, 461, 483,
	0, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 473, 0, 257, 0, 475,
	0, 408, 407, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 488, 220, 309, 453, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 410, 458, 222, 428, 0, 0, 0,
	400, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 429, 476, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 0, 216, 237, 430, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	466, 467, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 427, 320, 0, 206, 0, 426,
	0, 0, 442, 226, 0, 0, 457, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 0,
	0, 360, 393, 233, 472, 423, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	451, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3553, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 0, 314, 0, 0, 478, 425, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 470, 0,
	278, 0, 0, 391, 315, 463, 0, 0, 469, 0,
	445, 479, 484, 271, 0, 234, 422, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 421, 460, 200, 334, 461, 483, 0,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 473, 0, 257, 0, 475, 0,
	408, 407, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 488, 220, 309, 453, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 410, 458, 222, 428, 0, 0, 0, 400,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	429, 476, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 0, 216, 237, 430, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 466,
	467, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 427, 320, 0, 206, 0, 426, 0,
	0, 442, 226, 0, 0, 457, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 0, 0,
	360, 393, 233, 472, 423, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 451,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 3551, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 314, 0, 0, 478, 425, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 470, 0, 278,
	0, 0, 391, 315, 463, 0, 0, 469, 0, 445,
	479, 484, 271, 0, 234, 422, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 421, 460, 200, 334, 461, 483, 0, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 473, 0, 257, 0, 475, 0, 408,
	407, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 488, 220, 309, 453, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 410, 458, 222, 428, 0, 0, 0, 400, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 429,
	476, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 0, 216, 237, 430, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 466, 467,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 427, 320, 0, 206, 0, 426, 0, 0,
	442, 226, 0, 0, 457, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 0, 0, 360,
	393, 233, 472, 423, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 451, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3549, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 314, 0, 0, 478, 425, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 470, 0, 278, 0,
	0, 391, 315, 463, 0, 0, 469, 0, 445, 479,
	484, 271, 0, 234, 422, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 421, 460, 200, 334, 461, 483, 0, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 473, 0, 257, 0, 475, 0, 408, 407,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	488, 220, 309, 453, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	410, 458, 222, 428, 0, 0, 0, 400, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 429, 476,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 0, 216, 237, 430, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 466, 467, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 427, 320, 0, 206, 0, 426, 0, 0, 442,
	226, 0, 0, 457, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 0, 0, 360, 393,
	233, 472, 423, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 451, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3547, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 470, 0, 278, 0, 0,
	391, 315, 463, 0, 0, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 0, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 0, 408, 407, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 488,
	220, 309, 453, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 410,
	458, 222, 428, 0, 0, 0, 400, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	3542, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 0, 0,
	314, 0, 0, 478, 425, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 0, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 0, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 0, 408, 407, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 488, 220,
	309, 453, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 410, 458,
	222, 428, 0, 0, 0, 400, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 3529,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 314,
	0, 0, 478, 425, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 0, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 0, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 0, 408, 407, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 488, 220, 309,
	453, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 410, 458, 222,
	428, 0, 0, 0, 400, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3527, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 314, 0,
	0, 478, 425, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 470, 0, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 0, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 0, 408, 407, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 488, 220, 309, 453,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 410, 458, 222, 428,
	0, 0, 0, 400, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 451, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 0, 0, 314, 0, 0,
	478, 425, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 3462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 470, 0, 278, 0, 0, 391, 315, 463, 0,
	0, 469, 0, 445, 479, 484, 271, 0, 234, 422,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 421, 460, 200, 334,
	461, 483, 0, 272, 413, 273, 444, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 486, 477,
	225, 274, 386, 390, 367, 221, 452, 335, 345, 238,
	240, 239, 215, 414, 459, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 473, 0, 257,
	0, 475, 0, 408, 407, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 488, 220, 309, 453, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 410, 458, 222, 428, 0,
	0, 0, 400, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 429, 476, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 431, 449,
	402, 280, 321, 323, 433, 440, 434, 435, 436, 437,
	432, 439, 438, 396, 397, 398, 399, 307, 441, 208,
	443, 468, 229, 409, 412, 487, 0, 216, 237, 430,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 466, 467, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 427, 320, 0, 206,
	0, 426, 0, 0, 442, 226, 0, 0, 457, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 424, 308,
	316, 0, 0, 360, 393, 233, 472, 423, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 411, 417, 418, 446,
	447, 448, 450, 454, 455, 456, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 415,
	338, 298, 247, 485, 341, 383, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	401, 403, 404, 405, 406, 416, 419, 420, 464, 465,
	481, 482, 451, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 314, 0, 0, 478,
	425, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3453, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	470, 0, 278, 0, 0, 391, 315, 463, 0, 0,
	469, 0, 445, 479, 484, 271, 0, 234, 422, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 421, 460, 200, 334, 461,
	483, 0, 272, 413, 273, 444, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 486, 477, 225,
	274, 386, 390, 367, 221, 452, 335, 345, 238, 240,
	239, 215, 414, 459, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 473, 0, 257, 0,
	475, 0, 408, 407, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 488, 220, 309, 453, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 410, 458, 222, 428, 0, 0,
	0, 400, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 429, 476, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 431, 449, 402,
	280, 321, 323, 433, 440, 434, 435, 436, 437, 432,
	439, 438, 396, 397, 398, 399, 307, 441, 208, 443,
	468, 229, 409, 412, 487, 0, 216, 237, 430, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 466, 467, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 427, 320, 0, 206, 0,
	426, 0, 0, 442, 226, 0, 0, 457, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 424, 308, 316,
	0, 0, 360, 393, 233, 472, 423, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 411, 417, 418, 446, 447,
	448, 450, 454, 455, 456, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 415, 338,
	298, 247, 485, 341, 383, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 401,
	403, 404, 405, 406, 416, 419, 420, 464, 465, 481,
	482, 451, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 314, 0, 0, 478, 425,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 470,
	0, 278, 0, 0, 391, 315, 463, 0, 0, 469,
	0, 445, 479, 484, 271, 0, 234, 422, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 421, 460, 200, 334, 461, 483,
	0, 272, 413, 273, 444, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 486, 477, 225, 274,
	386, 390, 367, 221, 452, 335, 345, 238, 240, 239,
	215, 414, 459, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 473, 0, 257, 0, 475,
	0, 408, 407, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 488, 220, 309, 453, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 410, 458, 222, 428, 0, 0, 0,
	400, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 429, 476, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 431, 449, 402, 280,
	321, 323, 433, 440, 434, 435, 436, 437, 432, 439,
	438, 396, 397, 398, 399, 307, 441, 208, 443, 468,
	229, 409, 412, 487, 0, 216, 237, 430, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	466, 467, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 427, 320, 0, 206, 0, 426,
	0, 0, 442, 226, 0, 0, 457, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 424, 308, 316, 0,
	0, 360, 393, 233, 472, 423, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 411, 417, 418, 446, 447, 448,
	450, 454, 455, 456, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 415, 338, 298,
	247, 485, 341, 383, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 401, 403,
	404, 405, 406, 416, 419, 420, 464, 465, 481, 482,
	451, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 0, 314, 0, 0, 478, 425, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 2591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 470, 0,
	278, 0, 0, 391, 315, 463, 0, 0, 469, 0,
	445, 479, 484, 271, 0, 234, 422, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 421, 460, 200, 334, 461, 483, 0,
	272, 413, 273, 444, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 486, 477, 225, 274, 386,
	390, 367, 221, 452, 335, 345, 238, 240, 239, 215,
	414, 459, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 473, 0, 257, 0, 475, 0,
	408, 407, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 488, 220, 309, 453, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 410, 458, 222, 428, 0, 0, 0, 400,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	429, 476, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 431, 449, 402, 280, 321,
	323, 433, 440, 434, 435, 436, 437, 432, 439, 438,
	396, 397, 398, 399, 307, 441, 208, 443, 468, 229,
	409, 412, 487, 0, 216, 237, 430, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 466,
	467, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 427, 320, 0, 206, 0, 426, 0,
	0, 442, 226, 0, 0, 457, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 424, 308, 316, 0, 0,
	360, 393, 233, 472, 423, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 411, 417, 418, 446, 447, 448, 450,
	454, 455, 456, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 415, 338, 298, 247,
	485, 341, 383, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 401, 403, 404,
	405, 406, 416, 419, 420, 464, 465, 481, 482, 451,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 2748, 2747, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 314, 0, 0, 478, 425, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 470, 0, 278,
	0, 0, 391, 315, 463, 0, 0, 469, 0, 445,
	479, 484, 271, 0, 234, 422, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 421, 460, 200, 334, 461, 483, 0, 272,
	413, 273, 444, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 486, 477, 225, 274, 386, 390,
	367, 221, 452, 335, 345, 238, 240, 239, 215, 414,
	459, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 473, 0, 257, 0, 475, 0, 408,
	407, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 488, 220, 309, 453, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 410, 458, 222, 428, 0, 0, 0, 400, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 429,
	476, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 431, 449, 402, 280, 321, 323,
	433, 440, 434, 435, 436, 437, 432, 439, 438, 396,
	397, 398, 399, 307, 441, 208, 443, 468, 229, 409,
	412, 487, 0, 216, 237, 430, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 466, 467,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 427, 320, 0, 206, 0, 426, 0, 0,
	442, 226, 0, 0, 457, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 424, 308, 316, 0, 0, 360,
	393, 233, 472, 423, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 411, 417, 418, 446, 447, 448, 450, 454,
	455, 456, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 415, 338, 298, 247, 485,
	341, 383, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 401, 403, 404, 405,
	406, 416, 419, 420, 464, 465, 481, 482, 451, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 314, 0, 0, 478, 425, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 470, 0, 278, 0,
	0, 391, 315, 463, 0, 0, 469, 0, 445, 479,
	484, 271, 0, 234, 422, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 421, 460, 200, 334, 461, 483, 0, 272, 413,
	273, 444, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 486, 477, 225, 274, 386, 390, 367,
	221, 452, 335, 345, 238, 240, 239, 215, 414, 459,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 473, 0, 257, 0, 475, 0, 408, 407,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	488, 220, 309, 453, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	410, 458, 222, 428, 0, 0, 0, 400, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 429, 476,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 431, 449, 402, 280, 321, 323, 433,
	440, 434, 435, 436, 437, 432, 439, 438, 396, 397,
	398, 399, 307, 441, 208, 443, 468, 229, 409, 412,
	487, 0, 216, 237, 430, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 466, 467, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 427, 320, 0, 206, 0, 426, 0, 0, 442,
	226, 0, 0, 457, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 424, 308, 316, 0, 0, 360, 393,
	233, 472, 423, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 411, 417, 418, 446, 447, 448, 450, 454, 455,
	456, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 415, 338, 298, 247, 485, 341,
	383, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 401, 403, 404, 405, 406,
	416, 419, 420, 464, 465, 481, 482, 451, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 314, 0, 0, 478, 425, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 470, 0, 278, 0, 0,
	391, 315, 463, 0, 0, 469, 0, 445, 479, 484,
	271, 0, 234, 422, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	421, 460, 200, 334, 461, 483, 0, 272, 413, 273,
	444, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 486, 477, 225, 274, 386, 390, 367, 221,
	452, 335, 345, 238, 240, 239, 215, 414, 459, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 473, 0, 257, 0, 475, 0, 408, 407, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 488,
	220, 309, 453, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 410,
	458, 222, 428, 0, 0, 0, 400, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 429, 476, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 431, 449, 402, 280, 321, 323, 433, 440,
	434, 435, 436, 437, 432, 439, 438, 396, 397, 398,
	399, 307, 441, 208, 443, 468, 229, 409, 412, 487,
	0, 216, 237, 430, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 466, 467, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	427, 320, 0, 206, 0, 426, 0, 0, 442, 226,
	0, 0, 457, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 424, 308, 316, 0, 0, 360, 393, 233,
	472, 423, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	411, 417, 418, 446, 447, 448, 450, 454, 455, 456,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 415, 338, 298, 247, 485, 341, 383,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 401, 403, 404, 405, 406, 416,
	419, 420, 464, 465, 481, 482, 451, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 0, 0,
	314, 0, 0, 478, 425, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 470, 0, 278, 0, 0, 391,
	315, 463, 0, 0, 469, 0, 445, 479, 484, 271,
	0, 234, 422, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 421,
	460, 200, 334, 461, 483, 0, 272, 413, 273, 444,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 486, 477, 225, 274, 386, 390, 367, 221, 452,
	335, 345, 238, 240, 239, 215, 414, 459, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	473, 0, 257, 0, 475, 0, 408, 407, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 488, 220,
	309, 453, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 410, 458,
	222, 428, 0, 0, 0, 400, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 429, 476, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 431, 449, 402, 280, 321, 323, 433, 440, 434,
	435, 436, 437, 432, 439, 438, 396, 397, 398, 399,
	307, 441, 208, 443, 468, 229, 409, 412, 487, 0,
	216, 237, 430, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 466, 467, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 427,
	320, 0, 206, 0, 426, 0, 0, 442, 226, 0,
	0, 457, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 424, 308, 316, 0, 0, 360, 393, 233, 472,
	423, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 411,
	417, 418, 446, 447, 448, 450, 454, 455, 456, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 415, 338, 298, 247, 485, 341, 383, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 401, 403, 404, 405, 406, 416, 419,
	420, 464, 465, 481, 482, 451, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 314,
	0, 0, 478, 425, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 470, 0, 278, 0, 0, 391, 315,
	463, 0, 0, 469, 0, 445, 479, 484, 271, 0,
	234, 422, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 421, 460,
	200, 334, 461, 483, 0, 272, 413, 273, 444, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	486, 477, 225, 274, 386, 390, 367, 221, 452, 335,
	345, 238, 240, 239, 215, 414, 459, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 473,
	0, 257, 0, 475, 0, 408, 407, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 488, 220, 309,
	453, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 410, 458, 222,
	428, 0, 0, 0, 400, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 429, 476, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	431, 449, 402, 280, 321, 323, 433, 440, 434, 435,
	436, 437, 432, 439, 438, 396, 397, 398, 399, 307,
	441, 208, 443, 468, 229, 409, 412, 487, 0, 216,
	237, 430, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 466, 467, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 427, 320,
	0, 206, 0, 426, 0, 0, 442, 226, 0, 0,
	457, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	424, 308, 316, 0, 0, 360, 393, 233, 472, 423,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 411, 417,
	418, 446, 447, 448, 450, 454, 455, 456, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 415, 338, 298, 247, 485, 341, 383, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 401, 403, 404, 405, 406, 416, 419, 420,
	464, 465, 481, 482, 451, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 314, 0,
	0, 478, 425, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 470, 0, 278, 0, 0, 391, 315, 463,
	0, 0, 469, 0, 445, 479, 484, 271, 0, 234,
	422, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 421, 460, 200,
	334, 461, 483, 0, 272, 413, 273, 444, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 486,
	477, 225, 274, 386, 390, 367, 221, 452, 335, 345,
	238, 240, 239, 215, 414, 459, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 473, 0,
	257, 0, 475, 0, 408, 407, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 488, 220, 309, 453,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 410, 458, 222, 428,
	0, 0, 0, 400, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 429, 476, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 431,
	449, 402, 280, 321, 323, 433, 440, 434, 435, 436,
	437, 432, 439, 438, 396, 397, 398, 399, 307, 441,
	208, 443, 468, 229, 409, 412, 487, 0, 216, 237,
	430, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 466, 467, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 427, 320, 0,
	206, 0, 426, 0, 0, 442, 226, 0, 0, 457,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 424,
	308, 316, 0, 0, 360, 393, 233, 472, 423, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 411, 417, 418,
	446, 447, 448, 450, 454, 455, 456, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	415, 338, 298, 247, 485, 341, 383, 489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 401, 403, 404, 405, 406, 416, 419, 420, 464,
	465, 481, 482, 42, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 71, 0, 0, 4275, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4268, 0, 0, 0, 0,
	4613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 89, 57, 0, 0, 0,
	0, 4275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4271, 4268, 0, 0, 0, 0, 4609, 0, 0,
	0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 0, 4277,
	0, 4281, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 69, 70, 0, 4271, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 4280, 4272, 4273, 4274, 4278,
	4279, 4276, 4610, 4277, 0, 4281, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 42, 0, 0, 96, 0,
	0, 0, 0, 0, 4269, 84, 0, 0, 0, 71,
	0, 0, 0, 0, 60, 93, 0, 0, 47, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4282, 4270, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 4275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4268, 0, 0,
	0, 0, 4608, 0, 4282, 4270, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 69, 70, 0, 4271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4280, 4272,
	4273, 4274, 4278, 4279, 4276, 0, 4277, 0, 4281, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	71, 0, 0, 0, 0, 0, 93, 60, 0, 47,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 62, 92, 91,
	0, 89, 4605, 0, 57, 0, 0, 4275, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4268, 0,
	59, 61, 0, 0, 0, 0, 87, 4282, 4270, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	69, 70, 0, 4271, 59, 61, 4268, 0, 0, 0,
	87, 4597, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276,
	0, 4277, 0, 4281, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4269, 0, 85, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 42, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 89,
	0, 0, 0, 57, 0, 4275, 0, 0, 0, 0,
	0, 0, 4282, 4270, 0, 66, 67, 73, 0, 74,
	0, 69, 70, 0, 4271, 0, 4268, 59, 61, 0,
	0, 4594, 0, 87, 4280, 4272, 4273, 4274, 4278, 4279,
	4276, 0, 4277, 0, 4281, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 85, 0, 0, 0, 69,
	70, 0, 4271, 60, 0, 42, 0, 0, 0, 0,
	0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 71,
	4277, 0, 4281, 0, 0, 93, 0, 78, 47, 79,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4269, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 62, 92, 91, 0,
	89, 0, 0, 57, 0, 0, 4275, 0, 0, 0,
	0, 0, 0, 4282, 4270, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 4268, 0, 0,
	0, 0, 4511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 4282, 4270, 0, 66, 67, 73, 0, 74, 69,
	70, 0, 4271, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 71,
	4277, 0, 4281, 0, 0, 93, 0, 78, 47, 79,
	85, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4269,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 42, 0, 62, 92, 91,
	89, 0, 0, 0, 57, 0, 4275, 0, 0, 71,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 4268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 59, 61, 0, 4275, 0, 0, 87,
	0, 4282, 4270, 0, 66, 67, 73, 0, 74, 0,
	69, 70, 0, 4271, 0, 0, 0, 4268, 0, 0,
	0, 0, 4503, 4280, 4272, 4273, 4274, 4278, 4279, 4276,
	0, 4277, 0, 4281, 0, 0, 0, 0, 78, 0,
	79, 85, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 59, 61, 96, 0, 0, 0, 87, 0, 4269,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 4282, 4270, 0, 66, 67, 73, 0, 74,
	69, 70, 0, 4271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276,
	4508, 4277, 0, 4281, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	69, 70, 60, 4271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4280, 4272, 4273, 4274, 4278, 4279, 4276,
	0, 4277, 0, 4281, 0, 0, 0, 0, 78, 85,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 71, 0, 0,
	0, 0, 60, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4282, 4270, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 71, 0, 0, 4275, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 4268, 0, 0, 87, 0,
	4501, 0, 4282, 4270, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 4182, 4275, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 4268,
	0, 0, 0, 0, 4384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 49, 90, 56, 55,
	58, 0, 59, 61, 0, 96, 1650, 0, 87, 0,
	0, 4269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 89, 0, 0,
	0, 0, 0, 4275, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4271, 59, 61, 4268, 0, 0, 0, 87, 0,
	0, 4280, 4272, 4273, 4274, 4278, 4279, 4276, 0, 4277,
	0, 4281, 0, 0, 0, 0, 78, 0, 79, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	85, 84, 69, 70, 0, 4271, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 4280, 4272, 4273, 4274, 4278,
	4279, 4276, 0, 4277, 0, 4281, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 84, 4269, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	4282, 4270, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4282, 4270, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 69, 70, 0,
	4271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4280, 4272, 4273, 4274, 4278, 4279, 4276, 0, 4277, 0,
	4281, 0, 0, 0, 0, 78, 1664, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 60,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 0, 1665, 1666, 1667, 1647, 1646, 1678,
	1648, 1651, 1645, 1649, 1644, 0, 0, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 4282,
	4270, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1668, 1677,
	1680, 1681, 1682, 1683, 1684, 1685, 0, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	0, 1665, 1666, 1667, 1647, 1646, 1678, 1648, 1651, 1645,
	1649, 1644, 0, 0, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1668,
}

var yyPact = [...]int{
	6358, -1000, -502, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2980, -1000, 2980, 340, -1000, 394, -1000, 1513, 1440,
	-1000, -1000, -1000, -1000, -1000, 709, 118, 58110, 1142, 55146,
	78802, -312, 1710, 78063, 165, -1000, 165, 412, 54407, 959,
	1077, 77324, 2814, 2206, 169, -69, -71, 220, 38885, 38135,
	302, 229, 214, 202, 145, 1342, -1000, 61066, 928, -1000,
	327, -1000, -1000, -1000, -1000, -1000, 46278, 3039, 3042, 3039,
	-1000, 2953, 2978, -1000, -1000, 2953, 2344, 2344, -1000, 61066,
	13157, -1000, -1000, -1000, -1000, -1000, 30568, -1000, 1317, -1000,
	58849, 41102, 2980, -1000, 1130, 1120, -171, 1068, 1068, 898,
	1068, 1068, -467, 1141, -1000, 908, 1676, -1000, -1000, -1000,
	-1000, 1673, 58849, 66239, 1070, 75846, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 53668, 58849, -1000, 1300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	58849, 3026, 3025, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2615, 2614, 52929, 628, 2867, 1686, 354,
	1686, -1000, -1000, 1656, -1000, 971, 969, 968, 961, 955,
	960, -61, 1639, 1691, 2936, -1000, 2555, 2953, 2953, 1639,
	-1000, 957, -1000, -1000, -1000, -1000, -1000, -1000, 1364, -1000,
	-1000, 1737, 1737, 587, 1112, 983, 986, 983, 2912, 1665,
	2865, 2864, 2226, 2863, 1628, 2862, 2605, -1000, 1299, -1000,
	-1000, 19, -1000, 2202, 58849, -1000, -1000, 2075, 2074, 660,
	2486, 1220, 2670, -1000, -1000, 691, 818, 2593, 797, 2593,
	2593, 2593, 428, 2593, 2593, -74, 2593, 2593, 2593, 357,
	2593, 259, 2593, 2593, 2593, 2593, 2593, -1000, 2354, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 706, 2479, 2536, 2669, 258, -1000, -214, 215, 2926,
	1357, -1000, -1000, -1000, 347, 1317, 61805, 2538, -1000, 2555,
	-1000, -1000, 2553, 2555, -1000, 2192, 1140, 1070, 857, -1000,
	582, -1000, -1000, -1000, 2897, 2555, 41844, -1000, -1000, 1579,
	-1000, 2555, 2555, 1317, 2923, 1317, 1317, 2921, 2919, 1317,
	2858, 27540, 17699, 2778, 1810, -1000, -1000, -1000, -1000, 1317,
	3024, -1000, 40363, 1293, -1000, 17699, 3005, 2555, 2555, -1000,
	1225, 1289, -1000, 1163, 1277, -1000, -1000, 18456, 18456, 18456,
	18456, 18456, 18456, 18456, -1000, -1000, -1000, -1000, -1000, -1000,
	2330, 2317, 2316, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2555, 1282, 1281, -1000, 2555, 2555, 2555,
	2555, 2555, -1000, 16185, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 17699, 2555, 2555, 2555, 2555, 2555, -1000, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2555,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2555, 2555, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2555, 1072, 1072,
	57371, 2551, -115, 29811, -1000, -1000, -1000, -1000, 28297, 64022,
	1525, -1000, -1000, -1000, -1000, 2860, -1000, -1000, 1278, 1277,
	1225, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2980, 350, -1000, 2453, -1000, -1000, 81310, 81310, 81310, 81310,
	81310, 81310, 49234, -1000, -1000, -1000, 2602, 2953, -1000, 75846,
	58849, 922, 2201, 1715, 2198, 77324, 77324, 1068, -1000, 881,
	66239, 66239, -382, 1068, 899, 66239, 875, 2547, 1111, 2546,
	1109, 2340, 58849, 2893, 2664, 58849, 2195, 2194, 77324, 77324,
	66239, 66239, 77324, -1000, -1000, -1000, 26783, -1000, 1335, 2544,
	48495, 47756, 52190, 52190, -1000, -1000, -1000, 944, -1000, 1686,
	-1000, 6026, 17699, 1068, 1068, 58849, 58849, 58849, 58849, 58849,
	-1000, 58849, -1000, -1000, 1686, -1000, -1000, 1686, 1686, 1686,
	1639, 3015, 1639, -1000, -1000, -1000, 1686, 78063, 78063, 17699,
	-1000, 18456, 65500, 1395, -1000, -1000, 1686, -1000, 78063, 1009,
	1009, 1009, -1000, 2190, 581, 356, -1000, 983, 350, -1000,
	-1000, 2821, 2915, 2914, 2189, 1628, 1628, -1000, 2336, 1628,
	2521, -1000, 1664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1628, 2912, 16942, 75846, -483,
	-1000, -1000, 2543, -1000, 373, -1000, -1000, 989, 2663, 989,
	5129, 66239, 66239, 66239, -1000, 2593, 75846, -1000, 2593, 2593,
	2593, -76, 2593, 2593, -1000, -1000, 2593, -1000, -1000, -1000,
	2593, -1000, -1000, 2593, -1000, -1000, -1000, 2593, 2593, -1000,
	2593, 2593, -1000, -1000, -1000, -1000, -1000, 66239, 989, 533,
	2540, 989, 66239, 66239, 1108, 260, -129, 150, -1000, -1000,
	-1000, -1000, -1000, -1000, 344, 343, 342, 332, -1000, -1000,
	-1000, -1000, 326, 314, -1000, -1000, 58849, 58849, 965, -1000,
	2538, 61805, 2913, 22241, 928, -1000, 17699, 2874, -1000, 2874,
	-1000, -1000, -1000, 371, -1000, 58849, 66239, 77324, 46278, 46278,
	46278, 46278, -1000, 2703, 2702, -1000, 2684, 2683, 2681, 469,
	61805, -1000, 2897, 340, 2451, 2344, 2344, 582, 41844, -1000,
	2555, -1000, 61805, 1214, 1129, 1127, 1125, 2821, -1000, -1000,
	-1000, -1000, -1000, 2179, 2137, 2185, 12400, 18456, -1000, -1000,
	-1000, -1000, -1000, 3039, 3039, -1000, -1000, -1000, -1000, -1000,
	-1000, 1782, 3033, 1546, 2527, -1000, -1000, -1000, 2537, -1000,
	1760, 1273, 2145, 1802, -1000, -1000, -1000, -1000, -1000, -1000,
	13157, -1000, 58849, -1000, 17699, 17699, 17699, 1813, -1000, 45539,
	-1000, -1000, -1000, 22998, 1516, 18456, 1913, 1574, 18456, 18456,
	18456, 18456, 18456, 18456, 18456, 18456, 18456, 18456, 18456, 18456,
	18456, 18456, 18456, 1438, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2188, -1000, 350, 35867, 12400, 35867, 645, 645,
	75846, 1362, 1362, 1362, 1362, 1362, 1362, 59588, -1000, -1000,
	-1000, 2909, 34353, 35867, 2909, 2909, 2909, 2909, 2909, 2441,
	1788, 61066, 16185, 46278, 12400, 12400, 12400, 2344, 17699, 17699,
	12400, 18456, 12400, 15428, 14671, 19970, 12400, 12400, 2909, 1583,
	1788, 26026, 12400, -1000, 2344, -1000, -1000, -1000, -1000, 2049,
	-1000, -1000, -184, -184, -184, 418, 12400, 12400, 12400, 12400,
	2344, 2344, 12400, 12400, 12400, 12400, 12400, 2344, 2344, 2344,
	2344, 12400, 12400, 12400, 12400, 12400, 12400, 12400, 12400, 12400,
	12400, 12400, 12400, -1000, -1000, -1000, 1928, 56624, 46278, 58849,
	2462, 2459, -1000, -1000, 1267, 29054, 2511, -1000, -110, -131,
	-115, -1000, -1000, 1351, -1000, -1000, -1000, -1000, 13914, -1000,
	-1000, -1000, 23755, 2953, -1000, 39624, -1000, 5, -1000, -1000,
	-1000, 2566, -1000, 2576, 73, 526, 2576, 58, 48, 2576,
	2576, 2576, -1000, -1000, -1000, -1000, 76, -1000, -1000, -1000,
	-1000, -1000, 2600, 2599, -1000, 2566, 2566, 2566, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2588, 500, 2571, 2571, 2571, 2571, 2571, -1000,
	-1000, -1000, -1000, -1000, 1027, -1000, -1000, -1000, 17699, 2858,
	2738, 2610, 2555, 1116, -469, 899, 2874, 2892, 2874, 951,
	-1000, 1255, 2594, 77324, 914, 2513, -1000, 548, 2474, 1167,
	55885, -1000, -1000, -1000, -1000, -1000, 58849, 58849, 66239, 66239,
	66239, 1157, -1000, 58849, 2534, -1000, -1000, -1000, -1000, -1000,
	2496, -1000, 2474, -1000, -1000, 1250, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -441,
	-442, 58849, -1000, -1000, -1000, -1000, -1000, -1000, 2522, -1000,
	2522, -1000, -1000, -1000, 2335, 1788, 2187, 2183, 2912, -1000,
	-1000, -1000, -1000, 1644, -1000, -1000, -1000, -1000, 1686, 58849,
	2912, -1000, -1000, -1000, 1788, 1828, 2612, 2555, 2344, -1000,
	-1000, -1000, 154, -1000, 152, -1000, -1000, -1000, 2180, -1000,
	-1000, -1000, -1000, -1000, 356, -1000, 18456, 2820, 2819, -1000,
	2521, 2521, -1000, 2521, 1628, 60327, 2521, -1000, -1000, 2439,
	-1000, 183, 2333, 58849, -1000, 61805, 17, -1000, -138, 74368,
	-1000, -1000, -1000, 989, 74368, -1000, 357, 248, -1000, 1107,
	-1000, 2437, -1000, -1000, -1000, -1000, 2593, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74368, 422, 522,
	74368, 2496, 3014, 322, 2519, -1000, 1662, 1657, 1652, 1643,
	-1000, -1000, 148, -1000, -1000, -1000, -1000, 2935, -1000, 238,
	238, 2331, 18456, -1000, 2555, 2390, -1000, 1243, -1000, -1000,
	-1000, -1000, -1000, -1000, 2555, -1000, -1000, -1000, -1000, 2857,
	1525, 1525, 1525, 351, 548, 2661, 2592, 2660, 546, -1000,
	-1000, -1000, -1000, 2692, -1000, 2691, 2685, -1000, -1000, -1000,
	2557, 61805, 46278, -1000, -1000, -1000, 2344, 75846, 1211, -1000,
	61805, 2555, 2555, 2555, 18456, 18456, 1527, -1000, 18456, 18456,
	1479, -1000, 18456, 18456, 1459, -1000, 2344, 2516, -1000, -1000,
	1788, 1239, 4807, -1000, 75107, 13, 2731, 27540, 27540, 17699,
	-1000, -1000, -1000, 23755, 2962, -1000, 2751, 2747, 3013, -1000,
	-1000, -1000, 1516, 1736, 1578, -1000, -1000, 1846, -1000, -1000,
	-1000, -1000, -1000, 1226, 2555, -1000, -1000, -1000, -1000, -1000,
	4864, -1000, -1000, -1000, -1000, 1913, 18456, 18456, 18456, 1828,
	4864, 4708, 1733, 1905, 1362, 1755, 1755, 1375, 1375, 1375,
	1375, 1375, 2045, 2045, -1000, -1000, -1000, -1000, 2344, -1000,
	2435, -1000, -1000, 2330, 2317, 2316, -1000, -1000, -1000, -1000,
	12400, -1000, -1000, -1000, -1000, -1000, 12400, 12400, 12400, 12400,
	12400, 17699, -1000, 2435, 2435, 2435, -1000, 1627, 2111, 2343,
	4739, 2435, 1433, 3011, 2435, 1372, 3009, 2435, 2121, 18456,
	18456, 18456, 2435, 2435, 12400, 1750, -1000, 17699, 2344, 1292,
	2344, 1225, 1223, 2435, -1000, 2344, 2515, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2514, 3008,
	2512, -1000, -1000, -1000, -1000, 2435, 2344, 2435, 2435, -192,
	-192, 2344, 2435, 2344, 2435, 2435, -192, -192, -192, -192,
	2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435,
	2435, 2435, -1000, 2344, 1471, 58849, -1000, 2507, 1471, 2472,
	46278, -1000, -1000, 46278, 78063, 25269, -1000, 28297, -115, -91,
	-1000, -1000, 2511, -1000, -1000, 1602, -1000, -1000, 2314, 1788,
	-1000, 1207, 2858, 7035, -1000, -1000, -1000, -1000, 2589, 44800,
	-1000, 2780, 1274, 1274, 1274, 64761, 76585, 2775, -1000, -1000,
	372, -57, -1000, -1000, -1000, 2073, -1000, 296, 465, 2576,
	-1000, -1000, -1000, 2576, 2576, -1000, 2576, 2576, -1000, -1000,
	-1000, -1000, 2312, 2312, -1000, -1000, -1000, -1000, 2072, -1000,
	2588, -1000, 2068, -1000, -1000, -1000, -1000, 372, 372, 372,
	372, 372, -1000, 1818, -1000, 2658, 75846, 2905, 58849, -383,
	-1000, -1000, -1000, 3000, -1000, -1000, 75846, 63283, 2657, -1000,
	-1000, 379, 66239, 544, 771, 300, -1000, 1714, -1000, -1000,
	1106, -1000, 1103, -1000, -1000, -1000, -1000, -1000, -1000, 58849,
	66239, 75846, 2643, 2642, -1000, 52190, -1000, -1000, -1000, -1000,
	2987, 2166, 2162, -1000, 1639, 1686, -1000, 18456, 66239, -1000,
	946, -1000, -1000, -1000, -1000, 4864, 18456, 18456, -1000, -1000,
	-1000, -1000, 1778, -1000, -1000, -1000, -1000, -96, -1000, -1000,
	1102, 1200, 1199, 74368, 1101, -1000, 362, 66239, -1000, 75846,
	-1000, 3007, 3006, 421, 3003, 66239, 2509, -1000, 1635, 1633,
	1622, 1620, 1619, 1614, 1613, 1609, 1588, 260, 2585, 2584,
	2583, 2581, -1000, -1000, 280, -1000, -120, -1000, -1000, 4864,
	-1000, -1000, 22241, 35867, -1000, 1525, 1598, -1000, 1562, 2311,
	1653, 966, -1000, -1000, 1246, 1228, 1047, 1525, 1031, 433,
	1100, 2839, 2838, 670, 656, -1000, 1525, 1031, 1298, 785,
	-1000, 1507, 1506, 1505, 1503, 1502, 1494, 1489, 1480, 758,
	-384, -1000, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
	-251, -254, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
	1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
	1525, 1525, 1525, 1525, 1525, 31325, 1525, 1525, -1000, 1151,
	862, -1000, -1000, 17699, 2579, -1000, 17699, -1000, -1000, -1000,
	-1000, -1000, 75846, 2557, 582, -1000, 2385, -1000, -1000, 1211,
	75846, 75846, 75846, 4691, 1968, 2555, 4667, 1952, 2555, 4645,
	1937, 2555, 2897, 12400, 21484, 2295, 2508, 2293, 2292, -1000,
	-45, 2726, -1000, -1000, -1000, 58849, -1000, -1000, -1000, -1000,
	2987, 44061, 13157, -1000, -1000, -1000, -1000, 33596, 12400, -1000,
	1828, 4864, 4059, -1000, 18456, -1000, -1000, 2344, 2435, 2435,
	2435, 2435, 2435, 1788, -1000, -1000, -1000, 549, 1438, 549,
	-1000, 1438, 18456, -1000, 18456, 18456, -1000, 18456, 18456, -1000,
	-1000, 18456, 4604, 3861, 2735, -316, -1000, 2520, 1565, -1000,
	17699, 2046, -1000, -1000, -1000, -1000, -1000, 18456, 18456, 18456,
	18456, -1000, -1000, -1000, -1000, -1000, 73629, -1000, -192, -192,
	-192, -192, -192, -1000, -1000, -1000, -1000, -192, -192, -192,
	-192, -192, -192, -192, -192, -192, -192, -192, -192, -1000,
	338, 2555, -1000, 24512, 2987, 46278, 2488, 2488, -1000, 1197,
	-1000, -1000, -1000, -134, -154, -1000, -1000, -1000, -1000, -1000,
	35867, -1000, -1000, -1000, 7543, 2977, 1525, 1525, 1525, 370,
	1525, 1525, 1525, 1525, 1525, -257, -262, 1525, 1525, 1525,
	1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
	1525, 1525, 1525, 1525, 174, 1525, 1525, 1525, 1525, 1525,
	1525, 31325, 1525, 1525, -385, 49973, 1191, 1019, -1000, -1000,
	-1000, 76585, 76585, 76585, -1000, 76585, 76585, -1000, -1000, -1000,
	-1000, 50712, -1000, -1000, 1754, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2555, -494, 2066, 58849, -1000, 2856, 1519,
	38138, 3032, -1000, 2774, -1000, 2770, 2769, 2291, -1000, -1000,
	2457, 2455, 2417, -1000, 2576, -1000, -1000, -1000, -1000, -1000,
	2433, -1000, 2426, 2506, -1000, 2423, -431, 58849, -1000, -1000,
	2555, 2063, 2641, -1000, -1000, -1000, -1000, 2386, 2505, -1000,
	81310, 75846, 75846, 75846, 822, -321, 734, -1000, 66239, 403,
	548, 782, 2085, -405, 2884, 58849, 66239, -1000, -1000, -1000,
	72890, 72890, -1000, -1000, 17699, -1000, -1000, 2912, -1000, 4864,
	2474, -1000, -1000, 4864, 4864, 1471, 1138, -1000, 66239, 1394,
	72151, 1098, 66239, 413, 237, -1000, 66239, 66239, 3002, 66239,
	2496, 322, 2289, 2288, 2286, 2062, 2284, 2050, 2044, 2029,
	2028, -1000, 58849, 58849, 58849, 58849, 2283, 2843, -1000, -1000,
	1476, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6701,
	966, 1469, 1458, 1454, 1451, -1000, 47017, 76585, 1354, 1040,
	-1000, -1000, 2555, -1000, 43322, 50712, 50712, 50712, 75846, 2768,
	2764, 75846, 50712, 50712, 75846, 50712, 1039, 2159, 2854, 1525,
	72, -1000, -1000, -1000, 71412, -1000, 70673, 828, 51451, 50712,
	75846, 58849, 42583, -1000, -1000, -1000, -1000, 69934, 2024, 75846,
	75846, 69195, 68456, 67717, 66978, -1000, -304, 977, 17699, 977,
	1972, 1972, 2282, 2281, 2278, 1525, 1525, 123, 1972, 2277,
	123, 1972, 37381, 2276, 1002, 977, 977, 977, 1972, 1972,
	1972, 1972, 2275, 430, 1967, 2274, 1972, 2131, 2108, 977,
	-1000, -295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1972, 2555, 935, 1097, 982, -4, 1788,
	75846, 1788, 2421, -1000, -1000, 1564, 75846, -1000, 2358, 2358,
	2358, 18456, 18456, 18456, 18456, 18456, 18456, 18456, 18456, 18456,
	61805, -1000, -1000, 1186, -83, 75846, -1000, -33, -1000, -1000,
	-1000, 2985, -1000, 2501, -1000, -1000, -1000, 2344, -1000, 18456,
	4864, -1000, -192, -192, -192, -192, -192, 2344, 2566, 2566,
	2566, -1000, 2566, 2571, 109, -1000, -1000, -1000, 2566, 139,
	2566, 132, -1000, 2344, 2344, 2344, 2208, 4568, 3945, 3108,
	1987, 2208, 18456, 18456, 18456, 2555, -185, -1000, 1788, 17699,
	2943, 2835, 2208, 2208, -1000, -1000, 2158, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2638, 2638, 24512, 2897, -1000,
	20727, -1000, 928, -1000, -1000, 75846, 2503, -1000, 1525, 1258,
	1525, 1525, 2980, 2488, -1000, -1000, 1377, -1000, -1000, -1000,
	-1000, 162, 977, 977, 977, 1525, 2853, 1525, 1972, 1972,
	2273, 2272, 2270, 1525, 1525, 123, 1972, 2268, 123, 1972,
	37381, 2253, 1002, 977, 977, 977, 1972, 1972, 1972, 1972,
	2251, 430, -1000, 1923, 2250, 1972, 1966, 1935, 977, -1000,
	-296, 1972, 2555, -305, 2415, -1000, 2566, 2566, 2759, 1274,
	-1000, -1000, -1000, -1000, -1000, -1000, 2565, -1000, -1000, 18456,
	2904, -1000, 2564, 1441, -1000, -1000, -1000, -1000, 645, 2248,
	-1000, -1000, 18456, -1000, -1000, 2555, 2555, 2555, 2555, 2555,
	2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, -121, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2247, -1000,
	2009, -1000, 2008, -1000, -1000, -1000, 2563, -1000, 2902, -1000,
	58849, 434, 63283, -1000, 81310, 81310, 81310, -4, 429, 689,
	-1000, 1732, -1000, -1000, -1000, 2244, 2243, 2242, 2474, 552,
	1720, 454, -1000, 2896, 2895, 2240, 2239, 2238, 2237, 1979,
	-1000, -1000, 2611, 75846, 2500, -1000, 1788, 1686, -33, 58849,
	237, -1000, -1000, -1000, 66239, 237, -1000, -1000, 521, 2496,
	2496, 66239, 2496, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2408, 2405, 2396, 2394, -1000, -1000, -1000,
	-1000, -1000, -1000, 1266, 1339, 360, 349, 51451, 1008, 81310,
	81310, 2610, 1274, -1000, 2758, 1416, -1000, -1000, -1000, -1000,
	-1000, -1000, 50712, 2498, -433, -435, 1311, -453, -1000, -1000,
	-1000, -1000, 51451, 1525, 1438, 2851, 666, 334, 663, 328,
	-1000, -1000, -1000, -1000, 1008, 1224, 1091, -1000, 2757, 50712,
	1086, 636, 310, -1000, 1765, -322, 2498, -1000, 2498, -1000,
	2498, -1000, 2498, -1000, -1000, -1000, 1788, -1000, -1000, -1000,
	-1000, -1000, -1000, 2236, 2235, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -252, -1000, 37381, 1790, -1000, 2637, 77324,
	-1000, 805, 2636, 545, 645, 2392, -1000, 75846, -1000, -1000,
	-1000, -1000, -1000, 4864, 4864, 2591, 4864, 4864, 2271, 4864,
	4864, 2249, -1000, 32839, 2555, -1000, -88, -1000, 2982, 2976,
	-1000, -1000, 4864, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	377, 375, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18456, 18456, 18456, 18456, -1000, 2208, 2208,
	2208, 18456, 2344, 2234, 1788, 18456, 18456, -1000, -1000, 1444,
	-1000, -1000, 2879, -1000, 2413, 61805, 2344, 2483, 2390, 2344,
	339, -1000, -1000, -1000, 61066, 46278, 2497, -1000, 2555, 2385,
	2980, 24512, 17699, 17699, 17699, 17699, 2953, -1000, -285, -1000,
	355, 324, -1000, -1000, -1000, -1000, -1000, -1000, 1438, 1525,
	32082, -1000, -1000, -1000, -1000, -1000, 2233, 2231, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -263, -1000, 37381, -1000, 249,
	49973, 2878, 2878, 76585, 76585, 75846, 2208, 2555, 75846, -1000,
	-1000, -1000, -1000, -1000, 2208, -1000, -1000, 2378, 2361, 49973,
	350, -1000, -405, 2933, -1000, 434, -1000, 2230, 892, 880,
	-1000, 890, 889, 885, 883, 876, -1000, -1000, -1000, -1000,
	2636, 784, 429, -1000, -59, 1978, 1456, 2825, 689, -1000,
	1977, 1976, 1969, 1962, 761, -1000, -1000, -1000, -1000, 298,
	548, -1000, 737, 2229, 714, 2228, -1000, -1000, 547, -1000,
	-1000, 2813, 2382, -1000, -88, -1000, 2900, 237, 2900, 396,
	2496, -1000, -1000, -1000, -1000, 2352, -1000, -1000, 2151, -1000,
	-1000, 2561, 76585, 76585, 2360, -1000, 75846, -1000, -1000, -1000,
	-1000, -1000, 2873, 2869, -1000, -1000, 1008, 1438, -1000, 1438,
	-1000, -1000, -1000, -1000, -1000, 50712, 75846, 50712, 1085, 50712,
	-1000, -1000, 2555, 1132, -1000, -1000, -1000, -1000, 2377, -1000,
	569, 2227, 353, -1000, -1000, 1151, 798, -1000, -1000, -1000,
	-165, -1000, -1000, 18456, 18456, 18456, -1000, 35110, 2805, 2803,
	-195, 17699, 17699, -1000, -1000, -1000, -1000, 2208, 2208, 2208,
	2208, -1000, -1000, -1000, 435, -1000, -1000, 2208, 2208, 2980,
	2975, 2743, -1000, 2557, -1000, -1000, 2483, 339, -1000, 928,
	-1000, 11643, -1000, 2953, -1000, 1788, 1788, 1788, 1788, -1000,
	-298, 1934, 18456, 2555, 2555, 871, -1000, 1438, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2377, 249, -1000, 37381, 1525,
	2225, 1525, 1525, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2374, -497, 18456, 2372, -1000, -1000, -1000, 2370, -1000, -1000,
	936, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2812, 2809,
	910, 935, -1000, 2221, 2220, -1000, 735, 1970, 1305, -208,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 710, 2146, -1000, 446, -1000, -1000, 445, -1000, -1000,
	2968, -405, 18456, -1000, 2805, -1000, 66239, 2900, -1000, -1000,
	-1000, -1000, 372, 372, 49973, 2610, 2560, -1000, 1416, 2742,
	18456, -1000, -1000, 1355, 1353, -1000, -1000, 1078, 50712, -1000,
	1416, 58849, 37381, -1000, -1000, -1000, -1000, 935, 1404, 813,
	2208, 2208, 2208, 2347, -1000, 81103, 272, -1000, 2783, 2779,
	2967, -1000, 75846, -1000, 1788, 2490, -1000, 1788, -1000, -1000,
	-1000, -1000, 2344, 267, -342, -1000, -1000, 1445, 17699, 3031,
	-1000, -1000, -1000, 339, -1000, -1000, -1000, 2555, 2966, -1000,
	2208, 75846, 18456, 2555, 1586, -1000, -1000, -1000, -1000, 1907,
	-1000, 2219, 2218, 1005, -1000, -1000, -1000, 2208, -1000, 249,
	-324, 350, 927, 81201, -1000, -1000, -1000, -1000, 1790, -1000,
	-1000, -1000, -1000, 1890, -1000, -1000, 1885, 702, 441, -1000,
	2899, -1000, -1000, 1889, 4864, 1041, -323, -1000, 2368, 2558,
	49973, -1000, 979, 4864, 1525, 1438, 50712, -1000, 2360, 24,
	-1000, 81201, 1790, 1212, 810, 545, -1000, -1000, -1000, 2344,
	35110, 346, -458, -92, 2217, 2803, 2964, 2788, 2786, -1000,
	2216, 2489, -1000, 2898, 17699, -1000, 2725, -319, -349, 2344,
	315, 315, 2487, 24512, 2344, -1000, 1416, -409, -1000, 2358,
	2208, 75846, 1862, -1000, -1000, -1000, 58849, -497, -1000, 249,
	-1000, 376, -1000, 920, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10886, 17699,
	173, 36624, 2144, 2132, 81201, 2181, 81201, 17699, 2130, 2116,
	2776, 18456, 81046, 560, -359, -1000, -360, -1000, -1000, -1000,
	2213, -1000, 2557, 1851, 528, 249, 49973, 2366, 956, 1438,
	-1000, -1000, -1000, 769, -1000, -1000, 556, 645, -1000, 545,
	-1000, 2897, -1000, -1000, 2211, -245, -1000, 2555, -95, -1000,
	2210, -1000, 2958, 2955, -1000, 75846, 2555, -1000, -1000, 2720,
	-1000, -1000, -1000, 318, -1000, 1426, 924, 1422, -1000, 645,
	-1000, 2481, -1000, 2360, 308, -1000, -1000, 2358, -1000, 2556,
	-1000, 395, 1025, 1024, -324, -1000, 2114, 2106, -1000, 1804,
	1716, -1000, 17699, 2033, 755, 661, 38556, -1000, -1000, -1000,
	-1000, -1000, -1000, -504, -1000, 345, -505, 1035, -1000, -1000,
	2104, -1000, 2992, 4864, -1000, -506, -1000, -1000, -1000, -1000,
	2850, 1545, 62544, -1000, 2351, 249, 2555, -1000, -1000, -1000,
	-1000, -165, -1000, 1404, 61805, 673, 2138, 35110, 2555, -1000,
	2122, 2109, -1000, -1000, -326, 1666, -1000, -1000, -1000, -1000,
	-1000, -184, -1000, 2555, 871, -1000, 75846, -1000, 388, 387,
	-1000, -1000, -1000, -1000, 1649, 1704, 81201, -1000, 1897, 81201,
	2932, 2931, 2930, -33, 35867, 80992, 80654, 81201, 81201, 17699,
	80594, 81201, 1743, -1000, 80444, 81201, -1000, 24512, -1000, -1000,
	-1000, -1000, 3044, 2474, 249, -1000, 19213, 81201, -1000, 1404,
	-1000, 1916, 1908, 2635, 2634, 645, -1000, 2347, 35110, -1000,
	-1000, -345, 318, -1000, 18456, 2555, 2349, -1000, -1000, 348,
	1689, 81201, -1000, -507, 81201, -508, 933, 350, 1073, 1351,
	-1000, 623, -1000, 2092, -509, -510, -511, 1026, 17699, -512,
	2091, -1000, -1000, 2481, 66239, -1000, 2208, 2344, -1000, -1000,
	2633, 645, -1000, 2631, 645, -89, -90, 2630, -1000, 2347,
	-351, -1000, 2208, 18456, 2629, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 80293, 61066, -1000, -513, 80143, -514, 8283, -1000,
	-1000, -1000, 80085, -1000, -1000, -1000, -1000, 651, -1000, -1000,
	2859, -1000, -1000, 79934, 79749, 79596, 81201, 1651, 79542, 2480,
	-1000, -1000, 2474, -1000, -1000, -1000, 304, 2628, -392, 2627,
	303, 297, -1000, -1000, -93, -1000, -1000, -300, 2208, 2626,
	2625, 2996, -1000, -515, -1000, -1000, 10163, 1685, 81201, 1066,
	81201, 1703, -1000, 17699, -1000, 1073, -1000, 18456, 2090, 611,
	17699, -517, 598, 588, 2088, 289, -393, 2624, 2619, -1000,
	-1000, -1000, 1830, -300, -1000, 3030, -1000, 3028, 1238, 1238,
	10008, 1659, -1000, -1000, -520, 1063, 81201, -1000, 1881, -1000,
	4864, -1000, 2087, 1601, 9601, -1000, -1000, -1000, 268, -395,
	-1000, -1000, -1000, -1000, -1000, 1020, 1879, -1000, -1000, -1000,
	9449, -1000, -522, 81201, -1000, 597, 576, -1000, -1000, -1000,
	-1000, -1000, 1059, 8666, -526, 2078, 1910, -1000, 1056, 81201,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3537, 3536, 3535, 111, 3534, 300, 329, 322, 29,
	2838, 3533, 298, 3532, 286, 3528, 19, 16, 14, 36,
	3526, 3185, 3181, 3179, 3170, 33, 3521, 7, 3520, 3519,
	3163, 3515, 3514, 3157, 3512, 3510, 3509, 3506, 3503, 3502,
	3501, 3500, 3498, 3154, 3152, 3150, 3148, 3497, 3494, 3493,
	3145, 3127, 3125, 3492, 3491, 92, 50, 35, 3490, 9,
	3489, 200, 230, 3488, 4, 3487, 3485, 13, 206, 3484,
	3481, 67, 3108, 3480, 3466, 3465, 3464, 3463, 3462, 151,
	3460, 3456, 3103, 3455, 3101, 3453, 3097, 3093, 3091, 3089,
	3086, 201, 3452, 3069, 3066, 3064, 3449, 2754, 231, 396,
	226, 3448, 126, 128, 2154, 3447, 241, 3445, 212, 3444,
	3438, 3437, 404, 228, 3436, 167, 3435, 430, 168, 176,
	171, 244, 3433, 61, 172, 309, 3432, 6, 3431, 120,
	3430, 215, 3428, 223, 2844, 196, 240, 195, 3427, 3426,
	154, 3425, 3424, 3421, 213, 3419, 3418, 233, 106, 3417,
	3416, 187, 3414, 144, 3413, 173, 3412, 3410, 3407, 3406,
	229, 114, 81, 170, 125, 3404, 155, 3400, 3399, 3385,
	3384, 3383, 3382, 78, 55, 3797, 3381, 159, 193, 3380,
	56, 38, 39, 3378, 3376, 54, 3375, 3374, 127, 3372,
	3370, 123, 3366, 194, 68, 3364, 3362, 3361, 3360, 110,
	77, 3358, 41, 3357, 189, 3356, 3355, 3354, 3352, 3351,
	102, 3350, 86, 3348, 190, 161, 812, 3347, 3346, 42,
	44, 3345, 62, 22, 137, 100, 32, 104, 76, 185,
	177, 132, 149, 51, 157, 48, 152, 203, 3344, 222,
	184, 211, 121, 31, 3343, 3342, 208, 3341, 109, 214,
	191, 188, 207, 3339, 3338, 3336, 238, 3334, 181, 507,
	3333, 122, 369, 247, 3332, 242, 135, 3331, 3324, 3322,
	3318, 108, 46, 130, 3317, 40, 232, 235, 236, 43,
	136, 3314, 1295, 6345, 6611, 6640, 25, 79, 80, 6417,
	49, 210, 3312, 71, 3311, 3309, 3307, 4536, 169, 52,
	57, 160, 3306, 163, 47, 95, 3304, 3303, 3302, 3301,
	3300, 3299, 166, 138, 3298, 3297, 66, 3296, 3294, 27,
	23, 12, 11, 3293, 141, 220, 218, 216, 3292, 202,
	53, 3287, 3286, 183, 129, 3285, 3284, 3278, 3277, 186,
	115, 205, 3276, 204, 124, 153, 3275, 116, 3274, 3272,
	134, 2741, 140, 3271, 3268, 437, 133, 3267, 3266, 3265,
	3264, 60, 3261, 3260, 3, 3258, 107, 64, 58, 105,
	26, 162, 3257, 3255, 197, 3254, 3252, 142, 178, 3251,
	145, 150, 59, 3249, 69, 148, 3248, 174, 2, 5,
	8, 3234, 3233, 3229, 3228, 3227, 3226, 3225, 3223, 118,
	3222, 3220, 101, 82, 75, 3217, 63, 3216, 3213, 3206,
	199, 192, 93, 221, 165, 18, 3204, 3201, 10, 3200,
	180, 3199, 87, 3197, 117, 3196, 3195, 70, 103, 28,
	88, 3192, 3191, 96, 3189, 3187, 99, 3183, 3172, 224,
	2352, 3165, 347, 3129, 198, 179, 73, 85, 3121, 72,
	113, 3113, 91, 3110, 21, 65, 3099, 24, 30, 131,
	3095, 0, 2555, 209, 3062, 143, 3059, 3054, 219, 3021,
}

var yyR1 = [...]int{
	0, 460, 460, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 244, 244, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 127, 127, 8, 8,
	126, 126, 126, 241, 241, 241, 241, 238, 238, 128,
	128, 125, 125, 133, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 463, 463, 142, 142, 140, 140,
	141, 141, 236, 236, 19, 19, 19, 246, 246, 251,
	251, 251, 254, 254, 254, 254, 224, 225, 226, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 451, 451, 451, 452, 452, 452,
	452, 452, 279, 279, 279, 279, 416, 416, 431, 431,
	431, 432, 432, 430, 430, 430, 430, 430, 434, 434,
	435, 435, 433, 433, 433, 433, 437, 437, 438, 438,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 419, 419, 419, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 440, 440, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 442, 442, 443, 443, 444, 444, 444, 444,
	445, 445, 445, 445, 445, 446, 446, 446, 446, 446,
	446, 446, 447, 447, 448, 448, 3, 2, 397, 397,
	398, 398, 399, 399, 399, 399, 400, 400, 401, 401,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	31, 31, 31, 31, 31, 31, 278, 278, 274, 274,
	274, 276, 276, 277, 277, 277, 418, 418, 418, 412,
	412, 412, 414, 414, 413, 413, 413, 415, 415, 420,
	420, 420, 420, 420, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 423, 423, 423, 421, 421, 161,
	161, 424, 424, 429, 429, 425, 425, 426, 426, 428,
	428, 428, 427, 427, 427, 427, 316, 316, 180, 180,
	69, 69, 70, 70, 70, 213, 213, 213, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	56, 56, 57, 29, 29, 29, 29, 58, 58, 59,
	32, 32, 32, 32, 32, 32, 66, 66, 66, 65,
	65, 64, 64, 64, 64, 64, 64, 34, 35, 36,
	464, 464, 464, 60, 60, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 67, 67, 62, 62, 61, 61, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 33,
	33, 33, 33, 33, 33, 25, 396, 396, 396, 55,
	55, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 77, 77, 353, 354, 354, 354,
	354, 354, 354, 340, 340, 341, 341, 341, 341, 341,
	341, 330, 330, 330, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 304, 304, 304, 304, 308, 308, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 307, 307, 307, 307, 307, 307, 307, 307,
	309, 309, 309, 309, 309, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 311, 311, 311, 311, 311, 311, 311, 311, 339,
	339, 313, 313, 312, 312, 312, 333, 333, 334, 334,
	334, 331, 331, 331, 332, 332, 317, 317, 317, 317,
	317, 317, 318, 335, 319, 319, 320, 320, 320, 320,
	320, 320, 321, 321, 322, 322, 322, 324, 324, 329,
	329, 328, 328, 328, 328, 328, 328, 325, 325, 325,
	325, 325, 325, 326, 326, 326, 327, 338, 338, 338,
	338, 338, 314, 46, 46, 52, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	374, 374, 379, 379, 268, 268, 269, 269, 53, 53,
	53, 53, 53, 167, 167, 54, 54, 54, 375, 375,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 376,
	376, 378, 378, 378, 378, 342, 342, 370, 370, 369,
	369, 368, 368, 368, 368, 368, 368, 368, 351, 351,
	352, 352, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 346, 346, 346, 345, 345, 347, 347, 350, 350,
	350, 367, 367, 366, 366, 343, 343, 343, 380, 380,
	380, 380, 380, 101, 101, 344, 344, 344, 381, 348,
	348, 349, 349, 349, 389, 390, 388, 388, 388, 388,
	388, 168, 168, 168, 372, 372, 372, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 102, 102, 102, 103, 103,
	323, 323, 355, 355, 355, 355, 355, 459, 459, 459,
	356, 356, 356, 356, 356, 356, 450, 450, 449, 449,
	449, 357, 357, 358, 358, 358, 359, 359, 361, 361,
	275, 275, 362, 362, 363, 363, 360, 360, 360, 364,
	364, 393, 393, 393, 392, 392, 72, 72, 72, 72,
	74, 74, 73, 73, 81, 81, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 71,
	71, 288, 288, 76, 212, 212, 212, 273, 273, 386,
	386, 387, 387, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 383, 383, 382, 382, 384, 384,
	75, 75, 75, 75, 162, 162, 22, 22, 78, 78,
	417, 417, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 391, 391, 391, 24, 24, 82, 83, 83,
	83, 287, 287, 287, 287, 86, 86, 86, 86, 239,
	239, 240, 240, 87, 87, 87, 87, 88, 88, 88,
	88, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 122, 260, 260, 259, 259, 258,
	258, 258, 261, 261, 261, 261, 302, 302, 302, 85,
	85, 85, 97, 97, 92, 92, 95, 95, 95, 95,
	98, 98, 99, 99, 100, 100, 93, 94, 43, 44,
	44, 44, 44, 45, 90, 90, 90, 91, 91, 91,
	91, 112, 112, 113, 113, 466, 466, 466, 89, 467,
	104, 105, 105, 107, 107, 107, 108, 108, 108, 109,
	109, 109, 265, 265, 265, 265, 265, 265, 265, 106,
	106, 106, 116, 116, 120, 120, 120, 120, 119, 119,
	119, 119, 215, 215, 220, 294, 294, 196, 196, 216,
	216, 221, 221, 221, 222, 222, 223, 223, 223, 223,
	223, 218, 218, 217, 217, 219, 183, 183, 183, 183,
	181, 181, 181, 181, 181, 181, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 179, 179, 292, 292, 292, 292, 291, 291, 291,
	124, 124, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 131, 134, 198, 198, 468, 468, 152, 152, 153,
	153, 153, 153, 154, 154, 154, 154, 154, 156, 156,
	156, 157, 157, 157, 157, 157, 157, 158, 159, 159,
	155, 155, 155, 177, 177, 234, 234, 235, 235, 233,
	233, 237, 237, 130, 130, 132, 132, 132, 132, 137,
	137, 138, 138, 139, 139, 299, 299, 143, 143, 143,
	145, 144, 144, 144, 144, 144, 144, 146, 146, 453,
	454, 454, 455, 455, 455, 455, 456, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 457, 457, 458, 458,
	147, 147, 149, 150, 150, 148, 148, 148, 148, 148,
	148, 160, 160, 151, 163, 163, 163, 163, 164, 164,
	121, 121, 121, 121, 121, 121, 121, 121, 257, 257,
	166, 166, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 192, 192, 192, 192, 192, 192, 169, 169,
	169, 169, 169, 169, 169, 115, 115, 193, 193, 193,
	136, 135, 135, 118, 118, 117, 117, 194, 194, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 186, 186, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 191, 191, 191, 191, 191,
	465, 465, 188, 188, 187, 187, 187, 187, 187, 187,
	111, 111, 111, 111, 111, 300, 300, 300, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	68, 68, 205, 205, 114, 114, 203, 203, 204, 206,
	206, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 176, 176, 176,
	207, 207, 195, 195, 123, 208, 208, 209, 210, 210,
	211, 211, 214, 227, 227, 227, 228, 228, 228, 228,
	178, 178, 178, 229, 229, 229, 229, 171, 171, 170,
	170, 170, 172, 172, 172, 172, 173, 173, 469, 469,
	232, 232, 231, 231, 230, 230, 230, 230, 230, 230,
	242, 242, 197, 197, 200, 200, 199, 201, 243, 243,
	248, 248, 248, 248, 245, 245, 249, 249, 249, 249,
	252, 252, 253, 253, 253, 250, 250, 250, 250, 247,
	247, 247, 296, 296, 296, 296, 255, 255, 264, 264,
	262, 262, 263, 263, 256, 256, 315, 315, 315, 270,
	270, 271, 271, 272, 272, 266, 266, 266, 266, 267,
	267, 293, 293, 289, 289, 295, 295, 290, 290, 297,
	297, 298, 298, 298, 298, 394, 394, 395, 395, 395,
	336, 336, 405, 405, 337, 337, 406, 406, 408, 408,
	403, 403, 404, 404, 407, 407, 47, 409, 409, 410,
	410, 411, 411, 411, 411, 48, 49, 49, 49, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 286, 286, 286, 286, 286, 286, 283,
	283, 283, 283, 283, 283, 284, 284, 284, 461, 462,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 3, 3, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	3, 5, 5, 5, 5, 5, 4, 0, 1, 1,
	2, 2, 3, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 3, 5, 3, 3, 3, 5, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 1, 3, 3, 3, 3, 2, 1, 11, 12,
	12, 13, 13, 0, 1, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 0, 2, 3, 3, 3, 3,
	4, 5, 3, 3, 4, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	4, 4, 3, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 6, 1, 4, 5, 5, 6, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 8, 9, 0,
	2, 0, 1, 2, 0, 2, 1, 1, 1, 1,
	4, 3, 6, 5, 1, 3, 5, 4, 8, 10,
	9, 2, 2, 3, 3, 4, 4, 4, 4, 3,
	3, 3, 3, 6, 5, 4, 4, 5, 5, 8,
	4, 5, 7, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 3, 3, 3, 4, 5, 5, 3,
	7, 6, 5, 2, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 4, 4, 3, 5, 3, 1,
	1, 1, 1, 5, 0, 1, 2, 0, 1, 0,
	1, 1, 2, 5, 3, 4, 4, 4, 4, 4,
	4, 3, 7, 6, 8, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 3, 1, 3, 8, 8,
	8, 11, 12, 15, 0, 3, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 8, 5,
	1, 1, 1, 1, 1, 4, 4, 4, 4, 1,
	3, 1, 1, 2, 2, 4, 4, 3, 3, 3,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	4, 3, 2, 2, 6, 2, 4, 3, 3, 4,
	4, 5, 8, 6, 3, 4, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 4,
	2, 4, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 3, 2, 0, 1, 1, 2,
	4, 1, 0, 1, 2, 1, 2, 4, 4, 5,
	0, 1, 0, 3, 0, 2, 4, 4, 2, 3,
	4, 4, 5, 3, 4, 5, 4, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 0, 2, 2, 2, 2, 2, 2, 0,
	1, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 2, 2, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 5, 1, 2, 3,
	1, 1, 2, 2, 4, 0, 1, 2, 6, 1,
	3, 2, 4, 1, 1, 1, 1, 1, 5, 5,
	8, 5, 5, 8, 5, 5, 8, 2, 2, 2,
	3, 4, 4, 0, 1, 3, 1, 0, 3, 1,
	3, 1, 3, 4, 6, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 2, 2, 12,
	1, 3, 3, 3, 6, 7, 2, 3, 3, 4,
	4, 5, 5, 8, 8, 3, 3, 4, 3, 4,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 4, 6, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 4, 4, 2, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 6, 3, 4, 2, 2, 2,
	0, 2, 1, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 1, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 1, 0, 2, 4, 4, 1, 4, 1,
	3, 4, 1, 4, 3, 6, 2, 3, 1, 1,
	0, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 2, 3, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 4, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -460, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -134, -461, 12, -128, 34, -77, 190,
	-451, -74, -73, -75, -76, 193, 192, 230, 194, 648,
	368, 649, 223, 72, 448, -95, 451, 452, -466, 306,
	307, 25, 42, 453, 455, 35, 36, 246, 334, 336,
	197, 449, 428, 429, 359, 696, -6, 654, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	765, -210, 20, -104, -467, -210, -10, -9, -4, 654,
	-104, -110, 14, 15, 13, 559, -104, -353, 28, -3,
	117, 76, -8, 11, -267, -278, 97, 550, 198, -276,
	330, 332, 208, -264, -266, -274, 256, 266, 49, 210,
	209, 267, 199, 330, 199, 200, 202, 550, 198, 239,
	238, 330, 332, 271, 648, 199, -148, -297, -283, -285,
	-284, 348, 82, -282, 579, 583, 271, 586, 587, 592,
	338, 90, 52, 368, 573, 360, 369, 220, 528, 574,
	331, 337, 340, 361, 737, 370, 372, 373, 571, 572,
	54, 202, 561, 562, 565, 213, 752, 353, 221, 651,
	267, 760, 755, 757, 342, 758, 518, 610, 448, 467,
	459, 486, 652, 708, 279, 301, 456, 385, 535, 611,
	345, 294, 366, 709, 321, 289, 524, 530, 304, 451,
	612, 613, 614, 544, 247, 277, 710, 457, 298, 300,
	299, 261, 578, 305, 41, 226, 483, 661, 649, 256,
	711, 617, 704, 616, 250, 283, 615, 328, 40, 32,
	618, 249, 547, 108, 276, 712, 376, 532, 619, 504,
	377, 245, 272, 274, 290, 714, 656, 349, 232, 531,
	430, 479, 359, 127, 254, 316, 378, 715, 505, 509,
	716, 536, 335, 315, 622, 717, 718, 379, 660, 284,
	719, 201, 341, 623, 280, 720, 257, 446, 538, 346,
	503, 211, 653, 222, 56, 236, 539, 507, 625, 513,
	516, 431, 375, 432, 721, 722, 723, 724, 357, 355,
	627, 356, 358, 629, 268, 296, 657, 626, 659, 61,
	196, 663, 511, 510, 512, 297, 677, 534, 491, 489,
	725, 726, 350, 217, 727, 728, 490, 23, 729, 730,
	542, 320, 352, 731, 732, 733, 628, 293, 633, 609,
	734, 735, 533, 506, 508, 255, 126, 648, 278, 736,
	354, 529, 363, 664, 655, 339, 291, 634, 738, 381,
	292, 235, 228, 543, 425, 426, 442, 443, 444, 445,
	371, 739, 429, 740, 741, 742, 743, 333, 332, 452,
	364, 635, 453, 273, 302, 658, 744, 636, 637, 745,
	746, 265, 248, 546, 537, 60, 520, 515, 367, 382,
	458, 427, 439, 433, 435, 436, 437, 438, 441, 440,
	434, 447, 523, 449, 275, 242, 638, 639, 640, 428,
	641, 12, 295, 347, 642, 643, 644, 527, 365, 303,
	266, 269, 494, 237, 747, 748, 481, 482, 450, 240,
	230, 121, 545, 326, 703, 330, 383, 288, 59, 243,
	53, 749, 750, 270, 244, 662, 287, 454, 344, 665,
	199, 82, -287, -282, -285, -286, -283, 348, 231, 58,
	95, 63, 62, 82, -282, 648, 143, 487, 535, 190,
	525, 526, 532, -346, 533, 238, 425, 367, 241, -302,
	199, -260, 240, 524, 335, 354, 583, 244, 245, 272,
	426, 432, 200, 201, 37, 537, 536, 528, -297, -97,
	454, -97, -97, 203, 454, -112, 232, 194, -148, 231,
	-67, 82, 308, -67, 34, 82, -160, -289, -297, 82,
	-282, 41, 82, 453, 527, 527, 84, 655, 247, 26,
	-440, -415, 363, -439, -413, 191, 190, 15, 192, 271,
	368, 369, 334, 200, 13, 35, 737, 218, 370, 371,
	11, 223, 372, 373, 239, 14, 374, -441, -418, 386,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 81, 82,
	-282, 26, -440, -415, 363, 371, 425, 450, 425, 425,
	-269, -268, 384, 513, 143, -127, 707, -125, -133, -299,
	-297, -283, -198, -468, 252, 550, -256, 330, -276, 204,
	-129, -131, -132, -152, -135, 705, -461, -130, -453, -148,
	-136, 82, 608, -108, 10, -107, -109, 9, 8, -108,
	-228, 22, 21, -265, -105, -228, -462, 78, -462, -127,
	-119, 134, -121, -297, -165, 100, -175, 33, 29, -174,
	348, 231, -166, -202, -283, -201, -136, 143, -301, 132,
	133, 140, 101, 186, -186, -184, -185, -187, -189, -190,
	226, 481, 482, 81, 83, 91, 84, 85, 86, 87,
	92, 93, 94, -289, -285, -281, -284, 579, 583, 586,
	587, 592, -199, -461, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 66, 67, 577, 198,
	560, 561, 484, 562, 13, 563, 564, 565, 650, 220,
	569, 103, 55, 325, 551, 552, 556, -191, 553, 557,
	558, 571, 572, 573, 574, 205, 550, 138, 559, 596,
	597, 598, 599, 600, 601, 602, 603, 605, 606, 604,
	580, 581, 582, 584, 585, 588, 589, 590, 591, 593,
	594, 595, 679, 195, 191, 194, 99, 28, 30, 680,
	253, 102, 465, 499, 568, 21, 25, 214, 197, 487,
	212, 142, 207, 215, 310, 312, 190, 70, 681, 548,
	311, 525, 675, 672, 674, 673, 478, 476, 309, 682,
	15, 31, 224, 260, 683, 474, 192, 251, 106, 107,
	684, 46, 45, 8, 313, 225, 319, 475, 685, 686,
	24, 73, 216, 16, 210, 241, 759, 687, 334, 18,
	125, 19, 688, 669, 671, 670, 204, 119, 200, 751,
	68, 258, 689, 463, 468, 469, 470, 471, 472, 464,
	96, 690, 691, 116, 324, 64, 608, 37, 246, 705,
	566, 323, 692, 43, 42, 498, 502, 497, 322, 514,
	117, 22, 554, 555, 35, 693, 694, 234, 501, 462,
	496, 706, 695, 667, 263, 71, 384, 477, 763, 38,
	74, 229, 380, 351, 47, 97, 20, 259, 69, 39,
	575, 122, 764, 480, 206, 238, 696, 540, 262, 697,
	123, 473, 707, 218, 118, 455, 193, 362, 307, 219,
	329, 336, 698, 252, 124, 526, 666, 699, 570, 34,
	223, 306, 461, 208, 700, 264, 318, 308, 317, 701,
	702, 343, 48, 761, 678, 199, 44, 105, 500, 460,
	495, 203, 567, 239, 314, 9, 49, 36, 521, 14,
	374, 72, 75, 488, 485, 493, 492, 209, 762, 17,
	327, 576, 654, 541, 98, 676, 522, 549, -104, -104,
	-104, -245, 450, -252, -249, 536, 537, -250, -253, -247,
	-202, 513, 734, 735, 535, 487, 534, -289, -297, -283,
	348, 231, 143, 580, 581, 582, 103, 484, 560, 596,
	551, 553, 548, 552, 550, 33, 597, 29, 94, 598,
	577, 205, 13, 186, 584, 585, 599, 600, 601, 66,
	554, 555, 650, 138, 100, 602, 603, 92, 605, 606,
	325, 559, 67, 604, 198, 590, 589, 588, 591, 563,
	564, 93, 556, 557, 558, 55, 594, 593, 595, -2,
	-6, -461, -148, -354, -341, -344, -289, -283, -285, -286,
	227, -284, 215, -381, 82, -282, 212, -210, -104, 200,
	202, 559, -263, 205, -263, 239, 238, 271, -277, 264,
	-263, -263, 738, 199, -276, 109, 109, -78, -148, -417,
	-412, -418, -262, 205, -289, -262, -262, -262, -262, -262,
	-262, -262, -262, 82, -287, -148, 187, -83, -148, -140,
	16, 16, 75, 75, 82, -287, 82, 431, 375, 34,
	-261, 117, 17, 550, 198, 199, 238, 239, 202, 271,
	-261, -348, 16, 119, 242, 242, 242, 242, 242, 243,
	242, -259, 527, 529, 530, 531, -258, 16, 119, 17,
	-122, 117, 24, -461, -228, -228, -258, 242, 135, -99,
	99, -99, 82, 453, 203, -113, 233, -112, -113, -177,
	-155, 28, 6, 7, 109, 34, 34, 81, 59, 34,
	-62, -61, -63, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 34, -396, 76, 187, -336,
	513, 82, -409, -410, -148, 84, 84, 74, 354, 74,
	77, 203, 77, 74, -442, 364, 76, -442, 332, 364,
	365, 266, 330, 202, -442, -442, 332, -442, -442, -442,
	351, -442, -442, 527, -442, -442, -442, 366, 367, -442,
	525, 202, -442, -442, -442, -442, -442, 79, 74, 77,
	354, 74, 16, 74, 427, 430, 540, 654, -54, 446,
	447, -167, 26, -373, 143, 376, 377, 378, 379, 375,
	354, 380, 381, 382, 242, 383, 199, 527, 375, -6,
	-125, 77, -232, -461, 77, -199, -461, 82, -329, -328,
	-325, -326, -327, -324, 33, 199, -262, 271, -143, -145,
	-144, -146, 64, 68, 70, 65, 66, 67, 528, 71,
	-272, 28, -135, -461, -124, -9, -134, -129, -461, -153,
	122, -163, -272, -154, 72, 204, 73, 28, -155, -156,
	-157, -158, -159, 6, 7, 54, -461, -461, -7, -8,
	26, 27, -14, -7, -12, -14, 26, 27, 26, 27,
	-7, -229, 24, 35, -178, 84, 87, -202, -211, -214,
	-121, -297, 58, -116, 26, 27, 65, 57, 63, 62,
	-225, 89, 16, -292, 99, 97, 98, 116, -291, 28,
	82, 81, -287, 187, -121, -169, 119, 100, 117, 118,
	102, 129, 128, 139, 132, 133, 134, 135, 136, 137,
	138, 130, 131, 142, 109, 110, 111, 112, 113, 114,
	115, -257, -461, -136, -461, 187, -461, 187, 188, 189,
	187, -175, -175, -175, -175, -175, -175, -175, 81, 81,
	81, -461, 187, 187, -461, -461, -461, -461, -461, -194,
	-121, 654, -461, 199, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -461, -205,
	-121, -461, -461, -465, -461, -465, -465, -188, -465, -461,
	-188, -188, -461, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -461, -461, -461, -461, -461, -461, -461,
	-461, -461, -461, -188, -188, -188, -461, -256, -256, 16,
	-140, -141, -148, -151, -297, 77, -246, -251, 538, 540,
	450, -250, -250, -296, -289, 81, 33, 143, -352, 109,
	120, 34, 187, -210, 78, 77, -304, -308, -310, -309,
	-311, -306, -307, -68, 491, 489, 485, 484, 487, 490,
	143, 488, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 34, 226, 481, 482, 483, 665, 505,
	506, 507, 508, 509, 510, 511, 512, 459, 486, 652,
	460, 461, 462, 463, 464, 465, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, -304,
	-304, -304, -304, -304, -288, -381, 82, -287, 76, -228,
	-265, -289, -148, -278, 208, -276, 82, 100, 82, -147,
	-289, -297, -160, -263, 265, -421, -420, -412, -415, 678,
	-263, -277, -412, 270, 268, 269, 77, 203, 77, 203,
	79, -140, 29, 74, -142, -148, 82, 82, -147, -160,
	-414, -412, -415, -161, -289, -297, -298, -297, -280, -285,
	-286, 679, 195, 26, 191, 194, 99, 28, 30, 680,
	253, 102, 465, 143, 580, 581, 582, 499, 568, 21,
	25, 214, 103, 197, 484, 487, 212, 142, 207, 215,
	310, 312, 560, 596, 190, 70, 681, 551, 553, 548,
	552, 311, 550, 525, 675, 672, 674, 673, 478, 476,
	309, 33, 682, 15, 597, 31, 224, 260, 27, 683,
	136, 474, 192, 607, 251, 106, 107, 684, 46, 45,
	8, 29, 313, 225, 94, 319, 598, 475, 685, 686,
	24, 73, 216, 16, 210, 241, 759, 687, 334, 18,
	577, 125, 19, 688, 669, 671, 670, 205, 204, 119,
	200, 751, 68, 258, 13, 689, 463, 468, 469, 470,
	471, 472, 464, 186, 96, 690, 691, 116, 324, 64,
	584, 585, 608, 50, 37, 246, 599, 600, 705, 601,
	566, 323, 692, 43, 42, 498, 502, 497, 322, 514,
	66, 117, 22, 554, 555, 35, 693, 694, 650, 234,
	501, 462, 496, 706, 695, 667, 138, 263, 71, 100,
	384, 602, 603, 92, 477, 763, 38, 74, 229, 380,
	351, 47, 97, 20, 259, 69, 39, 575, 122, 764,
	605, 480, 206, 238, 696, 540, 262, 697, 123, 606,
	473, 707, 218, 118, 455, 193, 325, 559, 362, 307,
	219, 329, 336, 67, 698, 252, 124, 604, 198, 526,
	666, 11, 699, 570, 34, 223, 306, 461, 208, 700,
	264, 318, 308, 317, 701, 57, 702, 343, 48, 590,
	589, 588, 591, 761, 65, 563, 564, 678, 199, 44,
	105, 500, 460, 495, 203, 567, 239, 93, 314, 9,
	49, 36, 521, 14, 374, 72, 75, 556, 557, 558,
	55, 488, 485, 493, 594, 492, 593, 595, 209, 762,
	104, 17, 327, 576, 654, 541, 98, 676, 522, 14,
	192, 77, 81, -240, 82, -287, 81, -240, -239, -240,
	-239, 242, -261, 81, -301, -121, -263, -263, -148, -148,
	-148, -148, -148, -148, -261, -261, -261, -261, -258, 16,
	-258, -261, -297, -297, -121, -175, -412, 552, 134, -261,
	-297, -100, -98, 217, -98, -100, 82, 82, 453, -91,
	-4, -18, -16, -17, -113, -9, 38, 28, 28, 82,
	-62, -62, 81, -62, 77, 109, -62, -177, 78, -194,
	-289, -394, 751, 77, -411, 28, 540, 541, 514, -444,
	199, 241, 238, 74, -444, -439, 371, -414, -413, -412,
	-442, -443, -289, -442, -442, -442, 527, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -418, -444, 334, 77,
	-444, -414, -412, 203, -376, -378, 442, 443, 444, 445,
	541, 542, 457, 375, 375, 375, 375, 375, 375, -140,
	-140, 203, 253, -133, 28, -231, -230, -290, -283, -285,
	-286, 227, -289, -280, -468, -329, -326, -325, -327, 487,
	535, 142, 547, -148, -412, -161, -131, -131, -129, -131,
	64, 64, 64, 69, 64, 69, 69, 64, 64, -144,
	-299, -272, 77, -462, -462, -462, -9, -461, -299, -163,
	-272, 200, 200, 200, 102, 16, 52, 26, 102, 16,
	52, 26, 102, 16, 52, 26, -118, -117, -120, 134,
	-121, -297, -175, -241, 96, 14, 119, 77, 23, 77,
	-227, 30, 31, 187, -176, 59, 84, 87, -241, 77,
	-119, -148, -121, -121, -121, -192, 92, 100, 93, 94,
	-291, 227, 134, -298, -290, -285, -283, 348, 231, -280,
	-175, -193, -199, -136, 88, 119, 117, 118, 102, -175,
	-175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
	-175, -175, -175, -175, -300, 82, 81, 143, 82, -290,
	-117, -290, -174, 226, 481, 482, 92, -174, -289, -289,
	-106, 26, 27, -290, 528, -290, -106, -106, -106, -106,
	-106, 77, -462, -117, -117, -117, -462, -121, -121, -117,
	-175, -117, -202, 81, -117, -202, 81, -117, -175, 566,
	567, 568, -117, -117, -106, -203, -204, 104, -202, -283,
	-286, 348, 231, -117, -462, 84, -181, -182, 657, 666,
	667, 669, 672, 665, 664, 663, 661, 660, 659, 662,
	658, 676, 675, 674, 673, 671, 670, 668, -181, -181,
	-183, 226, 483, 481, 482, -117, -118, -117, -117, -462,
	-462, -120, -117, -120, -117, -117, -462, -462, -462, -462,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -462, 84, -150, 96, -148, -124, -148, -140,
	-463, 16, 75, -463, 77, 187, -249, -252, 77, 539,
	541, 542, -246, -321, -322, 142, 74, 95, 81, -121,
	-290, -298, -228, -372, -341, -342, -343, -344, -365, 215,
	-380, 206, 208, 210, 209, 49, -345, 216, 200, 50,
	-305, -331, 520, 521, -313, 76, -312, 76, -68, 485,
	484, 487, -312, 485, 492, -312, 492, 492, -312, -312,
	-312, 485, 76, 76, -313, -313, -313, -333, 76, -333,
	480, -334, 76, -334, -334, -334, -334, -305, -305, -305,
	-305, -305, -381, -121, -229, -293, 75, -232, 202, 738,
	-329, 29, -329, -69, 253, 221, 187, 76, -161, 256,
	257, -416, 77, 33, -422, 331, 84, 205, -148, 231,
	-148, -148, -412, -412, -418, -391, 219, 214, -148, 77,
	77, 187, 717, 717, -148, 77, 81, 82, 82, -177,
	-349, 16, 119, -261, -148, -177, -115, 227, 75, -465,
	-462, 455, 456, 82, -91, -175, 38, 38, -61, -174,
	-289, 78, -395, 204, 559, 81, -410, -299, 513, 541,
	-445, 134, -289, -444, -445, -448, 654, 203, 78, 77,
	-442, -445, 351, 334, -445, 16, -375, -377, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 77, 109, 109,
	109, 109, 458, -379, 24, -374, 654, -374, 81, -175,
	-135, -462, 77, 187, -199, 34, -351, -352, -351, -351,
	-81, -387, -79, -385, 195, 192, 191, 267, 197, -324,
	560, 250, 249, 283, 284, 73, 35, 196, 193, -71,
	-80, 230, 289, 235, 290, 194, 229, 291, 228, 292,
	654, 287, 758, 518, 610, 611, 644, 90, 614, 247,
	41, 200, 624, 617, 547, 620, 621, 376, 619, 623,
	211, 627, 626, 628, 630, 631, 632, 340, 635, 636,
	637, 248, 638, 639, 640, 365, 645, 9, -422, -428,
	74, -138, -137, 74, 75, -139, 74, -137, 64, 64,
	64, -235, 76, -299, -129, -462, -237, -289, -163, -299,
	-461, -461, -461, -175, -175, 119, -175, -175, 119, -175,
	-175, 119, -462, 77, 187, 77, -238, 40, 39, -289,
	515, 60, -178, -178, -214, -255, 24, 16, 55, 55,
	-126, 16, -225, -225, 92, 93, 94, 187, -461, -193,
	-175, -175, -175, -115, 99, -462, -462, -118, -117, -117,
	-117, -117, -117, -121, -462, -462, -462, 77, 75, 28,
	-462, 75, 119, -462, 16, 16, -462, 16, 16, -462,
	-462, 16, -175, -175, -175, -462, -462, -117, -206, -204,
	106, -121, -462, -462, -462, -462, -462, 77, 77, 16,
	77, -462, -462, -462, -462, -215, 575, -215, -462, -462,
	-462, -462, -462, -215, -215, -215, -215, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-236, 122, -148, 34, -236, 75, -124, -124, -151, -297,
	134, -251, -254, 543, 540, 546, 82, 81, 143, 81,
	187, -229, -357, -371, 77, 122, 758, 518, 610, -324,
	611, 644, 90, 614, 247, 41, 200, 624, 617, 547,
	620, 621, 376, 619, 623, 211, 627, 626, 628, 630,
	631, 632, 340, 635, 449, 636, 637, 248, 638, 639,
	640, 365, 645, 9, 654, 76, -350, -288, -380, 82,
	-282, 50, -345, -347, -345, -345, -345, -350, 82, -282,
	-350, 50, 720, 92, 100, -320, -322, 143, -317, -318,
	-335, -338, -314, 28, 759, 523, 218, -344, 487, 535,
	33, 74, 518, 206, 50, 49, 210, 90, -332, 522,
	84, 84, 586, -312, 492, -312, -312, -312, -312, -312,
	-339, 81, -339, 84, -333, 84, 78, 74, -289, 28,
	-148, 678, -70, 13, 14, 15, -289, -397, -398, -399,
	-289, 119, 258, 259, 74, -431, 362, -420, 332, 341,
	99, 21, 654, -452, 100, 203, 203, -148, -412, -289,
	74, 74, -240, -164, 17, 82, 82, -258, -261, -175,
	-415, 244, 245, -175, -175, -149, 96, -411, 203, 187,
	187, -445, 203, 353, -414, -289, 16, 16, 351, 16,
	-414, 77, 109, 109, 109, 109, 109, 109, 109, 109,
	109, -378, 76, 76, 76, 76, 385, 540, -230, -290,
	-351, 82, 81, 143, 82, 81, 143, 81, -386, 77,
	-387, 195, 192, 283, 284, -385, -273, -345, -393, -392,
	-343, -344, 122, 207, 215, 215, 212, -273, -345, 206,
	216, 122, 215, 212, -273, 200, -351, -273, 487, 142,
	203, 37, 37, 365, 122, 365, 122, -351, -273, 207,
	-345, -270, 215, -271, 203, 28, 288, 122, 122, 122,
	122, 122, 122, 122, 122, 293, 678, -351, -351, -351,
	-351, -351, -351, -351, -351, 616, 616, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-355, -449, 81, -459, 90, 271, 340, 82, -282, -280,
	84, 86, 85, -351, -351, -162, 193, 277, 273, -121,
	76, -121, -233, -289, -235, -462, 77, -163, -233, -233,
	-233, 99, 203, -461, 99, 203, -461, 99, 203, -461,
	-272, -120, 134, -298, 81, 77, 81, 81, 516, 61,
	-148, -164, 607, -124, -119, 134, -290, -118, -115, 99,
	-175, -462, -462, -462, -462, -462, -462, -303, 143, 484,
	487, 226, 483, 476, 474, 473, 475, 503, 489, 520,
	481, 521, 665, -300, -303, -300, -175, -175, -175, -175,
	-175, -175, 16, 16, 16, 651, -210, 108, -121, 105,
	-175, -175, -175, -175, -289, -220, -461, -215, -215, -215,
	-215, -215, -216, -215, -216, -216, -216, -216, -216, -216,
	-216, -216, -216, -216, -216, -171, -172, 34, -170, -9,
	-461, -173, -469, 55, 59, -461, -243, -248, -202, -283,
	-286, 227, -164, -124, -164, -164, 187, 540, 544, 545,
	-371, 21, -351, -351, -351, 535, 487, 142, -351, -351,
	-351, -351, -351, 616, 616, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, 450, -351, -351, -351, -351, -351, -351, -355,
	-449, -351, -351, 678, -367, -366, 82, -287, 206, 49,
	-380, -350, -350, -350, -350, -350, -101, -288, 92, -461,
	760, 84, -148, 34, 82, 143, 81, -174, 133, -301,
	-166, -185, -461, 93, 94, 551, 552, 556, 553, 557,
	558, 571, 572, 573, 574, 548, 554, 555, 14, 50,
	50, 50, 81, 78, 78, 78, -312, 78, 77, 78,
	77, 78, 77, -168, 712, 713, -148, -224, -232, 84,
	74, 78, 77, -304, -289, -289, -289, 273, -434, 654,
	337, -432, -430, 343, 344, 345, 346, 347, -415, 342,
	-422, 339, 81, 82, 81, 677, 711, 732, 704, 29,
	-148, -412, -234, 76, -233, -234, -121, -177, -236, 199,
	-414, 134, 134, -289, 203, -414, 351, -447, 654, -414,
	-414, 16, -414, -377, 81, 81, 81, 84, 81, 84,
	84, 84, 84, -140, -140, -140, -140, 81, 35, 82,
	81, 143, -79, 195, 192, 283, 284, 76, -340, 82,
	-287, -350, -266, 208, 206, -461, 82, -288, -288, -288,
	-289, 50, 50, -237, -288, -288, -289, -288, 33, 280,
	281, 282, 82, 34, -351, 487, -237, 26, -237, 26,
	33, 337, 285, 286, -340, -288, -289, -148, 216, 212,
	-288, -237, 26, 84, -237, -289, -237, 26, -237, 26,
	-237, 26, -237, 26, 646, -355, -121, -355, -459, -459,
	81, 81, 81, -351, -351, -103, 647, 217, -459, 81,
	-103, -459, -449, 81, -102, 217, 220, 222, -355, -355,
	-355, -459, -459, -459, -459, 81, -356, 33, 618, 479,
	613, 634, 612, 82, 92, 81, 81, -459, 33, -459,
	33, -459, -355, 641, -459, -461, -427, 249, 250, 203,
	278, 100, -424, 757, 274, -233, 78, 77, -153, -289,
	-462, -462, -462, -175, -175, -175, -175, -175, -175, -175,
	-175, -175, -299, 187, 530, -289, -319, -320, -207, 18,
	-225, -462, -175, -216, -216, -216, -216, -216, -462, -313,
	-313, -313, -313, -334, 480, -313, 464, -313, 464, -462,
	-462, -462, -462, 24, 24, 24, 24, -462, -175, -175,
	-175, -461, -114, 570, -121, 77, 77, -462, -462, -294,
	82, -242, 74, -242, -243, -272, -9, -462, -231, -173,
	-461, 11, 55, 59, 654, 199, -197, -200, -468, -237,
	-164, 77, -352, -352, -352, -352, -210, -164, -358, -359,
	-362, -361, 123, 625, 692, -355, -355, -355, -351, 34,
	-351, -459, -459, 81, 81, 81, -351, -351, -103, -459,
	81, -103, -459, -449, 81, -102, -355, -355, -355, -459,
	-459, -459, -459, 81, -356, 82, 92, 81, 81, -459,
	33, -459, 33, -459, -355, 641, -459, -461, 646, 78,
	77, -313, -313, 50, -347, 76, -175, 28, 76, 82,
	143, 81, -174, 81, -175, -191, 81, 84, 84, 76,
	-226, 28, -452, -148, -400, -401, -402, 90, 653, 100,
	260, 261, 217, 262, 263, 264, -399, -304, -304, -304,
	-424, -437, -438, -436, 340, 360, 361, 348, -435, -433,
	355, 356, 357, 358, 99, 81, 81, 81, -423, 331,
	99, 340, 21, 28, 21, 28, 81, 81, 81, 81,
	84, 75, -233, -261, -319, -148, -447, -414, -447, 334,
	-414, 78, 78, 78, 78, -340, -212, 220, 221, -304,
	-304, -293, -347, 50, -382, -384, 122, -288, 712, 713,
	712, 713, 34, 192, 750, 720, -340, -351, -300, 34,
	365, 365, 365, 365, -212, -271, 203, 50, -288, 203,
	365, 365, 96, 654, 81, 81, 615, 629, -450, -449,
	-316, 90, 74, -161, 278, -428, 74, -180, -174, -185,
	-174, 78, -289, 77, 77, 77, 134, -461, -403, -259,
	-208, 19, 21, -319, 82, -319, 82, -175, -175, -175,
	-175, -462, -462, -462, -175, -462, 81, -175, -175, -196,
	122, 32, -242, -299, -462, -173, -461, -462, -462, 77,
	-199, -461, -462, -210, -248, -121, -121, -121, -121, -228,
	-363, 633, -461, 530, 622, 50, -300, -351, -323, -449,
	81, 81, 81, 615, 629, -450, -369, -368, 75, 211,
	90, 619, 637, 750, 720, -366, -227, -227, -350, -350,
	-233, -462, -461, -233, -462, 78, 78, -367, -9, -224,
	24, -225, -402, 81, 264, 260, 264, 264, 264, 264,
	265, -428, -419, 90, 338, -436, 349, 718, 333, 362,
	84, 84, 121, 35, 36, -433, 84, 84, 84, 84,
	-430, 21, 654, -422, 339, 81, 81, 339, 81, 81,
	331, -452, 41, 78, -403, -446, 28, -447, -446, 351,
	78, 82, -305, -305, 76, -350, -350, -462, 77, -289,
	33, 33, -212, -300, -300, -288, -289, -288, 203, -288,
	-461, 199, 77, -462, 328, 81, 367, -162, -429, -182,
	-175, -175, -175, -454, -455, -290, 725, -404, 43, -406,
	44, -218, 576, -209, -121, -195, -123, -121, -462, -462,
	-462, -462, -111, 119, 654, -462, -462, -210, 21, 50,
	-235, -173, -9, -461, -200, -462, -228, -360, 642, 84,
	-175, -461, -461, -275, 267, -300, -462, -368, -449, -351,
	81, -351, -351, 78, -330, 762, 761, -175, 78, 78,
	-224, -226, 251, -226, 41, 41, 256, 257, -427, 81,
	81, 33, 350, 186, 33, 84, 186, 578, 339, 81,
	82, 340, 340, 21, -175, -404, -412, -446, -367, -293,
	76, -384, 55, -175, 142, 142, 203, -288, -382, -148,
	-449, -224, -427, 132, -425, 275, -462, -462, -462, -462,
	77, -304, 24, 81, 609, -407, 48, -405, -337, 47,
	21, -217, -219, -289, 77, -462, 652, 71, 655, -221,
	124, 123, -194, 14, -9, -383, -461, 21, -462, -233,
	-175, -461, 109, 84, 81, 81, 218, -462, -370, -369,
	-279, 654, -9, 252, -27, -4, -16, -17, -18, -19,
	-21, -72, -22, -23, -28, -29, -24, -82, -86, -87,
	-88, -84, -95, -93, -94, -90, -89, -32, -34, -35,
	-37, -40, -41, -38, -39, -36, -30, -33, -42, -25,
	-43, -44, -45, -50, -51, -31, -52, -46, 103, 205,
	449, 309, 320, 321, 322, 82, 325, 327, 323, 324,
	319, 329, 448, -316, 84, 33, 84, 33, 352, 340,
	28, 84, -315, 204, 654, 78, 76, -367, 236, -351,
	-300, -288, -462, -71, 654, -27, -316, 186, -426, 276,
	-180, -462, -455, -456, 609, 29, 731, 530, 81, -406,
	21, -408, 45, 46, 81, 77, 28, -123, 61, 653,
	656, -462, -222, 102, -223, 121, 578, -179, 84, 186,
	-222, -243, -462, -382, -361, -462, -462, -233, 84, -148,
	-330, 212, 279, 513, -224, -213, 254, 255, -224, -121,
	-56, -57, 104, -121, 82, -66, -295, 312, 313, 314,
	-290, 82, 82, -55, -27, 80, -55, -121, 82, 82,
	-464, 16, 58, -175, 108, -55, 328, 661, 661, 81,
	-235, 84, 332, -370, -367, 78, 237, -300, 288, -224,
	328, -174, -180, -429, -272, 81, 609, -461, 530, 81,
	21, 21, -219, -220, 61, -223, 126, 127, 252, 126,
	127, -174, -462, 622, 50, -462, 76, 351, 212, 212,
	-279, -224, 82, 82, -56, 108, 106, -57, -121, 105,
	310, 311, 315, -304, 77, 765, 448, 322, 325, 327,
	765, 328, 82, 16, 765, -224, -244, 34, 43, 124,
	33, 337, 26, -415, 78, -370, -461, -224, -182, -429,
	-299, -457, -458, 377, 92, 33, 81, -454, -461, 81,
	81, 654, 99, -181, -461, -275, -233, 351, 351, -226,
	108, 106, 103, -55, 105, -55, 24, 24, 24, -319,
	-290, 108, -27, 108, -55, -55, -55, -121, 326, -55,
	96, 108, -27, -243, 8, -370, -175, 234, -27, -458,
	92, 33, -457, 92, 33, 74, 74, -174, -462, -454,
	655, -223, -175, -461, 78, -20, -26, -19, -25, -16,
	-17, -18, 448, 654, 103, -55, 765, -55, 765, -67,
	84, -9, -65, -64, 84, -67, 317, 100, 318, 82,
	-321, 322, 82, 765, 765, 765, 328, -121, 765, -60,
	82, -224, -415, -462, -462, -224, 74, -174, 74, -174,
	684, 377, 684, 377, 74, -462, 656, -462, -175, -389,
	-390, 74, -224, -55, 108, -127, 765, 108, 765, 108,
	106, -58, -59, 107, -27, 77, 316, 33, 108, 108,
	326, -55, 108, 108, 77, 74, 74, 377, 377, 684,
	377, -364, 643, -462, -390, 74, -389, 74, 15, 14,
	765, 108, 103, 205, -55, 108, 106, -59, -121, -64,
	-175, 82, 322, -121, 765, 325, 327, 82, 74, 74,
	84, -364, -388, 219, 214, 217, 34, -388, 108, 103,
	765, 205, -55, 105, 82, 108, 108, 377, 684, 213,
	33, 92, 108, 765, -55, 325, 327, 205, 108, 765,
	82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1718, 1219, 1718, 0, 1219, 0, 1219, 0, -2,
	133, 926, 927, 928, 929, 0, 0, 0, 0, 0,
	0, 0, -2, 1181, 1182, 1185, 1182, 1182, 1211, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1325, 2748,
	-2, 1215, 1216, 1217, -2, -2, 0, 53, 0, 60,
	2, 1726, 0, 1232, 1221, 1726, 0, 0, 49, 0,
	0, 1219, 1219, 1219, 87, 88, 0, 119, 0, 121,
	0, 0, 1718, 1219, 0, 0, 0, 1802, 1802, 333,
	1802, 1802, 1817, 0, 1820, 331, 0, 1799, 1815, 1816,
	1818, 0, 0, 0, 1800, 0, 1800, 1800, 1800, 1800,
	1800, 1800, 1800, 1800, 0, 0, 1096, 1415, 1417, 1418,
	1419, 1420, 1829, 1830, 2739, 2740, 2741, 2742, 2743, 2744,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2745, 2746, 2747, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	0, 0, 0, 1101, 1102, 1103, 1104, 2733, 2734, 2735,
	2736, 2737, 2738, 1113, 1114, 0, 0, 0, 1172, 0,
	1172, 1132, 1133, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 1169, 1147, 1150, 1154, 0, 1726, 1726, 1169,
	1160, 0, 781, 782, 783, 1177, 1178, 1166, 1179, 1184,
	1183, 1192, 1192, 0, 1183, 1213, -2, 1213, 1353, 0,
	457, 459, 0, 480, 0, 483, 486, 1421, 0, -2,
	-2, 1840, 1198, 0, 0, 1865, 1866, 0, 0, 0,
	0, 0, 2603, 231, 347, 272, 272, 272, 272, 272,
	272, 272, 0, 272, 272, 0, 272, 272, 272, 2621,
	272, 0, 272, 272, 272, 272, 272, 230, 346, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 336, 337,
	338, 0, 0, 0, 2603, 0, 730, 1186, 735, 733,
	0, 727, 724, 725, 0, 80, 0, 67, 81, 1750,
	1375, 1376, 1322, 0, 1326, -2, 0, 1800, 0, 1805,
	69, 1312, 1313, 1314, -2, 0, 0, 1320, 1321, -2,
	1471, 1829, 0, 0, 1226, 0, 0, 1223, 1229, 0,
	1733, 0, 0, 117, 1220, 47, 48, 2749, 59, 0,
	0, 1248, 1303, 0, 1430, 2300, 1436, -2, 2213, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 2158, 0, 0,
	0, 0, 0, 2255, 1509, 1510, 1511, 1512, 1513, 1514,
	2466, 2687, 2688, 1696, 1700, 1701, 1702, 1703, 1704, 1705,
	-2, -2, -2, 1681, 1682, 0, 1694, 2739, 2740, 2742,
	2743, 2744, 1767, 0, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 2281, 2344, 2232, 2349,
	2177, 2745, 2169, 2746, 2246, 2373, 2374, 2747, 2289, 2718,
	0, -2, 2398, 2337, -2, -2, -2, 1577, -2, -2,
	-2, 2729, 2730, 2715, 2720, 2239, 2187, 2297, 2338, 2178,
	2199, 2218, 2267, 2268, 2270, 2302, 2303, 2321, 2330, 2348,
	2159, 2160, 2161, 2262, 2263, 2370, 2369, 2368, 2371, 2404,
	2402, 2405, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2162, 2163, 2164, 2165, 2166, 2168, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, -2,
	2186, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2197,
	2198, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2214, 2215, 2217, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2233, 2234, 2235, 2236, 2237, 2238, 2240, 2241, 2242, 2243,
	2244, 2245, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2256, 2257, 2258, 2259, 2260, 2261, 2264, 2265, 2266, 2269,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2282, 2283, -2, -2, 2286, 2287, 2288, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2298, 2299, 2301, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2331, 2332, 2333, 2334, 2335, 2336, 2339, 2340, 2341,
	2342, 2343, 2345, 2346, 2347, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2372, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2399, 2400, 2401, 2403, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 0, 1804, 1804,
	0, 104, 2689, 0, 1774, -2, -2, 1776, 0, 0,
	0, -2, -2, -2, -2, 2170, -2, 1681, 0, 0,
	0, 0, 2158, 2159, 2160, 2161, 2167, 2169, 2177, 2178,
	2182, 2183, 2184, 2185, 2187, 2196, 2199, 2213, 2216, 2218,
	2232, 2239, 2246, 2255, 2262, 2263, 2267, 2268, 2270, 2281,
	2284, 2285, 2289, 2297, 2300, 2302, 2303, 2304, 2321, 2330,
	2337, 2338, 2344, 2348, 2349, 2368, 2369, 2370, 2371, 2373,
	2374, 2385, 2395, 2396, 2397, 2398, 2402, 2404, 2405, 120,
	1718, 0, 122, 0, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 807, 1823, 1824, 0, 1726, 1232, 0,
	0, 331, 0, 0, 0, 0, 0, 1802, 326, 0,
	0, 0, 0, 1802, 333, 0, 0, 1076, 0, 1077,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1119, 1120, 1095, 0, 1097, 98, 1100,
	0, 0, 0, 0, 1117, 1118, 1121, 0, 1163, 1172,
	1123, 0, 0, 1802, 1802, 0, 0, 0, 0, 0,
	1131, 0, 809, 810, 1172, 1137, 1138, 1172, 1172, 1172,
	1169, 0, 1169, 1144, 1167, 1168, 1172, 0, 0, 0,
	1149, 0, 0, 0, 1157, 1158, 1172, 1162, 0, -2,
	1190, -2, 1199, 0, 0, 79, 1214, 1213, 0, 1218,
	1354, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	482, 463, 0, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 0, 1353, 0, 0, 1835,
	1841, 1203, 1856, 1857, 0, 1867, 1868, 276, 0, 276,
	0, 0, 0, 0, 198, 272, 0, 200, 272, 272,
	272, 0, 272, 272, 207, 208, 272, 210, 211, 212,
	272, 214, 215, 272, 217, 218, 219, 272, 272, 222,
	272, 272, 225, 226, 227, 228, 229, 345, 276, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 731, 736,
	737, 732, 734, 705, 0, 0, 0, 0, 710, 711,
	712, 713, 0, 0, 716, 717, 0, 0, 0, 65,
	66, 0, 0, 0, 1325, 1323, 0, -2, 931, -2,
	681, 682, 683, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 1377, 0, 0, 1380, 0, 0, 0, 0,
	0, 1814, -2, 0, 0, 0, 0, 1310, 0, 1327,
	0, 1329, 0, -2, 0, 0, 0, 1814, 1333, 1334,
	1335, 1336, 1337, 0, 0, 0, 1473, 0, 57, 58,
	1227, 1228, 54, 62, 63, 55, 1224, 1225, 1230, 1231,
	56, 73, 0, 0, 1727, 1730, 1731, 1732, 1719, 1720,
	1723, 0, 0, 73, 1233, 1234, 1235, 1236, 1237, 1238,
	0, 1222, 0, 1249, 0, 0, 0, 0, 1304, 0,
	1307, 1308, 1309, 0, 1434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1437, 0, 1451, 0, 0, 0, 0, 0, 0,
	0, 1502, 1503, 1504, 1505, 1506, 1507, 0, 1697, 1698,
	1699, 1239, 0, 0, 1239, 1239, 1239, 1239, 1239, 0,
	1477, 2411, 0, 2376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	1673, 0, 0, 1574, 0, 1575, 1576, 1578, 1592, 0,
	1579, 1580, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1587, 1588, 1589, 0, 0, 0, 0,
	0, 0, 98, 100, 1415, 0, 105, 107, 0, 0,
	2689, 1777, 1778, 672, 1792, 1793, 1794, 1795, 0, 770,
	771, 1790, 0, 1726, 824, 0, 554, 651, 572, 573,
	574, 641, 576, 643, 0, 643, 643, 1670, 1671, 643,
	643, 643, 618, 619, 620, 621, 622, 624, 625, 626,
	627, 628, 0, 0, 600, 641, 641, 641, 604, 631,
	632, 633, 634, 635, 636, 637, 638, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 646, 646, 648, 648, 648, 648, 648, 554,
	554, 554, 554, 554, 0, 806, 1031, 1032, 0, 1733,
	117, 1821, 1750, 0, 0, 333, -2, 0, -2, 0,
	1410, 0, 0, 0, 0, 146, 367, 349, 131, 0,
	0, 327, 332, 328, 329, 330, 0, 0, 0, 0,
	340, 1092, 1801, 0, 1084, 96, 1085, 1086, 1087, 1088,
	1089, 342, 1090, 1091, 369, 0, 1416, 1831, 1832, 1833,
	1834, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 0,
	0, 0, 1105, 1107, 1111, 1112, 1106, 1108, 1115, 1109,
	1116, 1161, 1122, 1173, 0, 1175, 0, 0, 1353, 1127,
	1128, 1129, 1130, 811, 1136, 1139, 1140, 1146, 1172, 0,
	1353, 1145, 1170, 1171, 1148, 1465, 1151, 1590, 0, 1159,
	1180, 1196, 0, 1191, 0, 1197, 1201, 1200, 0, 1204,
	1207, 1208, 1209, 1210, 79, 1206, 0, 0, 0, 1212,
	458, 460, 462, 481, 0, 0, 484, 485, 487, 0,
	1422, 1837, 0, 0, 1859, 0, 1861, 1863, 0, 0,
	277, 278, 279, 276, 0, 232, 0, 294, 348, 0,
	199, 0, 274, 201, 202, 203, 272, 205, 206, 209,
	213, 216, 220, 221, 223, 224, 344, 0, 0, 0,
	0, 196, 0, 0, 729, 749, 0, 0, 0, 0,
	1187, 1188, 0, 706, 707, 708, 709, 722, 715, 720,
	720, 0, 0, 82, 0, 0, 1752, 1755, 1756, 1757,
	1758, 1759, 1827, 1828, 0, 930, 684, 685, 686, 0,
	768, 768, 768, 677, 0, 379, 1371, 1373, 0, 1368,
	1378, 1379, 1381, 0, 1383, 0, 0, 1386, 1387, 1388,
	1357, 0, 0, 1319, 1470, 1472, 0, 0, 1424, 1331,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 1348, 0, 0, 0, 1349, 0, 1474, 1475, 1244,
	1245, 0, 0, 45, 0, 1734, 0, 0, 0, 0,
	1722, 1724, 1725, 0, 0, 1707, 0, 0, 70, 117,
	117, 50, 1431, 1432, 1433, 1435, 1452, 0, 1454, 1456,
	1305, 1306, 1250, 0, 1683, -2, 1685, -2, -2, -2,
	1442, 1443, 1467, 1468, 1469, 0, 0, 0, 0, 1465,
	1447, 0, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1501, 1605, 1606, 1607, 0, 1692,
	0, 1693, 1499, 0, 0, 0, 1706, 1500, 1688, 1508,
	1473, 1240, 1241, 1690, 1691, 1689, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 1483, 1696, 0, 1483, 1696, 0, 0, 2271,
	2383, 2163, 0, 0, 0, 1679, 1676, 0, 0, 0,
	0, 2733, 2734, 0, 1591, 0, 0, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 0, 0,
	0, 1276, 1277, 1278, 1279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 102, 0, 1414, 0, -2, 0,
	0, 94, 95, 0, 0, 0, 1775, 0, 0, 0,
	110, 111, 106, 1779, 673, 0, -2, 1786, 1696, 1788,
	1683, 0, 1733, -2, 539, 540, 541, 542, 0, 788,
	797, 0, 0, 786, 0, 788, 788, 0, 784, 785,
	545, 654, 652, 653, 575, 0, 605, 0, 643, 643,
	1670, 1671, 607, 643, 643, 610, 643, 643, 613, 616,
	617, 623, 0, 0, 601, 602, 603, 592, 0, 593,
	646, 595, 0, 596, 597, 598, 599, 546, 547, 548,
	549, 550, 805, 0, 296, 0, 0, 0, 0, 0,
	126, 1803, 127, 0, 390, 391, 0, 298, 0, 334,
	335, 148, 0, 0, 350, 0, 137, 0, 534, 535,
	0, 1078, 0, 1080, 339, 1082, 1093, 1094, 1083, 0,
	0, 0, 0, 0, 99, 0, 1174, 1124, 1125, 1126,
	1428, 0, 0, 1141, 1169, 1172, 1164, 0, 0, 1152,
	0, 1195, 1193, 1202, 1205, 1350, 0, 0, 464, 465,
	466, 488, 0, 1838, 1839, 1836, 1858, 0, 1862, 1864,
	0, 280, 282, 0, 0, 190, 0, 0, 273, 0,
	204, 0, 0, 0, 0, 0, 728, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1189, 714, 0, 718, 0, 719, 703, 704,
	83, 1751, 0, 0, 1324, 768, 0, 769, 0, 0,
	1039, 933, 934, 1041, -2, 1037, 1037, 768, 1037, 0,
	0, 0, 0, 0, 0, 971, 768, 1037, 1809, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1029, 1030, 768, 768, 768, 768, 768, 768, 768, 768,
	0, 0, 768, 768, 768, 768, 768, 768, 768, 768,
	768, 768, 768, 768, 768, 768, 768, 768, 768, 768,
	768, 768, 768, 768, 768, 0, 768, 768, 1033, 1074,
	0, 1365, 1372, 0, 0, 1366, 0, 1367, 1382, 1384,
	1385, 1315, 0, 1357, 1311, -2, 0, 1361, 1330, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 74, 2479, 0, 77,
	0, 0, 1728, 1729, 1721, 0, 1796, 1797, 1708, 1709,
	1428, 0, 0, 1242, 1453, 1455, 1457, 0, 1473, 1444,
	1465, 1448, 0, 1445, 0, 1439, 1547, 0, 0, 0,
	0, 0, 0, 1478, 1545, 1546, 1548, 0, 0, 0,
	1552, 0, 0, 1556, 0, 0, 1598, 0, 0, 1599,
	1561, 0, 0, 0, 0, 0, 1567, 1718, 0, 1677,
	0, 0, 1570, 1571, 1572, 1573, 1593, 0, 0, 0,
	0, 1594, 1595, 1596, 1597, 1534, 0, 1535, 0, 0,
	0, 0, 0, 1541, 1542, 1543, 1544, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1586,
	0, 0, 1413, 0, 1428, 0, 1428, 1428, 101, 0,
	1423, 108, 109, 0, 0, 115, 674, 675, 676, 1787,
	0, 297, 536, 825, 677, 0, 768, 768, 768, 0,
	768, 768, 768, 768, 768, 0, 0, 768, 768, 768,
	768, 768, 768, 768, 768, 768, 768, 768, 768, 768,
	768, 768, 768, 768, 0, 768, 768, 768, 768, 768,
	768, 0, 768, 768, 0, 0, 0, 0, 796, -2,
	-2, 788, 788, 788, 787, 788, 788, 779, 789, 790,
	780, 803, 555, 556, 0, 558, 559, 560, 561, 562,
	563, 564, 565, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 663, 0, 698, 700, 0, 0, 571, 655,
	0, 0, 0, 606, 643, 614, 608, 609, 611, 612,
	0, 639, 0, 0, 594, 0, 821, 0, 1822, 116,
	1750, 0, 0, 392, 393, 394, 1411, 0, 299, 300,
	0, 0, 0, 0, 0, 158, 0, 368, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 97, 343, 370,
	0, 0, 1110, 1134, 0, 812, 813, 1353, 1143, 1466,
	1153, 1155, 1156, 1351, 1352, 102, 0, 1860, 0, 0,
	0, 0, 0, 0, 292, 275, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 0, 0, 0, 0, 0, 1753, 1754,
	0, 690, 691, 692, 693, 694, 695, 696, 932, 677,
	1040, 0, 0, 0, 0, 1042, 0, 788, 0, 0,
	941, 942, 0, 1038, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	0, 963, 964, 965, 0, 966, 0, 0, 0, 0,
	0, 0, 0, 1810, 1811, 1812, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 1063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1022, 1023, 882, 883, 884, 885, 886, 898, 899, 900,
	887, 888, 889, 0, 0, 382, 0, 0, 0, 1369,
	0, 1374, 0, 1359, 1316, -2, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1476, 1246, 0, 0, 0, 75, 664, 1735, 1736,
	46, 1710, 71, 72, 117, 1251, 1695, 0, 1446, 0,
	1449, 1515, 1259, 1259, 1259, 1259, 1259, 0, 641, 641,
	641, 1655, 641, 648, 1658, 1660, 1661, 1662, 641, 1664,
	641, 1667, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 1569, 1680, 0,
	0, 0, 0, 0, 1252, 1253, 1255, 1536, 1537, 1538,
	1539, 1540, 1519, 1260, 1520, 1521, 1523, 1524, 1526, 1527,
	1528, 1529, 1531, 1532, 1533, 1760, 1760, 0, -2, 1742,
	0, 1739, 1325, 1748, 1749, 0, 1428, 1768, 0, 0,
	0, 0, 1718, 1428, 92, 93, 0, 112, 113, 114,
	826, 908, 0, 0, 0, 768, 0, 768, 0, 0,
	0, 0, 0, 768, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 868,
	869, 0, 0, 0, 0, 791, 641, 641, 0, 786,
	795, 772, 774, 775, 776, 778, 0, 804, 557, 0,
	0, 568, 0, 0, 669, 670, 671, 656, 0, 0,
	659, 660, 0, 1440, 1441, 1590, 1590, 1590, 1590, 1590,
	1590, 0, 0, 0, 0, 1590, 1590, 1590, 0, 697,
	699, 701, 702, 642, 644, 645, 615, 629, 0, 630,
	0, 649, 0, 808, 822, 823, 0, 118, 0, 137,
	0, 306, 0, 302, 0, 0, 0, 0, 166, 0,
	149, 150, 151, 153, 154, 0, 0, 0, 147, 0,
	352, 0, 355, 356, 357, 0, 0, 0, 0, 0,
	1079, 1081, 0, 0, 1356, 1099, 1429, 1172, 664, 0,
	292, 281, 283, 284, 0, 292, 295, 191, 0, 192,
	194, 0, 193, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 0, 0, 0, 0, 723, 721, 687,
	688, 689, 935, -2, 1037, 0, 0, 0, 1034, 0,
	0, 1821, 786, 1817, 0, 0, -2, 943, 944, 967,
	968, 969, 0, 1044, 0, 0, 0, 0, 949, 950,
	951, 952, 0, 768, 0, 0, 0, 0, 0, 0,
	972, 973, 974, 975, 1034, 0, 0, 979, 0, 0,
	0, 0, 0, 1051, 0, 0, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1028, 985, 986, 987, 988, 989,
	990, 991, 992, 0, 0, 995, 878, 879, 996, 997,
	998, 999, 1000, 1001, 1002, 875, 876, 877, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 890, 891, 892,
	893, 894, 895, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 0, 1026, 0, 386, 383, 384, 0,
	380, 0, 379, 0, 0, 0, 1358, 0, 1328, 1362,
	1425, 1426, 1427, 1338, 1339, 0, 1341, 1342, 0, 1344,
	1345, 0, 1364, 0, 0, 78, 1850, 665, 1715, 0,
	1243, 1516, 1450, 1518, 1522, 1517, 1525, 1530, 1550, 1650,
	664, 664, 1656, 1657, 1659, 1663, 1665, 1666, 1668, 1554,
	1551, 1553, 1555, 0, 0, 0, 0, 1562, 0, 0,
	0, 0, 0, 0, 1678, 0, 0, 1583, 1584, 1257,
	1256, 84, 0, 85, 1760, 0, 0, 0, 0, 0,
	0, -2, -2, -2, 2142, 2106, 1746, 1762, 0, 0,
	1718, 0, 0, 0, 0, 0, 1726, 91, 914, 903,
	0, 0, 912, 913, 909, 827, 828, 829, 0, 768,
	0, 832, 833, 835, 836, 837, 0, 0, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 0, 872, 0, 874, 756,
	0, 1723, 1723, 788, 788, 0, 0, 0, 0, 666,
	667, 668, 657, 658, 0, 662, 640, 0, 0, 0,
	0, 116, 136, 0, 117, 307, 308, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 301, 303, 304, 305,
	379, 184, 167, 168, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 0, 0, 155, 156, 157, 351, 0,
	0, 354, 0, 0, 0, 0, 138, 139, 0, 141,
	137, 0, 0, 1142, 1850, 1412, 285, 292, 285, 0,
	195, 751, 752, 753, 754, 0, 937, 1035, 0, 554,
	554, 0, 788, 788, 0, 1066, 0, 970, 945, 947,
	946, 948, 0, 0, 955, 956, 1034, 0, 960, 0,
	1045, 1046, 1047, 1048, 976, 0, 0, 0, 0, 0,
	1049, 1050, 0, 0, 993, 994, 1024, 1025, 0, 896,
	1070, 0, 0, 1075, 381, 1074, 0, 373, 388, 389,
	0, 1370, 1360, 0, 0, 0, 1247, 0, 1852, 1846,
	1271, 0, 0, 1651, 1652, 1653, 1654, 0, 0, 0,
	0, 1563, 1564, 1565, 1600, 1568, 1675, 0, 0, 1718,
	0, 0, 86, 1357, -2, 1740, 0, 0, 1747, 1325,
	1764, 0, 103, 1726, 1769, 1770, 1771, 1772, 1773, 90,
	916, 0, 0, 0, 0, 910, 830, 0, 834, 880,
	881, 838, 839, 870, 871, 0, 755, 759, 0, 768,
	0, 768, 768, 766, 767, 792, 793, 794, 773, 777,
	0, 551, 0, 0, 661, 647, 650, 0, 116, 118,
	0, 118, 309, 310, 311, 312, 314, 315, 0, 0,
	0, 382, 130, 0, 0, 169, 0, 0, 0, 0,
	179, 180, 181, 182, 183, 161, 162, 163, 164, 165,
	152, 0, 0, 353, 0, 360, 362, 0, 361, 363,
	0, 135, 0, 1355, 1852, 187, 0, 285, 189, 293,
	936, 1036, 543, 544, 0, 1821, 0, 1043, 0, 0,
	0, 954, 957, 958, 961, 977, 978, 0, 0, 982,
	0, 0, 0, 1027, 116, 387, 385, 382, 371, 375,
	0, 0, 0, 0, 1390, 0, 2571, 76, 1854, -2,
	0, 68, 0, 1716, 1717, 1711, 1712, 1714, 1557, 1559,
	1558, 1560, 0, 0, 0, 1581, 1582, 1261, 0, 0,
	1738, 1741, 1743, 0, 1763, 1765, 89, 1064, 0, 915,
	0, 0, 0, 0, 0, 831, 873, 760, 761, 0,
	763, 0, 0, 0, 566, 552, 553, 0, 569, 757,
	142, 0, 0, 79, 316, 317, 318, 319, 386, 185,
	186, 170, 171, 0, 173, 174, 0, 0, 0, 365,
	0, 358, 359, 0, 1098, 1806, 286, 188, 0, 0,
	0, 1067, 0, 953, 768, 0, 0, 981, 0, 1053,
	897, 79, 386, 0, 377, 0, 1340, 1343, 1346, 0,
	0, 0, 0, 0, 0, 1846, 0, 1848, 0, 1845,
	0, 1272, 1273, 0, 0, 1566, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 902, 0, 908, 904, 0,
	0, 0, 0, 762, 764, 765, 0, 551, 123, 758,
	124, 0, 116, 395, 116, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 0,
	0, 0, 0, 0, 79, 0, 79, 0, 0, 0,
	440, 0, 79, 0, 0, 175, 0, 177, 178, 364,
	0, 140, 1357, 0, 0, 757, 0, 0, 0, 0,
	962, 980, 1052, 0, 1029, 116, 1071, 0, 372, 0,
	373, 1813, 1391, 1392, 0, 0, 1393, 0, 0, 1853,
	0, 1851, 0, 0, 1847, 0, 0, 1713, 1601, 0,
	1604, 1254, 1262, 0, 1265, 0, 0, 0, 1301, 0,
	1263, 1761, -2, 0, 0, 905, 906, 0, 911, 0,
	567, 0, 0, 0, 142, 116, 0, 0, 129, 0,
	0, 410, 0, 0, 1823, 0, 0, -2, -2, -2,
	1825, 437, 438, 0, 489, 0, 0, 0, 454, 455,
	0, 441, 0, 456, 320, 0, 116, 172, 176, 366,
	42, 0, 0, 938, 0, 757, 0, 959, 1054, 1072,
	116, 0, 373, 376, 0, 1396, 0, 0, 0, 1855,
	0, 0, 1274, 1275, 1602, 0, 1266, 1267, 1268, 1269,
	1270, 0, 1065, 0, 910, 907, 0, 143, 0, 0,
	125, 118, 396, 397, 0, 0, 79, 411, 0, 79,
	0, 0, 0, 664, 0, 79, 79, 79, 79, 0,
	79, 79, 0, 442, 79, 79, 44, 0, 1807, 1808,
	287, 288, 289, 291, 757, 940, 0, 79, 374, 378,
	1389, 1397, 1398, 0, 0, 0, 1405, 0, 0, 1849,
	1843, 0, 0, 1302, 0, 0, 0, 144, 145, 79,
	0, 79, 408, 0, 79, 0, 0, 0, 0, 672,
	1826, 0, 490, 321, 0, 0, 0, 0, 0, 0,
	0, 323, 116, 43, 0, 939, 0, 2290, 116, 1399,
	0, 0, 1400, 0, 0, 0, 0, 0, 1394, 0,
	0, 1264, 0, 0, 798, 116, 398, 399, 400, 401,
	402, 403, 79, 0, 406, 0, 79, 0, 79, 420,
	421, 422, 79, 429, 431, 432, 433, 0, 435, 436,
	424, 445, 322, 79, 79, 79, 79, 0, 79, 439,
	443, 132, 290, 1068, 1069, 1073, 0, 0, 0, 0,
	1401, 1402, 1406, 1408, 0, 1395, 1603, 919, 0, 799,
	800, 0, 128, 0, 405, 80, 79, 0, -2, 0,
	79, 0, 417, 0, 423, 0, 434, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	1409, 917, 0, 919, 801, 0, 802, 0, 0, 0,
	79, 0, 409, 413, 0, 0, 79, 418, 0, 430,
	425, 325, 446, 0, 79, 448, 451, 444, 0, 0,
	920, 918, 814, 816, 817, 0, 0, 815, 404, 407,
	79, 415, 0, 79, 447, 0, 0, 1403, 1404, 818,
	819, 820, 0, 79, 0, 449, 452, 414, 0, -2,
	450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 765,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 58087, 764, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1146
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1240
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1267
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1287
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1344
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1368
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1390
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1437
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1471
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1496
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1769
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1785
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1826
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1840
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1853
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1863
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1884
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2188
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2320
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2337
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2518
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2714
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2718
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2742
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2748
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2753
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2758
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2764
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2800
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2804
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2811
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2883
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2905
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2913
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2928
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2932
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2943
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2947
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2951
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3098
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3219
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3508
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3519
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3542
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3935
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3988
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4099
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4117
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4121
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4125
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4135
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.bytes = nil
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4396
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4406
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4412
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4416
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4420
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4424
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4430
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4434
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4439
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4453
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4459
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4463
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = ""
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.val = ":="
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4516
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4532
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4545
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4549
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.val = ""
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4587
		{
			yyVAL.val = ""
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4625
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 798:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4635
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4639
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4643
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4647
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.bytes = []byte(nil)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4680
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = ""
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.val = Restrict
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = Cascade
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.val = NoAction
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = SetDefault
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = SetNull
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = true
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = true
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.val = false
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4813
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4817
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4945
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4953
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4987
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4991
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5075
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5079
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5092
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5099
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5108
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5116
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5126
		{
			yyVAL.val = false
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.val = true
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = ""
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5154
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5158
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5163
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 917:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5167
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 918:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5176
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5187
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.val = ""
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.val = ""
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = string("")
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5225
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5254
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5274
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5293
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5299
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5314
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 938:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5330
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5347
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5371
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5439
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5458
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5468
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5478
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5488
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5508
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5518
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5528
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5538
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5553
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5569
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5579
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5589
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5605
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5619
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5633
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5647
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5661
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5675
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5688
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5701
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5711
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5721
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5733
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5747
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5761
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5788
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5798
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5828
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5845
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5858
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5873
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5887
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5908
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5929
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5948
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5978
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6002
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6006
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6010
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6014
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6022
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6026
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6030
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6034
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6042
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6050
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6058
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6062
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6066
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6070
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6086
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.val = true
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6152
		{
			yyVAL.val = false
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6162
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6182
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6190
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6195
		{
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6200
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6214
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6220
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6228
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6232
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6236
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6240
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6244
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6248
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6252
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6256
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6260
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6264
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6268
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6285
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6309
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6314
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6318
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6324
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6328
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6334
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6338
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1070:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6344
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1071:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6374
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1072:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6400
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1073:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6428
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6458
		{
			yyVAL.val = EventName{}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6462
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6468
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6472
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6484
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6508
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6524
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6528
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6534
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6552
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6572
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6590
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6607
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6624
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6644
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6664
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6679
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6694
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6713
		{

		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6717
		{
			yyVAL.val = Restrict
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6721
		{
			yyVAL.val = Cascade
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6727
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6740
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6755
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6761
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6765
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6769
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6781
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6785
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6789
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6793
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6799
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6803
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6810
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6820
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6828
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6832
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6838
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6842
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6846
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6850
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6856
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6878
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6901
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6913
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6926
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6939
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6961
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6983
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7003
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7016
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7026
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7037
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7047
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7057
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7068
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7080
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7092
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7106
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7119
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7130
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7144
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7156
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7166
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7177
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7190
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7200
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7212
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7223
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7236
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7245
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7256
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7267
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7278
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7289
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7303
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7313
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7323
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7333
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7351
		{
			yyVAL.val = false
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7355
		{
			yyVAL.val = true
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7361
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7365
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = ""
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7375
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7379
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7385
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7389
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7393
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7397
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7403
		{
			yyVAL.val = ""
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7407
		{
			yyVAL.val = SessionStr
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = GlobalStr
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7417
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7429
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7442
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7454
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7458
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7464
		{
			yyVAL.val = &Begin{}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7468
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7474
		{
			yyVAL.val = &Begin{}
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7478
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7482
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7486
		{
			yyVAL.val = &Begin{}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7491
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7495
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7500
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7504
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7509
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7513
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = &Commit{}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7525
		{
			yyVAL.val = &Rollback{}
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7531
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7537
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7541
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7545
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7549
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7555
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7561
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7565
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7569
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7575
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7583
		{
			yyVAL.val = ""
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7587
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7592
		{
			yyVAL.val = false
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7596
		{
			yyVAL.val = true
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7608
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7628
		{
			setAllowComments(yylex, true)
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7632
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7640
		{
			yyVAL.val = Comments(nil)
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7644
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7650
		{
			yyVAL.val = UnionStr
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7654
		{
			yyVAL.val = UnionAllStr
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7658
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7664
		{
			yyVAL.val = IntersectStr
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7668
		{
			yyVAL.val = IntersectAllStr
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7672
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7678
		{
			yyVAL.val = ExceptStr
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7682
		{
			yyVAL.val = ExceptAllStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7686
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7691
		{
			yyVAL.val = QueryOpts{}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7695
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7706
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7717
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7728
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7739
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7750
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7762
		{
			yyVAL.val = ""
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7766
		{
			yyVAL.val = AllStr
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7770
		{
			yyVAL.val = DistinctStr
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7776
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7784
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7795
		{
			yyVAL.val = &StarExpr{}
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7799
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7803
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7807
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7813
		{
			yyVAL.val = &StarExpr{}
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7817
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7821
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7825
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7831
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7835
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7846
		{
			yyVAL.val = ColIdent{}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7849
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7854
		{
			yyVAL.val = Exprs(nil)
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7858
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7863
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7867
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7872
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7876
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7880
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7887
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7910
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7937
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7944
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7952
		{
			yyVAL.val = Window(nil)
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7955
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7961
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7964
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7970
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8010
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8014
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8019
		{
			yyVAL.val = ColIdent{}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8023
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8027
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8031
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8037
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8041
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8045
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8051
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8055
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8069
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8084
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8099
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8105
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8111
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8119
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8125
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8129
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8134
		{
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8136
		{
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8140
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8150
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8165
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8169
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8173
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8177
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8183
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8187
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8191
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8195
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8199
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8205
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8209
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8213
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8219
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8223
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8227
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8231
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8235
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8239
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8245
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8251
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8255
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8261
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = Expr(nil)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8278
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8284
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8288
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8293
		{
			yyVAL.val = Columns(nil)
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8297
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8307
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8341
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8345
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8349
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8353
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = JoinCondition{}
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = JoinCondition{}
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8384
		{
			yyVAL.val = JoinStr
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8388
		{
			yyVAL.val = JoinStr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8392
		{
			yyVAL.val = JoinStr
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8398
		{
			yyVAL.val = StraightJoinStr
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8404
		{
			yyVAL.val = LeftJoinStr
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8408
		{
			yyVAL.val = LeftJoinStr
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8412
		{
			yyVAL.val = RightJoinStr
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8416
		{
			yyVAL.val = RightJoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8424
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8430
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8434
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1389:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8444
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8456
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8462
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8466
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8470
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8475
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8482
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8490
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1399:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8494
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8498
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8502
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8506
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1403:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8510
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8514
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8518
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = &NullVal{}
		}
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8534
		{
			yyVAL.val = &NullVal{}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8538
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8544
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8548
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8554
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8560
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8564
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8570
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8574
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8578
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8582
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8590
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8596
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8600
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8628
		{
			yyVAL.val = Expr(nil)
		}
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8632
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8638
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8642
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8646
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8650
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8654
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8658
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8662
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8666
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8672
		{
			yyVAL.val = ""
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8676
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = BoolVal(true)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = BoolVal(false)
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8692
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8696
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8708
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8712
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8716
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8734
		{
			yyVAL.val = IsNullStr
		}
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8738
		{
			yyVAL.val = IsNotNullStr
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8742
		{
			yyVAL.val = IsTrueStr
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8746
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = IsFalseStr
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8760
		{
			yyVAL.val = EqualStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = LessThanStr
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = GreaterThanStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8772
		{
			yyVAL.val = LessEqualStr
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = NotEqualStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8789
		{
			yyVAL.val = Expr(nil)
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8793
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8799
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8803
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8807
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8819
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8823
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8835
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8839
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8845
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8849
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8855
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8859
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8867
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8871
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8875
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8879
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8883
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8887
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8891
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8895
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8899
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8903
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8907
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8911
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8915
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8935
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8939
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8947
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8951
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8955
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8963
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8977
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8981
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8985
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9005
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1516:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9009
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1517:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1518:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9027
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9031
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9035
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9039
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9063
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9067
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9071
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9075
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9079
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9083
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9092
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9096
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9100
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9104
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9108
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9112
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9116
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9120
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9124
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9128
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9143
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9147
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9151
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1550:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1551:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1553:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1559:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9199
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1560:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9203
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9207
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9211
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1563:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9215
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1564:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9219
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1565:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9223
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1566:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9227
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9231
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1568:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9235
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9239
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9243
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9247
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9252
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9256
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9280
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9284
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9288
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9292
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1581:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9296
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1582:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9300
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9304
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9308
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9316
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9320
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9324
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9328
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9332
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9345
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9349
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9359
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9363
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9367
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9371
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9375
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9385
		{
			yyVAL.val = ""
		}
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9389
		{
			yyVAL.val = BooleanModeStr
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9393
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1603:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9397
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9401
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9407
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9411
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9415
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9421
		{
			yyVAL.val = Armscii8Str
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9425
		{
			yyVAL.val = AsciiStr
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9429
		{
			yyVAL.val = Big5Str
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9433
		{
			yyVAL.val = UBinaryStr
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9437
		{
			yyVAL.val = Cp1250Str
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9441
		{
			yyVAL.val = Cp1251Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9445
		{
			yyVAL.val = Cp1256Str
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = Cp1257Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = Cp850Str
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = Cp852Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9461
		{
			yyVAL.val = Cp866Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9465
		{
			yyVAL.val = Cp932Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9469
		{
			yyVAL.val = Dec8Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9473
		{
			yyVAL.val = EucjpmsStr
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9477
		{
			yyVAL.val = EuckrStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9481
		{
			yyVAL.val = Gb18030Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9485
		{
			yyVAL.val = Gb2312Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9489
		{
			yyVAL.val = GbkStr
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = Geostd8Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = GreekStr
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = HebrewStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = Hp8Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = Keybcs2Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9513
		{
			yyVAL.val = Koi8rStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9517
		{
			yyVAL.val = Koi8uStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9521
		{
			yyVAL.val = Latin1Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9525
		{
			yyVAL.val = Latin2Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9529
		{
			yyVAL.val = Latin5Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9533
		{
			yyVAL.val = Latin7Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = MacceStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = MacromanStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = SjisStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Swe7Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = Tis620Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Ucs2Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = UjisStr
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = Utf16Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = Utf16leStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Utf32Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9591
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9619
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9626
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9630
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9634
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9638
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9642
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9646
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9650
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9654
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9658
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9662
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9666
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9670
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9680
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = Expr(nil)
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9704
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9708
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9714
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = Expr(nil)
		}
	case 1680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9723
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9733
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9737
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9741
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9745
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9749
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9753
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9757
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9765
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9769
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9773
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9777
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9781
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9785
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9791
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9795
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9799
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9803
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9807
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = &NullVal{}
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9837
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9841
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9850
		{
			yyVAL.val = Exprs(nil)
		}
	case 1711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9854
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9860
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9864
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9870
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9875
		{
			yyVAL.val = Expr(nil)
		}
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9879
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9900
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9904
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9910
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = AscScr
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = AscScr
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = DescScr
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9946
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9950
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9954
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9959
		{
			yyVAL.val = ""
		}
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9963
		{
			yyVAL.val = ForUpdateStr
		}
	case 1735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9967
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9971
		{
			yyVAL.val = ShareModeStr
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9977
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9981
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10001
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10005
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10010
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10017
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10021
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10025
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10030
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10037
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10041
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10050
		{
			yyVAL.val = Columns(nil)
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10054
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10060
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10064
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10078
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10082
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10090
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10095
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10099
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10105
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10109
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10115
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10119
		{
			yyVAL.val = ValTuple{}
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10125
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10131
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10145
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10151
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10154
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10158
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10162
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10168
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10172
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10178
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10189
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10202
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10215
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10221
		{
			yyVAL.val = SetScope_Global
		}
	case 1781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10225
		{
			yyVAL.val = SetScope_Session
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10231
		{
			yyVAL.val = SetScope_Session
		}
	case 1783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = SetScope_Persist
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10239
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10245
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10249
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10253
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10263
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10270
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10277
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10281
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = &Default{}
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10289
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10298
		{
			yyVAL.val = 0
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = 1
		}
	case 1800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10303
		{
			yyVAL.val = 0
		}
	case 1801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10305
		{
			yyVAL.val = 1
		}
	case 1802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10308
		{
			yyVAL.val = 0
		}
	case 1803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10310
		{
			yyVAL.val = 1
		}
	case 1804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = ""
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10315
		{
			yyVAL.val = IgnoreStr
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10318
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10320
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10325
		{
			yyVAL.val = struct{}{}
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10327
		{
			yyVAL.val = struct{}{}
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10331
		{
			yyVAL.val = struct{}{}
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10333
		{
			yyVAL.val = struct{}{}
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10336
		{
			yyVAL.val = struct{}{}
		}
	case 1814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10338
		{
			yyVAL.val = struct{}{}
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10342
		{
			yyVAL.val = UniqueStr
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10344
		{
			yyVAL.val = FulltextStr
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10346
		{
			yyVAL.val = SpatialStr
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10348
		{
			yyVAL.val = VectorStr
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = ""
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10353
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10356
		{
			yyVAL.val = ColIdent{}
		}
	case 1822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10366
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10389
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10393
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = string("")
		}
	case 1836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10415
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = string("")
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10420
		{
			yyVAL.val = IgnoreStr
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10422
		{
			yyVAL.val = ReplaceStr
		}
	case 1840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = BoolVal(false)
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10427
		{
			yyVAL.val = BoolVal(true)
		}
	case 1842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10439
		{
			yyVAL.val = BoolVal(false)
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = BoolVal(true)
		}
	case 1846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10448
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10457
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10461
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10469
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10473
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10482
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10487
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10491
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10507
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10513
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10528
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10546
		{
			yyVAL.val = LockRead
		}
	case 1862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = LockReadLocal
		}
	case 1863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10554
		{
			yyVAL.val = LockWrite
		}
	case 1864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10558
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10564
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10570
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10581
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10591
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11522
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11531
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
